<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>anneal.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/anneal/</path>
    <filename>anneal_8h</filename>
    <class kind="class">o2scl::anneal_base</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>anneal_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/anneal/</path>
    <filename>anneal__gsl_8h</filename>
    <class kind="class">o2scl::anneal_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>cli.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>cli_8h</filename>
    <class kind="class">o2scl::comm_option_funct</class>
    <class kind="class">o2scl::comm_option_fptr</class>
    <class kind="class">o2scl::comm_option_mfptr</class>
    <class kind="struct">o2scl::comm_option_s</class>
    <class kind="struct">o2scl::cmd_line_arg</class>
    <class kind="class">o2scl::cli</class>
    <class kind="class">o2scl::cli::parameter</class>
    <class kind="class">o2scl::cli::parameter_string</class>
    <class kind="class">o2scl::cli::parameter_bool</class>
    <class kind="class">o2scl::cli::parameter_double</class>
    <class kind="class">o2scl::cli::parameter_int</class>
    <class kind="class">o2scl::cli::parameter_size_t</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>cli_readline.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>cli__readline_8h</filename>
    <class kind="class">o2scl::cli_readline</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>columnify.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>columnify_8h</filename>
    <class kind="class">o2scl::columnify</class>
    <namespace>o2scl</namespace>
    <member kind="function">
      <type>int</type>
      <name>matrix_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad74e3d017246096a1f09c3028c1ed715</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5ba85478a00ad6bd9af0b1d405cae4d3</anchor>
      <arglist>(std::ostream &amp;os, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3b2661ac0976abc98ee87be00e9e0a1f</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7679a6fd90449f30b49344e32022a9a6</anchor>
      <arglist>(std::ostream &amp;os, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_2d_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a34809f0da2fc2653e4b102655c36c50f</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_2d_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2e4195bd40a6fe3612aa36a317163d28</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad74e3d017246096a1f09c3028c1ed715</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5ba85478a00ad6bd9af0b1d405cae4d3</anchor>
      <arglist>(std::ostream &amp;os, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3b2661ac0976abc98ee87be00e9e0a1f</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7679a6fd90449f30b49344e32022a9a6</anchor>
      <arglist>(std::ostream &amp;os, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_2d_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a34809f0da2fc2653e4b102655c36c50f</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_2d_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2e4195bd40a6fe3612aa36a317163d28</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>constants.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>constants_8h</filename>
    <namespace>o2scl_const</namespace>
    <namespace>o2scl_cgs</namespace>
    <namespace>o2scl_cgsm</namespace>
    <namespace>o2scl_mks</namespace>
    <namespace>o2scl_mksa</namespace>
    <member kind="variable">
      <type>const double</type>
      <name>fine_structure</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>afc051e9e02054944138f1e1780060b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>avogadro</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>acd9df8f2914c38c1c0ad6c7a1ad19100</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pi</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a0a2a2fafe84acb63c54db18738bea22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pi2</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a0a0e09aa16d0d5fed66c7fe49f97454b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta32</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>adc572e016aba81494dcefc2b4df7864b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta2</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a3de86a03a9b0a7df7b9c2d91f9872f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta52</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>ab15271422687a0f49e69c1e5a59584f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta3</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a9f624a3d84fe8b64905c74257a7e0df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta5</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a844501f4740f323948c0256a7692a092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta7</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a6df3178e8f7e4d475e30c0123fd8e5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>sin2_theta_weak</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>ad031dedd9784d7e16a9ccf688448801a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>schwarzchild_radius</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a92033f0d694a989077061b98f861e3c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speed_of_light</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a621093afbf93826bf77e8e34bde8d273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gravitational_constant</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab6b896fc85e665edf75373e83d21e64c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_h</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a45cf7da8a725625becf0406e8f96b4c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_hbar</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a1c54ee1298652d082afbfa278fefc6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>astronomical_unit</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>abe77163ac9316582fc516e79dd7c9f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>light_year</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a51e317deaec10445ae3a1036b88b96fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>parsec</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a3ad8e3ba1723aac41bed03881cf188bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>grav_accel</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a274e070267d85ba1f09aa42b24cdce86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_volt</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a810390a20aa41b8e2eb111900e736e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_electron</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6fe76d9f33f6402dec23c51a10d3fdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_muon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a208f9479e812c9be4b64741df15ae355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_proton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a663d22fdcb70e94d2e2d7bb6bb01b021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_neutron</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a4e1cc50e473057c06cbf23569f2754c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_deuteron</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a36f052aeedfd3b2584af98db05bcf6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_triton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>abda62f22e1716fd649c5bc7253df1040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_helion</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac0dbdd36fc819e6e166f7511abf332f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_alpha</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aa44cb21e1512ce657638ac2ffeb2d70a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rydberg</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a1eea6d59936798a0a9963e956b24e96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>boltzmann</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a307e04b67c8cca7381619d6691975caf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>molar_gas</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aef2b926aa45a6c7d8aa40ce8a4673ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>standard_gas_volume</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>adb55c3bd9a54e2027240ee62c02b6ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>minute</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a58150dd912dad1448238c4bac9819459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hour</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aa0e9c0cb2555f49c2c8b15b03cbf8cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>day</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae95df2647bae6cb29f5e385b627e6daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>week</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a5b5eb0b2b9c612144280d835893f00c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a0f033853f964d7fd3b778b21c24693f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>foot</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6392590b062b4b58457bd92fe9e59e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>yard</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a1130d6015b50aa460e22628ab5eec0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mile</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a40596effb32e69e607f6aa05b05679ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nautical_mile</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a34b52919261853a404dda43e94cc527e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fathom</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>acb426aa97427d8294f072f1757d2acfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mil</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>adbb75ebd3fc0804dc6ccd10a3c6b1dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>point</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a4fdd9b53190ea36da50829256712d90c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>texpoint</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a4a8d16e18c97348733b1393d6c2fc424</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>micron</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ad9455623b744de53671002a8a834f1f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>angstrom</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a46378df359a7d47f6ba45bf1579b2f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hectare</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a89555e964e1042444ef8a49147acf6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>acre</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>abd131c041ba7053d22f7c6528af554ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>barn</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a0951a4b8cd2fa205d924997823d1b6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>liter</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a13c2875962b04f98d17cc6698c4597f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>us_gallon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a95c1ecae8b2c0ed024e97fcffb17217f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>quart</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab25438796cd37b5f79ce45f3473e7ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pint</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>adff30506cd5ce50152d84e5e4f6823cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>cup</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a5014c14e271b1894c2005aab97c326b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fluid_ounce</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab959b26e47f13a385159444cd3eb433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>tablespoon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>afa508bd3ac68480706bf1a8da6e106e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>teaspoon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a21ddf1edc797e1b4b51e6a4d28ab92ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>canadian_gallon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a93d810393e3d8b36c5f768a9aa32c3d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_gallon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aadcffd3f12a2c265944afaeed30c40c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>miles_per_hour</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a4712e640ba5f846d002a8a0ea408f9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilometers_per_hour</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a9bcfd5f89604a71ef2eb66d9fb41ff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>knot</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aa7bc5c1950c831ec0fb246a4c1f04c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_mass</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae4ca41576a790d234df03a3d1f430f7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ounce_mass</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae21db4b189359db3d94ed02b240a966e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a0540b635f49b30933209cff68d528872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>metric_ton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>af962ddb4c1c00be4de3f361c456015d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_ton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac0524b1839a62374e8c8dd489c45b4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>troy_ounce</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a43190fb24798b0a74a1c09dffc2677b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>carat</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>abc36211c2b70ec7df6b5d110e2158af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>unified_atomic_mass</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6ac9812877a4a6e643cc49f034be28b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gram_force</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a24c5f739e0a4a02efc0c86ccf4c0b3d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_force</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a0051310c222f4a78097c11083ea06e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilopound_force</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a8ea6c64853ce7738ebb69f1a53ad62ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poundal</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac54aebebcf210645a47065e30dd63214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>calorie</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ad938deff179a88ed7d28e43c99a45839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>btu</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>afb5ec380f82d67c77acf0a6719c5fc8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>therm</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ad4cbb44c589e8ffc67eb3a0570bbf1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>horsepower</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac83e231a6ebe7128fc646aeb76957afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bar</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aa20a610df3882e66b70b60445187d36e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>std_atmosphere</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6949d1a7045e776ee236ed19a3f17ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>torr</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>abc0243265312cf6e8fce35fbebf66bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>meter_of_mercury</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a62899b0b462123df96f0f8a1f649b076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_mercury</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac6e69d285dfb156282dff4557f5375b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_water</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ad552be9a5c8ded987a024bfcbf51cc87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>psi</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a69f0e25b989baa93ecaacfa761e73013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poise</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ade15b52080e7e92f2e8dee7678b8477b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stokes</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae5dae003e7d33a00d28c83e6f2beee31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stilb</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab2d136ac266773c9570a3127076b8a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lumen</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6b995f6fdcf48f6b1abc43aa71ec6fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lux</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ad64ef98a6f7fb931d8edfdea0df43c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>phot</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac4e553b8a4009554a6fa920bfd7a4fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footcandle</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a456fec3655e668d8c3da593f84fb3274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lambert</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab293dc97e44a0fd0d1e01ac8ebefa8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footlambert</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a00a62d18145f159cedbcc42966d6ae53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>curie</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aa15b649d3d0f3d1e827084b276d23355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>roentgen</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae05f57f34cd90ce36efe420403f33463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rad</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae987e7e1ae681ed97cd9bf0d68795b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>solar_mass</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a72aad60922b01ea20ca9c6981b84cbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_radius</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6c984e624ef271f10dc7087afa13b17e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>newton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a1a2e4b1ea53087f3459b3dca628b503f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>dyne</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a80b469342325aec9b96a6278310645d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>joule</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>af8f481a67578cf0d6fbc18d3544a3a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>erg</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aea77a68eebe561b7c33b181067c53b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stefan_boltzmann_constant</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>afa589a8e428d979f13fa4fb91ede5377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>thomson_cross_section</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a971b28348b408dbf3dc93e4fb6ea7a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>Gfermi</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab97c66116f4aeeb14c16f24dfb396782</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>schwarzchild_radius</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a153bf0bd14d44dc8fc036aa107860763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speed_of_light</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a0093fe51be203563b4a61289a49ce2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gravitational_constant</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a6de3a8669e59f32bf2a4f2db2c76597d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_h</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a37a71eb2be4188f4a6a3f9483e68bd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_hbar</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aab0a89e1db85c00b193b00b262be0cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>astronomical_unit</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2d4fb15ecf04a223cf7b185bab56c47e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>light_year</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a7bebbd2a808d525ffd85d54bca573b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>parsec</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a1c8b59d37c88a4e59e2dbad620a95029</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>grav_accel</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a47c22e63e43212fd02bcaa6bfa33adf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_volt</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a08cda68718359b4f3d70848b932bc973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_electron</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a78c950b8664b3a22cfcc81a21ba2cc17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_muon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a5152cbe12195d30a9efcee9cf2cb107e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_proton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac16af1b9aca77393dc7c811581173f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_neutron</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a6a187ff4a3cb6cb66a51f09ea19ce483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_deuteron</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a75105e8e807e46c2f83520a72c4e001e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_triton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>adae2225f25d8ac803b10ba0406f86ac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_helion</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aad67089d2681172ed0846f1f5a1482ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_alpha</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a6a3ab932d45134185332dc6ea2ff018c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rydberg</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ade630c07d78d5eea345f1740ad607df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>boltzmann</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac50c1ebd93197edd9e066d387c8aa1a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_magnetic_moment</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>af27122e2aec32a7119bb1cda01287b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>proton_magnetic_moment</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a1e20cf57a3bb21518e7aa0d3e29820fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>molar_gas</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>acbacb4f2f82733dfe441fad7075c3467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>standard_gas_volume</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aa89e9c08302cf2c851c783af73f1755b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>minute</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a584dcdb0b4d7969b0311eba26c2f3c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hour</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac4b79132b4795dbe628f02f777fcb3e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>day</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab1480cf742f988ad728a8837c5ac866f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>week</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aacd3bd0cae33d6f6a277817397f4fb4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a072a65c74f22312423dca3fceb13ecbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>foot</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a172dfe73d8bea44480d263d178ddc642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>yard</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a383d7e2a3496a463f9f1133f8a1c0862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mile</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aeb3270c9130e98e81e619f7bb6a6aae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nautical_mile</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ae4aebb6e3a56728e581782c81fa6600f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fathom</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a8c6dc6f7261c2680b3b44d1c56d39f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mil</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac72fb20dea5acbd774739b62ce9dce3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>point</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2733209d56ea56b157e415f009b35f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>texpoint</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac7f5223412164e9d63f24470f1ea6bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>micron</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a0825f5b01ad36fd96356494f2f4ee6e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>angstrom</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a13b961779decf4846cacaed78c107280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hectare</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a58ce86db62b243ba4ab67b224e32e5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>acre</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>acd42c8c5fc7eb845a38307607d3a4bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>barn</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a6914488c5790134647c0e6007d418bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>liter</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a11c2b3854f9edd5a960e49420d2e871b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>us_gallon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a8c958053b921a3a8755ee10101a2e132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>quart</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a38f4952611a10f55a656bb62dd6b9468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pint</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a0aae9d90137a06f84bb7de66cb0b8b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>cup</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a3f46e416e995e80d7814e83bc1646232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fluid_ounce</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>adf13ed838b9ee2809c27e0c4f7faf991</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>tablespoon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a7174c27f7839b94b51a02e42743a7480</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>teaspoon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a177ab2f1992e3108401c2fbcf732105c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>canadian_gallon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a1e60fcfad5dcda4bfe24123f36acff2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_gallon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aaf7078e0a05820ed7c6ba90e5941ca69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>miles_per_hour</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab927ce4b7f2741221cab0f6b5fcb4d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilometers_per_hour</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a896232d5808657953b68527a7d8ae391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>knot</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a8e2ee43ddf8ef9a8f5a6eb2b0ae03652</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_mass</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a62afa43a3d4f6881348dd00046eeed2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ounce_mass</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a603bd596c097a7a1b9c0e9ad483c6e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aadf6be99b20ca85ae13dd610f9aed1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>metric_ton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a462f21e2d58eaa50837fbde0eb1f6a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_ton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a4d2197e03c47bb62fe48204c6d9449a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>troy_ounce</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ad9ef76787be2a0c664194143c9b0e362</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>carat</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a95591938e6a598696e11d809512ab5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>unified_atomic_mass</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a90fc88f2bad9cb82a4a199c939d5f457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gram_force</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aa0a988c901f94518810c873fdd1ee620</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_force</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ad182f68ba152cb7cf52d47624576bdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilopound_force</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>abd475edbd35beb7b7f67968354e8f9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poundal</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2493a727bd197a0caaf50d8de0698907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>calorie</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2ace9919bcd99aacd97728ad49701807</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>btu</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a5dde56366493428cbd986c7556a2eca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>therm</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a5b3cad085919c14f9dc36a30178c3367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>horsepower</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ad4c1a39e38e34c9d686e5d58ef870f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bar</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2173b2cc7b793db86ffa998637ce91e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>std_atmosphere</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2aea996f25c2b74e0f820814b20e6223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>torr</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a5f2952757ccb5e2a33291ffc3cbc050b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>meter_of_mercury</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2f57305ddd9d4de4b262a6f0f37b5804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_mercury</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a25b0c89c782efa3c2323d37dad05cb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_water</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a76c8e5fe037027e28cf5c64a14a01b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>psi</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a84c3ba800f750a2a7477719308e94b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poise</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab18581f1767263871fd64aeeddfd694d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stokes</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab745870a97829e56982ec84577733eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>faraday</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>accb89b86b1ab6a2e89908b649772dcb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_charge</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a650730790907ba61d46f7306b7d5f43a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stilb</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a28450aef28ba48bf8ce62419f04fa1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lumen</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aff2369201586656483966083cec27a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lux</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab076e7a47d0ebb16bd32e5c33f712620</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>phot</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac28d7958f28aae3e6f915fac04ac3a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footcandle</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a4a8f0e83da2003fca41714c77d716b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lambert</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a752b3730791848bc7533db19351303b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footlambert</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab7fd16f7542515beebbe1e224412585b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>curie</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab7c11468c3c2c8019ef1d24a5cc15e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>roentgen</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a502ed92afa4020e702f9b41ae2d19ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rad</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab8530ece0ee21cafc73e879956d32b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>solar_mass</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a71f3baa4aae44cbedef837eaf22fcc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_radius</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aa6e5318698306167af71a571d73cf643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>newton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a7c33dc5ff03966224a886ba3cb549b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>dyne</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2797756ea9afd7f28e815c84222f31d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>joule</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a05a2ebaf255b3b1c9a72e3e1a0b0e43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>erg</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ae42f205d91172704aa0deef5c4e7235a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stefan_boltzmann_constant</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a797b9d38b40e2b97030328e4319cdec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>thomson_cross_section</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a7d15a6d9e75c2b82eb0db988acc8895a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_magneton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a4d0a4ea1e2243db8dde6733ae8b2f20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nuclear_magneton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a1e70445fc1a6152b6175db1f11386b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>Gfermi</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac4b5dc847fadc59dc953bf3f4199af66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>helgc_tcb</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5ac3bbc1c4cd949578999d5614fec4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>helgc_tdb</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a1c0e2450c01c4874fe64c75edfba6e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>schwarzchild_radius</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aea9c09a159d1fe54703ba93d5d0da638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speed_of_light</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aa3c2322edb78659ed945bd3cdba1e097</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gravitational_constant</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a81a25b10c3ea3ddec1f7af8d596c5710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_h</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a55302e7564c9aa5391fe30ced77e2fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_hbar</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab8b28242f3cf4a2957024081893dc5fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>astronomical_unit</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aad867a13d1d94f0d813a138acc5e7146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>light_year</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a377cd4e21f9185d9e5641b530632f30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>parsec</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a50f61d06b6a2645343a8fd1c381aa735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>grav_accel</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a631a8e1546c961c59ddc7aa93141c03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_volt</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2c422ea99a9979a3e09afae1588f3c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_electron</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a9febd3bb3501948551d6d7edc147c3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_muon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aa36c4a7293abc7921a9e12ce61720abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_proton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>afb207e43d5694dcdae25a7170ff7b09f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_neutron</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ad4b8863d7e407e63ade27e940728679b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_deuteron</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab699e064f916ddc812cf21e0d60c6137</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_triton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a12109544e6feaaab83bb387f16edfb3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_helion</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a93fb2fffb5def540e252bade71247d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_alpha</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2430e944a69f5fb1b92e3d35c8bd46d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rydberg</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>af3780b105d3be466007c1f5746149a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>boltzmann</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a798c90131799c6015080acd0251a106c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_magneton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a08f2a78d2a2c8550d34af359707b456f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nuclear_magneton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a19b3681e23e45a3098002128ebd55ce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_magnetic_moment</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a790220a0f29fd588797830cf1458e431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>proton_magnetic_moment</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a657f93667e7af493122207cfce17bd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>molar_gas</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a1858ac81380b97fdd0cc7302a081466b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>standard_gas_volume</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab3940de0bca684faf71bccd5e87be86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>minute</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a3c311477e34d74280214f44fb76f0a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hour</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>acee084f675ff0460386821d026b94975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>day</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a7c2772b2d7b77490cdf21182dbb7cedb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>week</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab18181775116d718856b074fd448edde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a3c198d2748fe9ba9c80703db62ce76d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>foot</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ac52987428ec4ceea6f772455c2a09331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>yard</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a32cba98670f8483ab01b4a4d2dc61a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mile</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a803bc01c26817701bfb953e40539e094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nautical_mile</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a78e84f6ec237d27bec0bce1be93cfde0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fathom</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>af7f73d0f8974a1c53d7c28225b170f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mil</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a1fe9293c4a6c6cc086794bd78921c7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>point</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a57bae1d21d0fbf66fd5d6721c64e4213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>texpoint</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a24b54e51b7d67fefc7ce1a6b70f4b284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>micron</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a77f9b8ce2b63619874808b7e24393f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>angstrom</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a32aca1481c027f804b829f15ab2df5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hectare</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>af9ee4183b8b5d9b4fcdf10a54391b746</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>acre</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a6d7d1af14d320eaaec1cc0987beb0db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>barn</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aa4a6f207175865c7f72beea776b2d86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>liter</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a12390fd22296925eddb1efab87997683</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>us_gallon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a990746c7028314a1da4dfde8d604d205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>quart</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a520de645feb2d8e7816761b8f15fce88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pint</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a6a74fa757bd8a89b6aebe093c5670524</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>cup</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab7fd22c6d580bfd080dbcc109339b726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fluid_ounce</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a3c96987aa0c700561d0c5a49f19b2a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>tablespoon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a895dacb615cc8e17c0db4a5761bee511</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>teaspoon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aa54bbcbce1fa5fb343c5a2716ae04f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>canadian_gallon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aa9e335e3192d30dfe7c1693757f01bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_gallon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a3e5a4c3c633146bc5dbc032bfb21db0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>miles_per_hour</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a6715ac0214165171a0c14ff465d9e6e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilometers_per_hour</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>adbd77a5410bfdcca89687f737d947107</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>knot</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>afcd825c948a3ea325817f735c934a2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_mass</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a1ddc68735d87e2cde834aa0e0cbf9add</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ounce_mass</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5ce9f4b91fefb49fca83f1fa0b6307a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2cc17fd7f109229b1fb3d5e913b34e15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>metric_ton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a535d7d1c0c20c2ec8567b34caf50fa62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_ton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a217a37b532f82c677f87873bee0c8803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>troy_ounce</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a177b3e209480cd2fb162f07c461716cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>carat</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a43ae14cec47ec7d3148a08752d11da5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>unified_atomic_mass</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>af81fafd9134a92c6b8e18cff315c4b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gram_force</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2f60b478c844c1cbcdd9cbc0d46a1c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_force</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a447a8b967e9f6ae15ab1e55185e88d1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilopound_force</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>af8ec8118b9c1059372dc046009c7f199</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poundal</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2700870c93f78385a4c23caee5c95f2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>calorie</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a98c00afca1ca16c515c5b418cc0e8081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>btu</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aabe07945229cdfa5c86fe1fba3234851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>therm</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a6bd8d660db94693a1e62fa0568e49b11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>horsepower</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ac1f4311a969edfc239e61f0952035f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bar</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a041be36dba860fc1d984d1edca037521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>std_atmosphere</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a835e09511d5c907b5dd7e52c9696b1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>torr</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5bc9476f992b4834045aabf1b1053990</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>meter_of_mercury</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aea209aaa1e537253203306c89a927832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_mercury</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5b7fe820340da7a8a4faab50bfac64f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_water</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ad1722eb03026f3254494a968355956a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>psi</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a34e9111d6c191ac9c88d405a20d87d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poise</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ae7cc05bb3cb3fb72fa596973b3ac990f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stokes</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a8c5f47e0b965de7eb04de6b55acc203a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>faraday</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5cb8da61ca9b9240a189a473bd4e10c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_charge</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5c461e6c022bff827a32b9d375597650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gauss</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a4f14f4b47a07c1e1da150f4f8e6ceea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stilb</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2a06e8ddd8b1189d6e4810e4883b94a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lumen</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a070216a63df0b3652e2173c58996a5c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lux</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a685df717e36202fff07188c3fb8fee06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>phot</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a6a42c284618e67233655ca4aef10520e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footcandle</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a50d3621393fdb8b8dc86d88c2c66ec47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lambert</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>acc4bc24ccd41b2916b158fc8f0789b48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footlambert</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a08200e31d698ee5bb68beecb809808de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>curie</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ac67a5bf657eaf5e22edb418167a7e988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>roentgen</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aead7ec1844306cd1fc5dfbbb88b7b583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rad</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5ed6674ded5a75644985702b56dfab54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>solar_mass</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a506eaef591f9ce66c8074952ce68692d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_radius</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ad0214a5411724c6ca60d89641c2932aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>newton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a063a611acfb44363578ecc6510aae902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>dyne</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a029e8d45cf48910a848de8fd6135a0d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>joule</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2defd2b8061d8a4834083a7e91ee35b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>erg</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a1bc369630e42ba37c7bb4e04d5dd52c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stefan_boltzmann_constant</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>acad7d321ebdb6f63555ed8c4611495c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>thomson_cross_section</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab76e352dc3e74958e47fd79fb19cc06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>vacuum_permittivity</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5d4b238092be191a0f67d3d4c7a9b252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>vacuum_permeability</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a31c60a786712becee3f13530d52c2b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>Gfermi</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a7b1b5427dcc5ada8d7210cbc85951757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>helgc_tcb</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a6f5594c413153d83959d929cc0a63d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>helgc_tdb</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ae6501b8257cf5bee18669903770f6f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>schwarzchild_radius</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>add51bae0b5f8e6f95dc26c7501762751</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speed_of_light</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a813c0f49a29b34a96772789fe4bd2828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gravitational_constant</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ae7b6a2103f95bc60e3f7bddcb6adee6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_h</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a3c88afbc9cabc02a3928b9bfc23fbc72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_hbar</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>adce9ec90fef2f269f625d49467715626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>astronomical_unit</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ad0e260a65fa74d1ffa19685b4e8ca685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>light_year</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a6c4c29e68d21fa89c20fddee58857299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>parsec</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a787cccb1b2bf66bcaad91c144d5eda8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>grav_accel</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ad75b72c67235b19a457b8fad8765fb31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_volt</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a337aca3f3e3eb0eafb1bbcd9452ddd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_electron</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac17c980d04ea0850f05ba443e6e308f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_muon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a84079c80d40a41c917dbf8d3cd9975f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_proton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a07303e6de9c38c0747c96b9ff7dff196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_neutron</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a724b565c2bc86efd653d06db0499345d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_deuteron</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab0780507fdeae220555c92e14d61eb38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_triton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a114b6a77a6ad2474e19abbb04ebc510f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_helion</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a40616268cb230e920f36bcc95473cdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_alpha</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a0826aa59024750766215ecb6d234e48f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rydberg</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a11a510620d017bb7add0ea157d682065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>boltzmann</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af55f178ab09f67afa532db40d365d977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_magneton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a0aab4c2887b1a64d0e6b85215b65f734</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nuclear_magneton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab33448a00e7a004143d4bb972a1b6bfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_magnetic_moment</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac4141458b4d852e4f99a05cca50fe7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>proton_magnetic_moment</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a368b731cd8520556fe2db3b806889170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>molar_gas</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af004c8b2b37ee8b294757b4ce1b711bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>standard_gas_volume</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a9389d5c61cddbbb8be5126e2eff558e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>minute</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a74bbc6de7a9becbc5109c1ccc4590cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hour</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a20ab8f5f22cd8f04d115689f39a6da3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>day</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a88655646e328dc44d4e4e16af4420872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>week</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a8617f011e1e650bc8b170b126f8fe72f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a0788a01a1a511356d7a246d2e7dac21c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>foot</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac4ea16a5f4974e977234ac2c13759361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>yard</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a9a39587493f28bd54e8e51c4fc963002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mile</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a95a0fbda2625c32e678e8d8bc218c3f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nautical_mile</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af30a894aab6737c28429377ee07e7799</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fathom</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a9be049ca831dc92bd3b6e7280c9190a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mil</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a99f892f1afdaffb4c6bd45b54c529184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>point</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>acef4af09c0109b5af516bc057ef8bea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>texpoint</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab8cb52376e5b4f36ee3291d055a1b101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>micron</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a346340cd120fc93f645e5a49447475fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>angstrom</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>aabdb1be6698578d7200a07bf46b2b456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hectare</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a159f75e89077fb214f1dd90cfb529fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>acre</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a8a48296f6dc4257cf2b7b52b6e54bb65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>barn</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac1f8978c431fd47eac83b8c797c0f825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>liter</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a3444b1f79fcb0ab3c0af3cac5a3b3c95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>us_gallon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ae93eea50c119cf362a97fb47c9280494</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>quart</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a1933c000847940b8ba1916823caa94f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pint</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>aa73b3a1f9444a8aae7945323b19f1432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>cup</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a7b4c35c21b8915433ac82199884089e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fluid_ounce</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a31a4eb0be1f5b67e29c9282e186f18c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>tablespoon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a9308b3952895fc7ee140186f2bb0d64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>teaspoon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ae23f46ffc49b61a16d847044fc4a2247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>canadian_gallon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a79bfc9a385cb32e877500280f9f5777e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_gallon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>aa23da3e151208e431930dbbb2c7e1fa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>miles_per_hour</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>aefcb6ce37bee660b8f8d0a0f6fd6a891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilometers_per_hour</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a8566ebaf3784efc61d1093a457eb0948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>knot</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a8d52e134b018703dac41ed9a9ed5a060</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_mass</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a608a3c7f462ee12854e63b374eee4eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ounce_mass</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab19cb60431cea031bdecd158d899f518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a75816872e1e6e522345d50f4ba96e8df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>metric_ton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a5c855ef1decb1ab1d077b388b5e43f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_ton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a45135ad67f666c7aed62e207e1db915a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>troy_ounce</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ad84078d2fc6f9e6d6356c7370bcba50a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>carat</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a199676be18daad0b5fe5d3b42cf3f8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>unified_atomic_mass</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ad629334bdb4f42c96af1a33b3cc5a2ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gram_force</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a00b6edbc8c97af0695d887d28774523b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_force</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a5e12c62a84cf017348ac494107c1c68f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilopound_force</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ad328789c0881966dca1299f40b164b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poundal</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a48bffa7a0284558ce484187835c50e59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>calorie</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a1e26b9a271fcdb3660c93b9b11ae35e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>btu</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab19bbdc075ed2cdbad0b79c9c7432e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>therm</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a990db855f7c60a659c9360052d10c36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>horsepower</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a706347b92250f84855f40b9794f22150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bar</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a9b778418019fc960a1c7e7b687342d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>std_atmosphere</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ade78e4df1b973b4710f961da71c38ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>torr</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>acf4a82a82a000f4a573ba20e2f5f367c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>meter_of_mercury</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a78d0e737641756000406783460c87f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_mercury</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac804f0cec73e94e4c68c30d8918157d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_water</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac8633749d38bb2fc2d704a4504af51d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>psi</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a314f8f4873e764debaeb3978e3564d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poise</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a78c934d462a005734d54e77fbfa85d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stokes</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a53ec7ffefce105807201afdefd34c0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>faraday</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>abdf1d7a0c5999821a3a7f6108c677824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_charge</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af8f5a1eaf62611a3c7bc0b1187215f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gauss</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab3d67e5812160bd0695baf5b3cce87f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stilb</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a460e53623d1601bb081cfebca5e062b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lumen</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a21b529586c081d94ff3b43181422f520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lux</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a28a87e8b4305d6d96cde4812f066a36f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>phot</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a30e7915d7cd52f1060aeae4ffe44f532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footcandle</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a0e2eefc73482a351bed4539bd30b8d9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lambert</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af1994ed4f74894b8c6a61fb7f7b3278b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footlambert</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a03d21ed2ef1b0a8258adc3e2962d3e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>curie</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>adc5c143eba8924aebe3cd4c34830d316</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>roentgen</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ae73762576e1c7027dc2ed1d53b20cb16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rad</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>addc6eea04dd6a0cec6cf938adb6fe847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>solar_mass</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a5f13cca024ddbc368ade6a264e956006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_radius</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a8bf7187ceffe0a8ba67f352c6236c950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>newton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a4de81b52260a2e2e32db4932c3ef64e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>dyne</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a606830b5a290c55d0871d3a8da642a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>joule</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af1fca678e29dd8a29dc15d1617d736fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>erg</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>acd61d717cd8062f09788d80b15a2e316</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stefan_boltzmann_constant</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a40f8b964d2a40b1e0f28eaf9a407f4d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>thomson_cross_section</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>aa236b1e43a45715e91790e4f01709d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>vacuum_permittivity</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a829aff17f9214b5ddfb79ed3b27ce44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>vacuum_permeability</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a92da14e638cd22b91a4c1b64972a2406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>Gfermi</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af28872bdafb2d32ed1e377b5b242a1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hc_mev_fm</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a9b260350322bf198b67294eb1e5d01e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hc_mev_cm</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a3b0d6ac7a410407d62395fc7dfdba4f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ec_gauss_fm2</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>ab570404870ab6ac4e9159b56e516961e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gauss2_fm4</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>af6780f06736c9185f837376a08937d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_lambda_MeV</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>ab83096733780d9a12e7443e637e033d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_gaussian</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a5d289f072d67d1ddd8e7da17e49f7ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_hlorentz</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>abdefb744f419e9fcf830346483f8430a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_mksa</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>acef30dc61ca66f415c556fce3972c4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_gaussian</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a5d289f072d67d1ddd8e7da17e49f7ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_hlorentz</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>abdefb744f419e9fcf830346483f8430a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_mksa</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>acef30dc61ca66f415c556fce3972c4c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>convert_units.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>convert__units_8h</filename>
    <class kind="class">o2scl::convert_units</class>
    <class kind="struct">o2scl::convert_units::unit_t</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>err_hnd.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>err__hnd_8h</filename>
    <class kind="class">o2scl::err_hnd_type</class>
    <class kind="class">o2scl::err_hnd_gsl</class>
    <namespace>o2scl</namespace>
    <member kind="define">
      <type>#define</type>
      <name>O2SCL_ERR</name>
      <anchorfile>err__hnd_8h.html</anchorfile>
      <anchor>a54bba9a18fa677e96b170a3e7999ff00</anchor>
      <arglist>(d, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>O2SCL_CONV</name>
      <anchorfile>err__hnd_8h.html</anchorfile>
      <anchor>addaf1fb538eaf8ce8f1bfb4b81bb6353</anchor>
      <arglist>(d, n, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>O2SCL_ERR2</name>
      <anchorfile>err__hnd_8h.html</anchorfile>
      <anchor>a632bc90cbcb0eb0b46b2059206ad71ba</anchor>
      <arglist>(d, d2, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>O2SCL_ERR3</name>
      <anchorfile>err__hnd_8h.html</anchorfile>
      <anchor>a5b720ca7abf277d511f6543ea6feb83b</anchor>
      <arglist>(d, d2, d3, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>O2SCL_CONV2</name>
      <anchorfile>err__hnd_8h.html</anchorfile>
      <anchor>ae3cd9dd7cf6e7ddea6727ba1ff255cbe</anchor>
      <arglist>(d, d2, n, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>O2SCL_CONV_RET</name>
      <anchorfile>err__hnd_8h.html</anchorfile>
      <anchor>a1b03aac00caa063d66bf690b21b9851e</anchor>
      <arglist>(d, n, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>O2SCL_CONV2_RET</name>
      <anchorfile>err__hnd_8h.html</anchorfile>
      <anchor>aa46daee38482d808d4eab7a6f9f7bbc7</anchor>
      <arglist>(d, d2, n, b)</arglist>
    </member>
    <member kind="enumvalue">
      <name>success</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a7a49055f35e1049fb8f9f9503e376ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gsl_failure</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ad43bd8e7f9f53d42468a5cd530ac58a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gsl_continue</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091aadf9413e528a745f21d902ab1d4a4748</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_edom</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a028a5927ddd574adb5a4e8811f818143</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_erange</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ab77536b4a30404e18f9acf0e079369d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_efault</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a6919adaeccdd52cc274dece43c23a868</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_einval</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ae2e00e6b4a62cdfd837800ebf432a4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_efailed</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091af2106aeda5cb343214ab48b970e14bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_efactor</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ac92c1f7e809a661a473a095964d8c5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_esanity</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a851475c2569709e276e806c3eb8711c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_enomem</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a5991eb81a32bf8eda9ef4f9a6ed773ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ebadfunc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a6fda744d5f22556dab072ba8ab5e6bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_erunaway</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a9f357cf36e3f2a7c779bdcf38d705ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_emaxiter</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ab584fb5ade7927daa81479472b2e0e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ezerodiv</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091af877429eb614cc8ed4ff779dbfb58f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ebadtol</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091afe3cc785622693df92c01146f34e5b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_etol</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a5d3c214c351d5c153937a5d900952ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eundrflw</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a4a2ce732fc4be4199eb889297137fec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eovrflw</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a316144f0ecd495ff828f981b8525e63c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eloss</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a97ee7c9625d56553acb1ddee6184c0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eround</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a72e98a7559e2ea051f85a35b29833c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ebadlen</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a48c93e5d7c1ca6d97e6c5f896a5e5362</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_enotsqr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a816751a23a538165fc7ab52de1e626a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_esing</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091adb2a9e20d68fa767ee4fc06b7e4fa995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ediverge</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a7b2c2d75344dff1c7f49f78e65729929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eunsup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091aa1eb232fdc25e667729c5b8ee9131e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eunimpl</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a42ca41e60f86e133b4dbb0ed682db423</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ecache</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a93f18cd46cafaa848e8ded0ebfbd085e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_etable</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a2106bfaacc4aa2dca8434857c03b6cb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_enoprog</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a6526a26915d946bdb8b85e260ed77032</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_enoprogj</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091af204473bf8219b53955bee23c082fb5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_etolf</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a8a531f6cd5416fa7d666e1c5458fbab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_etolx</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ab58c04a0046943dea976f65b7bac06b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_etolg</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a2e1ced97e708c24f5f592036b91b34d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eof</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a6932f484754e1f72f53b694489f9a9cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_enotfound</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a711ebe3ebe83e286a4948b26dec8b3a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ememtype</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ae1ff0072e3b2db55d97867127475b407</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_efilenotfound</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a32a60cc0ced87ca393f065a787900bb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eindex</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a101edf49ff26757455f31d576d80d377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_outsidecons</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a634a31fbafbfc56516cc92990e418905</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error_update</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a54576b609eccddacba07b5239c48ceec</anchor>
      <arglist>(int &amp;ret, int err)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_err_fn</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a967ce342acd79cc9453c7697034dd443</anchor>
      <arglist>(const char *desc, const char *file, int line, int errnum)</arglist>
    </member>
    <member kind="variable">
      <type>err_hnd_type *</type>
      <name>err_hnd</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adcd60e45e495084dda3ed6b6d81609dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>err_hnd_gsl</type>
      <name>alt_err_hnd</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4e88f03beb8a6bee57ce1cc67fb003e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_err_fn</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a967ce342acd79cc9453c7697034dd443</anchor>
      <arglist>(const char *desc, const char *file, int line, int errnum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>exception.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>exception_8h</filename>
    <class kind="class">o2scl::exc_exception</class>
    <class kind="class">o2scl::exc_logic_error</class>
    <class kind="class">o2scl::exc_invalid_argument</class>
    <class kind="class">o2scl::exc_runtime_error</class>
    <class kind="class">o2scl::exc_range_error</class>
    <class kind="class">o2scl::exc_overflow_error</class>
    <class kind="class">o2scl::exc_ios_failure</class>
    <class kind="class">o2scl::err_hnd_cpp</class>
    <namespace>o2scl</namespace>
    <member kind="variable">
      <type>err_hnd_cpp</type>
      <name>def_err_hnd</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adb46f38d30aa221bb7d5bca3dfc7bb92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>format_float.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>format__float_8h</filename>
    <class kind="class">o2scl::format_float</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>funct.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>funct_8h</filename>
    <class kind="class">o2scl::funct_string</class>
    <class kind="class">o2scl::funct_gsl</class>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::function&lt; double(double)&gt;</type>
      <name>funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3d8b83e4be7e3a661c66cffd6b9d8a8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>interp.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>interp_8h</filename>
    <class kind="class">o2scl::interp_base</class>
    <class kind="class">o2scl::interp_linear</class>
    <class kind="class">o2scl::interp_cspline</class>
    <class kind="class">o2scl::interp_cspline_peri</class>
    <class kind="class">o2scl::interp_akima</class>
    <class kind="class">o2scl::interp_akima_peri</class>
    <class kind="class">o2scl::interp_steffen</class>
    <class kind="class">o2scl::interp_monotonic</class>
    <class kind="class">o2scl::interp</class>
    <class kind="class">o2scl::interp_vec</class>
    <class kind="class">o2scl::interp_array</class>
    <class kind="class">o2scl::interp_array_vec</class>
    <namespace>o2scl</namespace>
    <member kind="enumvalue">
      <name>itp_linear</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78a255b406669c12ca79df6be9eb3d1ff96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_cspline</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78ac8a8e58a51faa593ec7e83f9b7fbca10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_cspline_peri</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78a113fe66b3dff1a5a5242d105c1cf5fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_akima</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78aabcee78c427348fb2b16bc979a98eaa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_akima_peri</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78a70f36f21cb8b54d713aea5a92763d11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_monotonic</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78aa6cfd6c2163d610c242dd9ceafc2af57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_steffen</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78ad29e9283c4dd30003fa7585f929775db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_level_count</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa6f230f44998e0752367c07d9dc57247</anchor>
      <arglist>(double level, size_t n, vec_t &amp;x, vec2_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_find_level</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8455c1454e35a49c2cf3bc08c412b040</anchor>
      <arglist>(double level, size_t n, vec_t &amp;x, vec2_t &amp;y, std::vector&lt; double &gt; &amp;locs)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_linear</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a28a1470c475cea29e98a3daceeadd4b6</anchor>
      <arglist>(size_t n, vec_t &amp;x, vec2_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_invert_enclosed_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8d1724edc48b92ce7e3e6f877c35ff7e</anchor>
      <arglist>(double sum, size_t n, vec_t &amp;x, vec2_t &amp;y, double &amp;lev, int verbose=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_region_parint</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4f93d157d98b8fe992445c06b995a151</anchor>
      <arglist>(size_t n, vec_t &amp;x, vec2_t &amp;y, double frac, std::vector&lt; double &gt; &amp;locs, int verbose=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_bound_parint</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1a516926a4747a8661d90908705339ac</anchor>
      <arglist>(size_t n, vec_t &amp;x, vec2_t &amp;y, double frac, double &amp;low, double &amp;high)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>interp_krige.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>interp__krige_8h</filename>
    <class kind="class">o2scl::interp_krige</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>lib_settings.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>lib__settings_8h</filename>
    <class kind="class">o2scl::lib_settings_class</class>
    <namespace>o2scl</namespace>
    <member kind="variable">
      <type>lib_settings_class</type>
      <name>o2scl_settings</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d992c6663b22309673c22009e44a942</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>misc.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>misc_8h</filename>
    <class kind="class">o2scl::gen_test_number</class>
    <class kind="class">o2scl::vec_index</class>
    <namespace>o2scl</namespace>
    <member kind="function">
      <type>data_t</type>
      <name>quadratic_extremum_x</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a514efbfa23d06e94bd7daf205ca03c0b</anchor>
      <arglist>(const data_t x1, const data_t x2, const data_t x3, const data_t y1, const data_t y2, const data_t y3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadratic_extremum_y_full</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adc1a3bcdf0c66bf7aff38e3a75764c2f</anchor>
      <arglist>(const data_t x1, const data_t x2, const data_t x3, const data_t y1, const data_t y2, const data_t y3, const data_t &amp;xmin, const data_t &amp;ymin, const data_t &amp;a, const data_t &amp;b, const data_t &amp;c, const data_t &amp;den)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>quadratic_extremum_y</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6d16293457c7a75922ac2794bfb5619e</anchor>
      <arglist>(const data_t x1, const data_t x2, const data_t x3, const data_t y1, const data_t y2, const data_t y3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadratic_extremum_xy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a37447f74dc14055228a0a72e8b524ac4</anchor>
      <arglist>(const data_t x1, const data_t x2, const data_t x3, const data_t y1, const data_t y2, const data_t y3, data_t &amp;x, data_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadratic_extremum_coeffs</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9534c7a2e881fde8d1dfa28d43a3a326</anchor>
      <arglist>(const data_t x1, const data_t x2, const data_t x3, const data_t y1, const data_t y2, const data_t y3, data_t &amp;a, data_t &amp;b, data_t &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>fermi_function</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8a2c69ef08fca5a16ca41dfdebeaa310</anchor>
      <arglist>(double E, double mu, double T, double limit=40.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pipe_cmd_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a09b56a2b5f7a846d87868ec7d8088bdd</anchor>
      <arglist>(std::string cmd, std::string &amp;result, bool err_on_fail=true, int nmax=80)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pipe_cmd_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afada3607a1d3d633ee47366431768681</anchor>
      <arglist>(std::string cmd, int nmax=80)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>screenify</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aad3cb142933e460acba6694c6edcaa18</anchor>
      <arglist>(size_t nin, const string_arr_t &amp;in_cols, std::vector&lt; std::string &gt; &amp;out_cols, size_t max_size=80)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>count_words</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a321b38cc7488845a84187982917d4986</anchor>
      <arglist>(std::string str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_whitespace</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1c4b9ab50337c0fcd5df21b081f52f8d</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>binary_to_hex</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf7b38453474c1d54f7bc88e54a88261</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RGBtoHSV</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae9d5cb5c639803ef4add58f38ae2b2de</anchor>
      <arglist>(double r, double g, double b, double &amp;h, double &amp;s, double &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HSVtoRGB</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac5395cf1e49228ae74149a048be6472d</anchor>
      <arglist>(double h, double s, double v, double &amp;r, double &amp;g, double &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>fermi_function</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8a2c69ef08fca5a16ca41dfdebeaa310</anchor>
      <arglist>(double E, double mu, double T, double limit=40.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pipe_cmd_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a09b56a2b5f7a846d87868ec7d8088bdd</anchor>
      <arglist>(std::string cmd, std::string &amp;result, bool err_on_fail=true, int nmax=80)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pipe_cmd_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afada3607a1d3d633ee47366431768681</anchor>
      <arglist>(std::string cmd, int nmax=80)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>screenify</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aad3cb142933e460acba6694c6edcaa18</anchor>
      <arglist>(size_t nin, const string_arr_t &amp;in_cols, std::vector&lt; std::string &gt; &amp;out_cols, size_t max_size=80)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>count_words</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a321b38cc7488845a84187982917d4986</anchor>
      <arglist>(std::string str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_whitespace</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1c4b9ab50337c0fcd5df21b081f52f8d</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>binary_to_hex</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf7b38453474c1d54f7bc88e54a88261</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RGBtoHSV</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae9d5cb5c639803ef4add58f38ae2b2de</anchor>
      <arglist>(double r, double g, double b, double &amp;h, double &amp;s, double &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HSVtoRGB</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac5395cf1e49228ae74149a048be6472d</anchor>
      <arglist>(double h, double s, double v, double &amp;r, double &amp;g, double &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mm_funct.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>mm__funct_8h</filename>
    <class kind="class">o2scl::mm_funct_strings</class>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::function&lt; int(size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::vector&lt; double &gt; &amp;) &gt;</type>
      <name>mm_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a422958f46c53214be7016ee1744877b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>multi_funct.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>multi__funct_8h</filename>
    <class kind="class">o2scl::multi_funct_strings</class>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::function&lt; double(size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;)&gt;</type>
      <name>multi_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a64e3760cc91a574c24f98ba84eed7faa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search_vec.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>search__vec_8h</filename>
    <class kind="class">o2scl::search_vec</class>
    <class kind="class">o2scl::search_vec_ext</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>shunting_yard.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>shunting__yard_8h</filename>
    <class kind="struct">o2scl::TokenBase</class>
    <class kind="class">o2scl::Token</class>
    <class kind="class">o2scl::calculator</class>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::queue&lt; TokenBase * &gt;</type>
      <name>TokenQueue_t</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a44162b7fb15edb6ced42e806982662cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>tokType</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae0f6f533472442d0763060f6dcd53f19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>string_conv.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>string__conv_8h</filename>
    <namespace>o2scl</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>ptos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7308531665edce5919dd14311a9a40ff</anchor>
      <arglist>(void *p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>itos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a968e4143466c3aed25a6316847cbedef</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>szttos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae0ffc968ed86964c3222b2d8648e3ae9</anchor>
      <arglist>(size_t x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>btos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af75ca967a26913e32589568bf9a9bf6c</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>dtos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa55666c3656eff29a7099be05db41ef0</anchor>
      <arglist>(double x, int prec=6, bool auto_prec=false)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size_of_exponent</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a58ad04cc01625e33fb00301291117b50</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>dtos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8cffc44b54905f5274034086e87b645b</anchor>
      <arglist>(double x, std::ostream &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoi</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a223766b21432bafff14007a126fd40ba</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoi_nothrow</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a002a2b0e00e67eca082f1f154e593fbd</anchor>
      <arglist>(std::string s, int &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>stoszt</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a174b00b7e123a6db365adac2aedcdf6b</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoszt_nothrow</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aabf1a8d3ff6290e83309bd7c23ee8682</anchor>
      <arglist>(std::string s, size_t &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stob</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adadfa85e55a943113bc836a1631ceaf0</anchor>
      <arglist>(std::string s, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>stod</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7c4946400fc2e5f2c04403fb609b45ec</anchor>
      <arglist>(std::string s, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_minus_sign</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2afbd13cadbc6ac8c9bf69fa284bfb68</anchor>
      <arglist>(double *x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_number</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a98c17c6473daf7ac1d9062bf284b0c24</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>function_to_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab1571bf8025b44e55d12be6d5470b122</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ade45b50d37f9cb625a865f9176bcdf96</anchor>
      <arglist>(std::string str, std::vector&lt; std::string &gt; &amp;sv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewrap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a611de09c5a2931e19acaee4e8e2bfba2</anchor>
      <arglist>(std::string str, std::vector&lt; std::string &gt; &amp;sv, size_t ncol=79)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ptos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7308531665edce5919dd14311a9a40ff</anchor>
      <arglist>(void *p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>itos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a968e4143466c3aed25a6316847cbedef</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>szttos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae0ffc968ed86964c3222b2d8648e3ae9</anchor>
      <arglist>(size_t x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>btos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af75ca967a26913e32589568bf9a9bf6c</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>dtos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa55666c3656eff29a7099be05db41ef0</anchor>
      <arglist>(double x, int prec=6, bool auto_prec=false)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size_of_exponent</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a58ad04cc01625e33fb00301291117b50</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>dtos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8cffc44b54905f5274034086e87b645b</anchor>
      <arglist>(double x, std::ostream &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoi</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a223766b21432bafff14007a126fd40ba</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoi_nothrow</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a002a2b0e00e67eca082f1f154e593fbd</anchor>
      <arglist>(std::string s, int &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>stoszt</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a174b00b7e123a6db365adac2aedcdf6b</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoszt_nothrow</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aabf1a8d3ff6290e83309bd7c23ee8682</anchor>
      <arglist>(std::string s, size_t &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stob</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adadfa85e55a943113bc836a1631ceaf0</anchor>
      <arglist>(std::string s, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>stod</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7c4946400fc2e5f2c04403fb609b45ec</anchor>
      <arglist>(std::string s, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_minus_sign</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2afbd13cadbc6ac8c9bf69fa284bfb68</anchor>
      <arglist>(double *x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_number</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a98c17c6473daf7ac1d9062bf284b0c24</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>function_to_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab1571bf8025b44e55d12be6d5470b122</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ade45b50d37f9cb625a865f9176bcdf96</anchor>
      <arglist>(std::string str, std::vector&lt; std::string &gt; &amp;sv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewrap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a611de09c5a2931e19acaee4e8e2bfba2</anchor>
      <arglist>(std::string str, std::vector&lt; std::string &gt; &amp;sv, size_t ncol=79)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>table.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>table_8h</filename>
    <class kind="class">o2scl::table</class>
    <class kind="class">o2scl::table</class>
    <class kind="class">o2scl::table::col</class>
    <namespace>o2scl</namespace>
    <namespace>o2scl_hdf</namespace>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aae9226e07a61965c0c7e697e389e625b</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table&lt; vec_t &gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input_data</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a0da877732d7fe66f8302ffc35dde3749</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table&lt; vec_t &gt; &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>table3d.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>table3d_8h</filename>
    <class kind="class">o2scl::table3d</class>
    <namespace>o2scl</namespace>
    <namespace>o2scl_hdf</namespace>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a49af35294bef5f02a943958b18196bae</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table3d &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aadab787413b2b39f020c5a05023a2b37</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table3d &amp;h, std::string name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>table_units.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>table__units_8h</filename>
    <class kind="class">o2scl::table_units</class>
    <class kind="class">o2scl::table_units</class>
    <namespace>o2scl</namespace>
    <namespace>o2scl_hdf</namespace>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>af2c365ffa07987243ca245242c940c13</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table_units&lt; vec_t &gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input_data</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a5a5449502cbd3eb44b30f7a965147311</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table_units&lt; vec_t &gt; &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tensor.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>tensor_8h</filename>
    <class kind="class">o2scl::tensor</class>
    <class kind="class">o2scl::tensor1</class>
    <class kind="class">o2scl::tensor2</class>
    <class kind="class">o2scl::tensor3</class>
    <class kind="class">o2scl::tensor4</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>tensor_grid.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>tensor__grid_8h</filename>
    <class kind="class">o2scl::tensor_grid</class>
    <class kind="class">o2scl::tensor_grid</class>
    <class kind="class">o2scl::tensor_grid1</class>
    <class kind="class">o2scl::tensor_grid2</class>
    <class kind="class">o2scl::tensor_grid3</class>
    <class kind="class">o2scl::tensor_grid4</class>
    <namespace>o2scl</namespace>
    <namespace>o2scl_hdf</namespace>
  </compound>
  <compound kind="file">
    <name>test_mgr.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>test__mgr_8h</filename>
    <class kind="class">o2scl::test_mgr</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>uniform_grid.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>uniform__grid_8h</filename>
    <class kind="class">o2scl::uniform_grid</class>
    <class kind="class">o2scl::uniform_grid</class>
    <class kind="class">o2scl::uniform_grid_end</class>
    <class kind="class">o2scl::uniform_grid_width</class>
    <class kind="class">o2scl::uniform_grid_end_width</class>
    <class kind="class">o2scl::uniform_grid_log_end</class>
    <class kind="class">o2scl::uniform_grid_log_width</class>
    <class kind="class">o2scl::uniform_grid_log_end_width</class>
    <namespace>o2scl</namespace>
    <namespace>o2scl_hdf</namespace>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>acf5f40501d2269e2b85dfa270357fa1b</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::uniform_grid&lt; double &gt; &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a7d95e5b5f57b42434d378bcc55fc53c1</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::uniform_grid&lt; double &gt; &amp;h, std::string name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vector.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/base/</path>
    <filename>vector_8h</filename>
    <class kind="class">o2scl::gsl_vector_wrap</class>
    <class kind="class">o2scl::gsl_matrix_wrap</class>
    <class kind="class">o2scl::matrix_row_gen</class>
    <class kind="class">o2scl::matrix_column_gen</class>
    <class kind="class">o2scl::const_vector_range_gen</class>
    <class kind="class">o2scl::vector_range_gen</class>
    <class kind="class">o2scl::const_vector_range_gen</class>
    <class kind="class">boost::numeric::ublas::vector</class>
    <class kind="class">boost::numeric::ublas::matrix</class>
    <namespace>o2scl</namespace>
    <namespace>boost</namespace>
    <namespace>boost::numeric</namespace>
    <namespace>boost::numeric::ublas</namespace>
    <member kind="function">
      <type>void</type>
      <name>vector_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a02417d2b00aa005ff04574aa8c03bb34</anchor>
      <arglist>(const vec_t &amp;src, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8b8b22544b4fcae8f2647c674a8d4683</anchor>
      <arglist>(size_t N, const vec_t &amp;src, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8ade334b191ec197ea0d84667d8cc07a</anchor>
      <arglist>(mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af930eca46d1cfd5d2cf30b344e8b1793</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf219302bef071227fc2366a17c9807e</anchor>
      <arglist>(mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7b4e73c788f3abed3cade57f464e610e</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abdd9e041d8c92abd474286b95cade743</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6110137ef5e62e52f4b07538e99db63f</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d592ba1a2c4f39d903c1d2d4233962b</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a791530a87d122c8ecf926a4f35bf590a</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a12a94c2604b3bb6d9fa18b84c0d8e8a4</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51246b21a0abb7b1c455f9f8af016257</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aecfc647a653026041df7f5c25e569c7c</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a16b85cce1af037e6f239dee75db3cfd6</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abd1175d497c4131fe04f019fee043614</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a28ac2bf6bf0f45ecd892066bf19afe88</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e104ce58de7f972e6dfc0a4b12d37b5</anchor>
      <arglist>(size_t N, vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a873935dc6a2855f6013b2f2e15553c41</anchor>
      <arglist>(vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a32ff5d327fd44b4267f7912c50b393d1</anchor>
      <arglist>(size_t N, vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae4dc3da53e15838324d6f8ecce7868d9</anchor>
      <arglist>(vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6b776c86146387aabf0608faadf5ecdc</anchor>
      <arglist>(vec_t &amp;v, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7f34bc39958141634896828ccbad8ee3</anchor>
      <arglist>(vec_t &amp;v, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aae5f940899bda5c7cad74222537c2786</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;v1, mat2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acdf07cebc59be91f5ba1dd21427cfda3</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;m1, mat2_t &amp;m2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f8b47529c133ab2c93dbd454c69a2d1</anchor>
      <arglist>(mat_t &amp;m, size_t i1, size_t j1, size_t i2, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a25c04833b162adba8d7ebb7d1052fc6c</anchor>
      <arglist>(mat_t &amp;m, size_t i1, size_t j1, size_t i2, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_cols</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4d89d5f130917b6de091f933c4cbb576</anchor>
      <arglist>(size_t M, mat_t &amp;m, size_t j1, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_cols_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab2458563fabbe1f3bc45281d85ac24a9</anchor>
      <arglist>(size_t M, mat_t &amp;m, size_t j1, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_rows</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7a3db5aaf404a9346461562f4b94bebc</anchor>
      <arglist>(size_t N, mat_t &amp;m, size_t i1, size_t i2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_rows_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9fb14871ab6f495c82e39afed6555b44</anchor>
      <arglist>(size_t N, mat_t &amp;m, size_t i1, size_t i2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_downheap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a590219137f7b0f2f7d5c0b66e875fbde</anchor>
      <arglist>(vec_t &amp;data, size_t n, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a35e1d6ca3c938c9e11922bac862a9ea8</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_index_downheap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aebfca331d7cb98960504fb04939d8e29</anchor>
      <arglist>(size_t N, const vec_t &amp;data, vec_size_t &amp;order, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a59db05b504255c1db9b56564c1d5171b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, vec_size_t &amp;order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a962a787042c35b410ca98da754f396ba</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adc9b307111fc7f4cfbfb3d3eadd5796f</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_t &amp;smallest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4712c3a5782c1879f53a940535f6df37</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_t &amp;smallest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a02dff2a07712e4c82b9dcb9b5c5237ff</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa41b6eb354683086623a3af2ecf47e08</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_largest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a910ca6b7e9211703645e622e6a426ac8</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_t &amp;largest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_largest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acc0afa96f770e47b4a2c66dc6d19c894</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_t &amp;largest)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e091cec30eebfedd2bc6a746c2b4334</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf495cc21664cdbb43ce41dbb1939792</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4e8502232fa819c09a92df065170bd1d</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7ac2e5836b263416c7501cd0aec96f82</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t &amp;index, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0459bb607004c255b5bf78bf37629015</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6da2b423e652ea59625cba6e708dec61</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac02f2901f5037cf7d928eab29be79b7a</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6c5635c7850e3b25e2349ac2c0474eb8</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t &amp;index, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>addffe66f62b1e24285d67e8b1bb6ceee</anchor>
      <arglist>(size_t n, vec_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3e753be737bdeaa751d3e7969c0cbda9</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t &amp;ix_min, size_t &amp;ix_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4c3cc22f9d2cb4e4ce34d955d9bbd169</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t &amp;ix_min, data_t &amp;min, size_t &amp;ix_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a264705af22d140f37b30c76f9ec5c850</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3f81b9baf1cb13a1c23becdaf19a6faf</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad_loc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa3a282dd58a9a3c64381b3eb3a501dcc</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4312f3fbe12b124cece5fb777bbf30f2</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a73966881351e95480835d94b565e8b5a</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad_loc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a030f1123ad32d3fa33f9222973fdb0d8</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a755b769f84643cfb804476380fec84a6</anchor>
      <arglist>(size_t m, const size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3aa80f6d4ec775ee12ec8305fdf98524</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max_value_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab063719a1d776103deb6ed2827057d24</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad1d8600ba911a7dadcea14482a017932</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a254ad183db60b84c247f86a5b4b08654</anchor>
      <arglist>(const mat_t &amp;data, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae3d757d4dc0fd020183b54c0301f07da</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a451c9a109a7527fb5617ef5961233384</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min_value_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a56b281b2412cc876fe5c395670dd2299</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a01968adab44fc20c8ece2b6bb0f77962</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4734664ec871c86a87c2d5ff60ba99b9</anchor>
      <arglist>(const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adccb49e43daed33897500de6a649333d</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a136653db5fa08c1061b6539c4606fdb2</anchor>
      <arglist>(const mat_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a03f2ceb1c4a3ed6761f66c12009d97ac</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3f64004b4ce82381a95ebfe539d9635d</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ade159bd27be1da8e1fc5b285537b18a0</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9992b6d3a4d51a74baa869fdc5654c78</anchor>
      <arglist>(size_t n, const vec_t &amp;x, double x0)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa8883ccd1efc961db614d025882264e4</anchor>
      <arglist>(const vec_t &amp;x, double x0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad59087b3d8c1a838e4279e54e373f471</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;A, double x0, size_t &amp;i, size_t &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae5cc6c08d9a9d131af18b46b6aeeee73</anchor>
      <arglist>(const mat_t &amp;A, double x0, size_t &amp;i, size_t &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch_inc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad535d0e50ddc8a34739b39ea66516f52</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch_dec</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab32ca9cb4847fd24f129b97afbd03aa0</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab80f56ba9e5fa1c4f5fc5719433565bd</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aba4bbf78c02d79ceba94d54ea284f47d</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9bf42ebb5ed415c81d2b568c1f5c1d38</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a82c11fca2e8b00c00e72c363dd892bc8</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sum_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af1cb847a613d4d38b45aee949b060fa2</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sum_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4bcc389b6e02e42af921e9d67a2ac488</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_norm</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aef3d50bf6921fd3b8f3080181bc3a744</anchor>
      <arglist>(size_t n, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_norm</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a752b88f2520691cc6c5232111f547c55</anchor>
      <arglist>(const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_norm_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a80b0f747da373d2a7a2e7da1149bd80b</anchor>
      <arglist>(size_t n, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_norm_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aeee678d03e5acdecb608cd119c9df825</anchor>
      <arglist>(const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_set_all</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a22bcebaf5ffc9f8164f2fc42ef9e8499</anchor>
      <arglist>(size_t N, vec_t &amp;src, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_set_all</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9ce48b3aed0ca1f7f60d29d5ea0d173a</anchor>
      <arglist>(vec_t &amp;src, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy_jackknife</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a75714fb3f4e48a8b206ff203159711eb</anchor>
      <arglist>(const vec_t &amp;src, size_t iout, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_rotate</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a76a955210fe82397637ef30e4e7f5a29</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab2547005690dd0e65a16f17dd479320c</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a50944f84816903639f06377d04bbbd66</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a94d0e885f82f0f7a1cc20a9105eb0f42</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a291edca9e836e1def1f3fb08325c0a18</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mat_row_t</type>
      <name>matrix_row</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae00ac0006773b47946a7ee79f3c587d0</anchor>
      <arglist>(mat_t &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>mat_column_t</type>
      <name>matrix_column</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3e9129657cc37ba282ee22e4fd00401e</anchor>
      <arglist>(mat_t &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afd4bc1b029d2511453101e70b220c2fc</anchor>
      <arglist>(std::ostream &amp;os, size_t n, const vec_t &amp;v, bool endline=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6ff07983c873315033cc9b859fca4636</anchor>
      <arglist>(std::ostream &amp;os, const vec_t &amp;v, bool endline=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_grid</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d642aa06be8ece1c80f237f93b01546</anchor>
      <arglist>(uniform_grid&lt; data_t &gt; g, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_set_identity</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae8795a06ae0f4f0eaa779e3fd39f61bb</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>dat_t *</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5c36a3ae58644a7ca409d9899d0c5706</anchor>
      <arglist>(dat_t *v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const dat_t *</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac209e8d3b22174ce5171d49f7088df43</anchor>
      <arglist>(const dat_t *v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4ce8f5d361dd82c7a78e3e1809ae28c1</anchor>
      <arglist>(boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a074521a3971eda03eb1e3b1fe9c5e795</anchor>
      <arglist>(boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aefcd7f01dc4b02216fa8b76e43e1528d</anchor>
      <arglist>(const boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af42f9caeb4a1e3c5c1cc61ad1bf99bb5</anchor>
      <arglist>(boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa8e9549380a13d1a78adbfdad2b95035</anchor>
      <arglist>(boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad5efc04e610729a7c29a1cc6515770d0</anchor>
      <arglist>(const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad2a68a37e9ba84f61cb623ff5642a6ec</anchor>
      <arglist>(const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abdffd4f4a2cdd5f54bbee8803f049185</anchor>
      <arglist>(std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7c536d4c9ad20d12adfbc9ee870077b7</anchor>
      <arglist>(const std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6d127958c4272900d129cfcb097922e8</anchor>
      <arglist>(std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>vector_range_gen&lt; vec_t &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6ea1545cde5f531af67a7deb24c761bd</anchor>
      <arglist>(vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4f82de8ac5cde886cb0a64642d97ce63</anchor>
      <arglist>(vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3592261c902618f3a9c32dc18243e141</anchor>
      <arglist>(const vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1a2e0f764d5c7fced80d8fbcebd26c71</anchor>
      <arglist>(const const_vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; dat_t &gt;</type>
      <name>vector_range_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aea3baa635c82e72919d3ec0d3c957f59</anchor>
      <arglist>(const std::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; dat_t &gt;</type>
      <name>vector_range_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa69306863a1359ed692855e4fc4e4000</anchor>
      <arglist>(const std::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0f52ef1f2196bfdc7f06a7229a1970f6</anchor>
      <arglist>(const arma::mat &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afd453895c4328fa1bfc09063d1bc186c</anchor>
      <arglist>(const arma::mat &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>arma::subview_row&lt; double &gt;</type>
      <name>matrix_row&lt; arma::mat, arma::subview_row&lt; double &gt; &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abcb2c0f0e2963e3016d8856e51d3af9c</anchor>
      <arglist>(arma::mat &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>arma::subview_col&lt; double &gt;</type>
      <name>matrix_column&lt; arma::mat, arma::subview_col&lt; double &gt; &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad59e4f8e12b2d76089bea25feeca45d9</anchor>
      <arglist>(arma::mat &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a661103a085b6e52f758aee8ccd37bc84</anchor>
      <arglist>(const Eigen::MatrixXd &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9510690f4dedea6183746bc891230de4</anchor>
      <arglist>(const Eigen::MatrixXd &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::MatrixXd::RowXpr</type>
      <name>matrix_row&lt; Eigen::MatrixXd, Eigen::MatrixXd::RowXpr &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a242ee88fabfddd0415ea9faeb376a0b4</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::MatrixXd::ColXpr</type>
      <name>matrix_column&lt; Eigen::MatrixXd, Eigen::MatrixXd::ColXpr &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab79db31213dfc4dad3fc7486b662f229</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a02417d2b00aa005ff04574aa8c03bb34</anchor>
      <arglist>(const vec_t &amp;src, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8b8b22544b4fcae8f2647c674a8d4683</anchor>
      <arglist>(size_t N, const vec_t &amp;src, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8ade334b191ec197ea0d84667d8cc07a</anchor>
      <arglist>(mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af930eca46d1cfd5d2cf30b344e8b1793</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf219302bef071227fc2366a17c9807e</anchor>
      <arglist>(mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7b4e73c788f3abed3cade57f464e610e</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abdd9e041d8c92abd474286b95cade743</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6110137ef5e62e52f4b07538e99db63f</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d592ba1a2c4f39d903c1d2d4233962b</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a791530a87d122c8ecf926a4f35bf590a</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a12a94c2604b3bb6d9fa18b84c0d8e8a4</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51246b21a0abb7b1c455f9f8af016257</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aecfc647a653026041df7f5c25e569c7c</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a16b85cce1af037e6f239dee75db3cfd6</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abd1175d497c4131fe04f019fee043614</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a28ac2bf6bf0f45ecd892066bf19afe88</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e104ce58de7f972e6dfc0a4b12d37b5</anchor>
      <arglist>(size_t N, vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a873935dc6a2855f6013b2f2e15553c41</anchor>
      <arglist>(vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a32ff5d327fd44b4267f7912c50b393d1</anchor>
      <arglist>(size_t N, vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae4dc3da53e15838324d6f8ecce7868d9</anchor>
      <arglist>(vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6b776c86146387aabf0608faadf5ecdc</anchor>
      <arglist>(vec_t &amp;v, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7f34bc39958141634896828ccbad8ee3</anchor>
      <arglist>(vec_t &amp;v, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aae5f940899bda5c7cad74222537c2786</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;v1, mat2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acdf07cebc59be91f5ba1dd21427cfda3</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;m1, mat2_t &amp;m2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f8b47529c133ab2c93dbd454c69a2d1</anchor>
      <arglist>(mat_t &amp;m, size_t i1, size_t j1, size_t i2, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a25c04833b162adba8d7ebb7d1052fc6c</anchor>
      <arglist>(mat_t &amp;m, size_t i1, size_t j1, size_t i2, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_cols</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4d89d5f130917b6de091f933c4cbb576</anchor>
      <arglist>(size_t M, mat_t &amp;m, size_t j1, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_cols_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab2458563fabbe1f3bc45281d85ac24a9</anchor>
      <arglist>(size_t M, mat_t &amp;m, size_t j1, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_rows</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7a3db5aaf404a9346461562f4b94bebc</anchor>
      <arglist>(size_t N, mat_t &amp;m, size_t i1, size_t i2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_rows_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9fb14871ab6f495c82e39afed6555b44</anchor>
      <arglist>(size_t N, mat_t &amp;m, size_t i1, size_t i2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_downheap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a590219137f7b0f2f7d5c0b66e875fbde</anchor>
      <arglist>(vec_t &amp;data, size_t n, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a35e1d6ca3c938c9e11922bac862a9ea8</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_index_downheap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aebfca331d7cb98960504fb04939d8e29</anchor>
      <arglist>(size_t N, const vec_t &amp;data, vec_size_t &amp;order, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a59db05b504255c1db9b56564c1d5171b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, vec_size_t &amp;order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a962a787042c35b410ca98da754f396ba</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adc9b307111fc7f4cfbfb3d3eadd5796f</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_t &amp;smallest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4712c3a5782c1879f53a940535f6df37</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_t &amp;smallest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a02dff2a07712e4c82b9dcb9b5c5237ff</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa41b6eb354683086623a3af2ecf47e08</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_largest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a910ca6b7e9211703645e622e6a426ac8</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_t &amp;largest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_largest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acc0afa96f770e47b4a2c66dc6d19c894</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_t &amp;largest)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e091cec30eebfedd2bc6a746c2b4334</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf495cc21664cdbb43ce41dbb1939792</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4e8502232fa819c09a92df065170bd1d</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7ac2e5836b263416c7501cd0aec96f82</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t &amp;index, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0459bb607004c255b5bf78bf37629015</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6da2b423e652ea59625cba6e708dec61</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac02f2901f5037cf7d928eab29be79b7a</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6c5635c7850e3b25e2349ac2c0474eb8</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t &amp;index, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>addffe66f62b1e24285d67e8b1bb6ceee</anchor>
      <arglist>(size_t n, vec_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3e753be737bdeaa751d3e7969c0cbda9</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t &amp;ix_min, size_t &amp;ix_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4c3cc22f9d2cb4e4ce34d955d9bbd169</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t &amp;ix_min, data_t &amp;min, size_t &amp;ix_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a264705af22d140f37b30c76f9ec5c850</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3f81b9baf1cb13a1c23becdaf19a6faf</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad_loc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa3a282dd58a9a3c64381b3eb3a501dcc</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4312f3fbe12b124cece5fb777bbf30f2</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a73966881351e95480835d94b565e8b5a</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad_loc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a030f1123ad32d3fa33f9222973fdb0d8</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a755b769f84643cfb804476380fec84a6</anchor>
      <arglist>(size_t m, const size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3aa80f6d4ec775ee12ec8305fdf98524</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max_value_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab063719a1d776103deb6ed2827057d24</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad1d8600ba911a7dadcea14482a017932</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a254ad183db60b84c247f86a5b4b08654</anchor>
      <arglist>(const mat_t &amp;data, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae3d757d4dc0fd020183b54c0301f07da</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a451c9a109a7527fb5617ef5961233384</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min_value_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a56b281b2412cc876fe5c395670dd2299</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a01968adab44fc20c8ece2b6bb0f77962</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4734664ec871c86a87c2d5ff60ba99b9</anchor>
      <arglist>(const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adccb49e43daed33897500de6a649333d</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a136653db5fa08c1061b6539c4606fdb2</anchor>
      <arglist>(const mat_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a03f2ceb1c4a3ed6761f66c12009d97ac</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3f64004b4ce82381a95ebfe539d9635d</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ade159bd27be1da8e1fc5b285537b18a0</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9992b6d3a4d51a74baa869fdc5654c78</anchor>
      <arglist>(size_t n, const vec_t &amp;x, double x0)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa8883ccd1efc961db614d025882264e4</anchor>
      <arglist>(const vec_t &amp;x, double x0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad59087b3d8c1a838e4279e54e373f471</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;A, double x0, size_t &amp;i, size_t &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae5cc6c08d9a9d131af18b46b6aeeee73</anchor>
      <arglist>(const mat_t &amp;A, double x0, size_t &amp;i, size_t &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch_inc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad535d0e50ddc8a34739b39ea66516f52</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch_dec</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab32ca9cb4847fd24f129b97afbd03aa0</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab80f56ba9e5fa1c4f5fc5719433565bd</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aba4bbf78c02d79ceba94d54ea284f47d</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9bf42ebb5ed415c81d2b568c1f5c1d38</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a82c11fca2e8b00c00e72c363dd892bc8</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sum_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af1cb847a613d4d38b45aee949b060fa2</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sum_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4bcc389b6e02e42af921e9d67a2ac488</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_norm</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aef3d50bf6921fd3b8f3080181bc3a744</anchor>
      <arglist>(size_t n, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_norm</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a752b88f2520691cc6c5232111f547c55</anchor>
      <arglist>(const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_norm_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a80b0f747da373d2a7a2e7da1149bd80b</anchor>
      <arglist>(size_t n, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_norm_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aeee678d03e5acdecb608cd119c9df825</anchor>
      <arglist>(const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_set_all</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a22bcebaf5ffc9f8164f2fc42ef9e8499</anchor>
      <arglist>(size_t N, vec_t &amp;src, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_set_all</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9ce48b3aed0ca1f7f60d29d5ea0d173a</anchor>
      <arglist>(vec_t &amp;src, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy_jackknife</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a75714fb3f4e48a8b206ff203159711eb</anchor>
      <arglist>(const vec_t &amp;src, size_t iout, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_rotate</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a76a955210fe82397637ef30e4e7f5a29</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab2547005690dd0e65a16f17dd479320c</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a50944f84816903639f06377d04bbbd66</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a94d0e885f82f0f7a1cc20a9105eb0f42</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a291edca9e836e1def1f3fb08325c0a18</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mat_row_t</type>
      <name>matrix_row</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae00ac0006773b47946a7ee79f3c587d0</anchor>
      <arglist>(mat_t &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>mat_column_t</type>
      <name>matrix_column</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3e9129657cc37ba282ee22e4fd00401e</anchor>
      <arglist>(mat_t &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afd4bc1b029d2511453101e70b220c2fc</anchor>
      <arglist>(std::ostream &amp;os, size_t n, const vec_t &amp;v, bool endline=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6ff07983c873315033cc9b859fca4636</anchor>
      <arglist>(std::ostream &amp;os, const vec_t &amp;v, bool endline=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_grid</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d642aa06be8ece1c80f237f93b01546</anchor>
      <arglist>(uniform_grid&lt; data_t &gt; g, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_set_identity</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae8795a06ae0f4f0eaa779e3fd39f61bb</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>dat_t *</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5c36a3ae58644a7ca409d9899d0c5706</anchor>
      <arglist>(dat_t *v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const dat_t *</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac209e8d3b22174ce5171d49f7088df43</anchor>
      <arglist>(const dat_t *v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4ce8f5d361dd82c7a78e3e1809ae28c1</anchor>
      <arglist>(boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a074521a3971eda03eb1e3b1fe9c5e795</anchor>
      <arglist>(boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aefcd7f01dc4b02216fa8b76e43e1528d</anchor>
      <arglist>(const boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af42f9caeb4a1e3c5c1cc61ad1bf99bb5</anchor>
      <arglist>(boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa8e9549380a13d1a78adbfdad2b95035</anchor>
      <arglist>(boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad5efc04e610729a7c29a1cc6515770d0</anchor>
      <arglist>(const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad2a68a37e9ba84f61cb623ff5642a6ec</anchor>
      <arglist>(const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abdffd4f4a2cdd5f54bbee8803f049185</anchor>
      <arglist>(std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7c536d4c9ad20d12adfbc9ee870077b7</anchor>
      <arglist>(const std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6d127958c4272900d129cfcb097922e8</anchor>
      <arglist>(std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>vector_range_gen&lt; vec_t &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6ea1545cde5f531af67a7deb24c761bd</anchor>
      <arglist>(vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4f82de8ac5cde886cb0a64642d97ce63</anchor>
      <arglist>(vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3592261c902618f3a9c32dc18243e141</anchor>
      <arglist>(const vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1a2e0f764d5c7fced80d8fbcebd26c71</anchor>
      <arglist>(const const_vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; dat_t &gt;</type>
      <name>vector_range_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aea3baa635c82e72919d3ec0d3c957f59</anchor>
      <arglist>(const std::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; dat_t &gt;</type>
      <name>vector_range_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa69306863a1359ed692855e4fc4e4000</anchor>
      <arglist>(const std::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0f52ef1f2196bfdc7f06a7229a1970f6</anchor>
      <arglist>(const arma::mat &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afd453895c4328fa1bfc09063d1bc186c</anchor>
      <arglist>(const arma::mat &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>arma::subview_row&lt; double &gt;</type>
      <name>matrix_row&lt; arma::mat, arma::subview_row&lt; double &gt; &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abcb2c0f0e2963e3016d8856e51d3af9c</anchor>
      <arglist>(arma::mat &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>arma::subview_col&lt; double &gt;</type>
      <name>matrix_column&lt; arma::mat, arma::subview_col&lt; double &gt; &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad59e4f8e12b2d76089bea25feeca45d9</anchor>
      <arglist>(arma::mat &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a661103a085b6e52f758aee8ccd37bc84</anchor>
      <arglist>(const Eigen::MatrixXd &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9510690f4dedea6183746bc891230de4</anchor>
      <arglist>(const Eigen::MatrixXd &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::MatrixXd::RowXpr</type>
      <name>matrix_row&lt; Eigen::MatrixXd, Eigen::MatrixXd::RowXpr &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a242ee88fabfddd0415ea9faeb376a0b4</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::MatrixXd::ColXpr</type>
      <name>matrix_column&lt; Eigen::MatrixXd, Eigen::MatrixXd::ColXpr &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab79db31213dfc4dad3fc7486b662f229</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, size_t column)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cubature.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/cubature/</path>
    <filename>cubature_8h</filename>
    <class kind="class">o2scl::inte_cubature_base</class>
    <class kind="class">o2scl::inte_hcubature</class>
    <class kind="class">o2scl::inte_hcubature::esterr</class>
    <class kind="class">o2scl::inte_hcubature::hypercube</class>
    <class kind="class">o2scl::inte_hcubature::region</class>
    <class kind="class">o2scl::inte_hcubature::rule</class>
    <class kind="class">o2scl::inte_hcubature::rule75genzmalik</class>
    <class kind="class">o2scl::inte_hcubature::heap</class>
    <class kind="class">o2scl::inte_pcubature</class>
    <class kind="class">o2scl::inte_pcubature::cache</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>deriv.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/deriv/</path>
    <filename>deriv_8h</filename>
    <class kind="class">o2scl::deriv_base</class>
    <class kind="struct">o2scl::deriv_base::dpars</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>deriv_cern.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/deriv/</path>
    <filename>deriv__cern_8h</filename>
    <class kind="class">o2scl::deriv_cern</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>deriv_eqi.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/deriv/</path>
    <filename>deriv__eqi_8h</filename>
    <class kind="class">o2scl::deriv_eqi</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>deriv_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/deriv/</path>
    <filename>deriv__gsl_8h</filename>
    <class kind="class">o2scl::deriv_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>vector_derint.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/deriv/</path>
    <filename>vector__derint_8h</filename>
    <namespace>o2scl</namespace>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_threept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a62c773774ef32755f6945fcfafef9c2f</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_threept_tap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a102faf254e0f8517a900210f31bb6268</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_fivept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8cd96d73bfe6fd075a3ca2ad8c310a91</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_fivept_tap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a56ea6814a9b84b88a12697658c4ead9b</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1fe7ce540f4accd4cc6df485650268a3</anchor>
      <arglist>(size_t n, ovec_t &amp;v, vec2_t &amp;dv, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a28fc6c03e8111e563ad96aa484ad02cc</anchor>
      <arglist>(size_t n, vec_t &amp;vx, vec2_t &amp;vy, vec3_t &amp;dv, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_trap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9a2eea92100f61a87efdc1d565573249</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_threept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3a843a4294295b0fe282300a4f66884a</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_extended4</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a525f0f08bc58541832af96cf5a4662e0</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_durand</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae45c98b2ff9f07ec33a56400c89b49ec</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_extended8</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af495c0a7752e70f1eb852bb0aea417de</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac8b81f9b2828f02573f2cb674adfeb67</anchor>
      <arglist>(size_t n, ovec_t &amp;v, size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_threept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a62c773774ef32755f6945fcfafef9c2f</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_threept_tap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a102faf254e0f8517a900210f31bb6268</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_fivept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8cd96d73bfe6fd075a3ca2ad8c310a91</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_fivept_tap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a56ea6814a9b84b88a12697658c4ead9b</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1fe7ce540f4accd4cc6df485650268a3</anchor>
      <arglist>(size_t n, ovec_t &amp;v, vec2_t &amp;dv, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a28fc6c03e8111e563ad96aa484ad02cc</anchor>
      <arglist>(size_t n, vec_t &amp;vx, vec2_t &amp;vy, vec3_t &amp;dv, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_trap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9a2eea92100f61a87efdc1d565573249</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_threept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3a843a4294295b0fe282300a4f66884a</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_extended4</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a525f0f08bc58541832af96cf5a4662e0</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_durand</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae45c98b2ff9f07ec33a56400c89b49ec</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_extended8</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af495c0a7752e70f1eb852bb0aea417de</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac8b81f9b2828f02573f2cb674adfeb67</anchor>
      <arglist>(size_t n, ovec_t &amp;v, size_t interp_type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fit_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/fit/</path>
    <filename>fit__base_8h</filename>
    <class kind="class">o2scl::fit_funct_strings</class>
    <class kind="class">o2scl::gen_fit_funct</class>
    <class kind="class">o2scl::chi_fit_funct</class>
    <class kind="class">o2scl::fit_base</class>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::function&lt; double(size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;, double)&gt;</type>
      <name>fit_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2b99cb726fbbf87acd8c76e84e7cd180</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fit_bayes.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/fit/</path>
    <filename>fit__bayes_8h</filename>
    <class kind="class">o2scl::uniform_prior</class>
    <class kind="class">o2scl::fit_bayes</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>fit_fix.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/fit/</path>
    <filename>fit__fix_8h</filename>
    <class kind="class">o2scl::fit_fix_pars</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>fit_linear.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/fit/</path>
    <filename>fit__linear_8h</filename>
    <class kind="class">o2scl::fit_linear</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>fit_min.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/fit/</path>
    <filename>fit__min_8h</filename>
    <class kind="class">o2scl::fit_min</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>fit_nonlin.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/fit/</path>
    <filename>fit__nonlin_8h</filename>
    <class kind="class">o2scl::fit_nonlin_b</class>
    <class kind="class">o2scl::fit_nonlin</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>acolm.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/hdf/</path>
    <filename>acolm_8h</filename>
    <class kind="class">o2scl_acol::acol_manager</class>
    <class kind="struct">o2scl_acol::acol_manager::iter_parms</class>
    <namespace>o2scl_acol</namespace>
    <member kind="function">
      <type>void *</type>
      <name>o2scl_create_acol_manager</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a5c586720fbb2bbb19d3dc66c07fc569e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>o2scl_free_acol_manager</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a4bd86ef3e6b9059b17e03c640a084747</anchor>
      <arglist>(void *vp)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>o2scl_acol_parse_arrays</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a2622cdf57db991a888dcd1b2df41876f</anchor>
      <arglist>(int n_entries, int *sizes, char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>o2scl_acol_parse</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a29ceb21dccddcd6389f6f209ef2f3aba</anchor>
      <arglist>(void *vp, int n_entries, int *sizes, char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_get_column</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>acc9592f4f7dbefb66ca0c3de42ca8d9e</anchor>
      <arglist>(void *vp, char *col_name, int &amp;n, double *&amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_get_hist_reps</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a4c04d67fd6b3bc1a0acc19114d6bbb4e</anchor>
      <arglist>(void *vp, int &amp;n, double *&amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_get_hist_wgts</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a74304af63684e5e089cd2b038828f54b</anchor>
      <arglist>(void *vp, int &amp;n, double *&amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_contours_n</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>ad1ef0e13d1d3b56443e17aa9374e7505</anchor>
      <arglist>(void *vp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>o2scl_acol_contours_line</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a3bc27954b3bbbd41be1833f9ad5ac5ea</anchor>
      <arglist>(void *vp, int i, int &amp;n, double *&amp;ptrx, double *&amp;ptry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>o2scl_acol_get_type</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>aa9e8c357a6585c3e7ccd616c2ec5b8c9</anchor>
      <arglist>(void *vp, int &amp;n, char *&amp;str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_get_slice</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>abf1c7e702b1e864acfa8ba118af699d6</anchor>
      <arglist>(void *vp, char *slice_name, int &amp;nx, double *&amp;xptr, int &amp;ny, double *&amp;yptr, double *&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_get_hist_2d</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>aba78d9b97d7ebe3e3031bf8e5129489c</anchor>
      <arglist>(void *vp, int &amp;nx, double *&amp;xptr, int &amp;ny, double *&amp;yptr, double *&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>o2scl_create_acol_manager</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a5c586720fbb2bbb19d3dc66c07fc569e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>o2scl_free_acol_manager</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a4bd86ef3e6b9059b17e03c640a084747</anchor>
      <arglist>(void *vp)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>o2scl_acol_parse_arrays</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a2622cdf57db991a888dcd1b2df41876f</anchor>
      <arglist>(int n_entries, int *sizes, char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>o2scl_acol_parse</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a29ceb21dccddcd6389f6f209ef2f3aba</anchor>
      <arglist>(void *vp, int n_entries, int *sizes, char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_get_column</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>acc9592f4f7dbefb66ca0c3de42ca8d9e</anchor>
      <arglist>(void *vp, char *col_name, int &amp;n, double *&amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_get_hist_reps</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a4c04d67fd6b3bc1a0acc19114d6bbb4e</anchor>
      <arglist>(void *vp, int &amp;n, double *&amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_get_hist_wgts</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a74304af63684e5e089cd2b038828f54b</anchor>
      <arglist>(void *vp, int &amp;n, double *&amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_contours_n</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>ad1ef0e13d1d3b56443e17aa9374e7505</anchor>
      <arglist>(void *vp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>o2scl_acol_contours_line</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>a3bc27954b3bbbd41be1833f9ad5ac5ea</anchor>
      <arglist>(void *vp, int i, int &amp;n, double *&amp;ptrx, double *&amp;ptry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>o2scl_acol_get_type</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>aa9e8c357a6585c3e7ccd616c2ec5b8c9</anchor>
      <arglist>(void *vp, int &amp;n, char *&amp;str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_get_slice</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>abf1c7e702b1e864acfa8ba118af699d6</anchor>
      <arglist>(void *vp, char *slice_name, int &amp;nx, double *&amp;xptr, int &amp;ny, double *&amp;yptr, double *&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>o2scl_acol_get_hist_2d</name>
      <anchorfile>acolm_8h.html</anchorfile>
      <anchor>aba78d9b97d7ebe3e3031bf8e5129489c</anchor>
      <arglist>(void *vp, int &amp;nx, double *&amp;xptr, int &amp;ny, double *&amp;yptr, double *&amp;data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cloud_file.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/hdf/</path>
    <filename>cloud__file_8h</filename>
    <class kind="class">o2scl_hdf::cloud_file</class>
    <namespace>o2scl_hdf</namespace>
  </compound>
  <compound kind="file">
    <name>hdf_file.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/hdf/</path>
    <filename>hdf__file_8h</filename>
    <class kind="class">o2scl_hdf::hdf_file</class>
    <class kind="struct">o2scl_hdf::iterate_parms</class>
    <namespace>o2scl_hdf</namespace>
    <member kind="function">
      <type>int</type>
      <name>iterate_match_type</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aa69dcf597531d82a032eac13ca8cb85d</anchor>
      <arglist>(hid_t loc, const char *name, const H5L_info_t *inf, void *op_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate_match_name</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>adf9155adcc17f447ca0252da97e5017a</anchor>
      <arglist>(hid_t loc, const char *name, const H5L_info_t *inf, void *op_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate_match_type</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aa69dcf597531d82a032eac13ca8cb85d</anchor>
      <arglist>(hid_t loc, const char *name, const H5L_info_t *inf, void *op_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate_match_name</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>adf9155adcc17f447ca0252da97e5017a</anchor>
      <arglist>(hid_t loc, const char *name, const H5L_info_t *inf, void *op_data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hdf_io.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/hdf/</path>
    <filename>hdf__io_8h</filename>
    <namespace>o2scl_hdf</namespace>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>abd830d5c186299a64040f72705e0306e</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table&lt;&gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aae9226e07a61965c0c7e697e389e625b</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table&lt; vec_t &gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output_data</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a27b6dda62410f777411383ba310f513c</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table&lt;&gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input_data</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a0da877732d7fe66f8302ffc35dde3749</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table&lt; vec_t &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aa3a4081c11e9aaf213c5dcd52babe91f</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table_units&lt;&gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>af2c365ffa07987243ca245242c940c13</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table_units&lt; vec_t &gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output_data</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a9983b693add8f38fc4283d84580f23f5</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table_units&lt;&gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input_data</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a5a5449502cbd3eb44b30f7a965147311</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table_units&lt; vec_t &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a5b18e2127b22f45d52504fa00bb24496</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a789bc780042cd6858e3b1f6ee2514816</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a03f389a3c1737c4c0abc3a95a5094b44</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist_2d &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a0f5c3df81ab877b01e86a7e830dbf6d8</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist_2d &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aadab787413b2b39f020c5a05023a2b37</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table3d &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a49af35294bef5f02a943958b18196bae</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table3d &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a2370961ca64035b8bc93af1246dba8d8</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_scalar &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aca3eff9daa63ebbe984f89aa3486cfaa</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_scalar &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>af7cd54cc0c5b0768919f53cf83daa945</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_vector &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a6f6d97b59ee5e3992e263ff8054a538d</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_vector &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a2fb02b265514faa208d5645531e1d222</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_matrix &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>ad27e35092fe6ac4956c7912cb7575c09</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_matrix &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a7d95e5b5f57b42434d378bcc55fc53c1</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::uniform_grid&lt; double &gt; &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>acf5f40501d2269e2b85dfa270357fa1b</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::uniform_grid&lt; double &gt; &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a4a9455a6c27584eee6d238f26414854d</anchor>
      <arglist>(hdf_file &amp;hf, std::vector&lt; o2scl::contour_line &gt; &amp;cl, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a93144c546054d3f468ee5f31a675c986</anchor>
      <arglist>(hdf_file &amp;hf, std::vector&lt; o2scl::contour_line &gt; &amp;cl, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a825316f26ec7892dbe4ce5260706f494</anchor>
      <arglist>(hdf_file &amp;hf, std::vector&lt; o2scl::edge_crossings &gt; &amp;ec, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aa19e5b64017b67ef14c6a474555c4216</anchor>
      <arglist>(hdf_file &amp;hf, std::vector&lt; o2scl::edge_crossings &gt; &amp;ec, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a53f46a4d66824a54f5a6cc234f1aaec7</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::tensor_grid&lt; std::vector&lt; double &gt;, std::vector&lt; size_t &gt; &gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a71b9ba58a6ee2d6e5440f0de74cffa00</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::tensor_grid&lt; std::vector&lt; double &gt;, std::vector&lt; size_t &gt; &gt; &amp;t, std::string name=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>inte.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte_8h</filename>
    <class kind="class">o2scl::inte</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_adapt_cern.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__adapt__cern_8h</filename>
    <class kind="class">o2scl::inte_adapt_cern</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_cauchy_cern.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__cauchy__cern_8h</filename>
    <class kind="class">o2scl::inte_cauchy_cern</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_gauss56_cern.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__gauss56__cern_8h</filename>
    <class kind="class">o2scl::inte_gauss56_cern</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_gauss_cern.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__gauss__cern_8h</filename>
    <class kind="class">o2scl::inte_gauss_cern</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_gen.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__gen_8h</filename>
    <class kind="class">o2scl::inte_gen</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__gsl_8h</filename>
    <class kind="class">o2scl::inte_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_kronrod_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__kronrod__gsl_8h</filename>
    <class kind="class">o2scl::inte_workspace_gsl</class>
    <class kind="class">o2scl::inte_kronrod_gsl</class>
    <namespace>o2scl_inte_gk_coeffs</namespace>
    <namespace>o2scl</namespace>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk15_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>afb8bc21d1aa2a9dbd4d039a94ae5fbb2</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk15_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a15dd2d8dff9cb9d0761b77b1fbfbe0c4</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk15_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a7b2e8a53b1ecab8c8b0aabe5dc48f629</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk21_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a51b69064b1a5c5ce2d287dfeac453d60</anchor>
      <arglist>[11]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk21_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>ada8da24b5c71215656d343c53b0b0583</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk21_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a6d85b20b69f65851144c2860e9eb6784</anchor>
      <arglist>[11]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk31_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a8db7bcabc7a1f97accdb4e98eaad4209</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk31_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a6e580da7ef7d677860ea9199399d1e89</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk31_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>af97255df14f592b66b747094ce6fefc3</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk41_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a175d896bd2eb2ee31f64d232f660efa9</anchor>
      <arglist>[21]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk41_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a43df7d651d8989511baefe3a6d5ddf05</anchor>
      <arglist>[11]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk41_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>ab70dabda9b4ec90f405b4dc57b4e2410</anchor>
      <arglist>[21]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk51_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>aceb8d53e8d31909c5671a7760d7e81c0</anchor>
      <arglist>[26]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk51_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>aa696285ef28a61cfaa50606810ad99cd</anchor>
      <arglist>[13]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk51_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a0b25d8eedf7b99d28ec04e1a5a361199</anchor>
      <arglist>[26]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk61_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>af16a54d2cb59cb0e44d1ad95457526f2</anchor>
      <arglist>[31]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk61_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>afafc7130aac6bed38bbfdc978e8fb079</anchor>
      <arglist>[15]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk61_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a83bc77815eaf199e6f8aedbafe27c73f</anchor>
      <arglist>[31]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>inte_multi.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__multi_8h</filename>
    <class kind="class">o2scl::inte_multi</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_qag_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__qag__gsl_8h</filename>
    <class kind="class">o2scl::inte_qag_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_qagi_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__qagi__gsl_8h</filename>
    <class kind="class">o2scl::inte_qagi_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_qagil_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__qagil__gsl_8h</filename>
    <class kind="class">o2scl::inte_qagil_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_qagiu_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__qagiu__gsl_8h</filename>
    <class kind="class">o2scl::inte_qagiu_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_qags_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__qags__gsl_8h</filename>
    <class kind="class">o2scl::inte_qags_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_qawc_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__qawc__gsl_8h</filename>
    <class kind="class">o2scl::inte_cheb_gsl</class>
    <class kind="class">o2scl::inte_qawc_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_qawf_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__qawf__gsl_8h</filename>
    <class kind="class">o2scl::inte_qawf_gsl_sin</class>
    <class kind="class">o2scl::inte_qawf_gsl_cos</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_qawo_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__qawo__gsl_8h</filename>
    <class kind="class">o2scl::inte_qawo_gsl_sin</class>
    <class kind="class">o2scl::inte_qawo_gsl_cos</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_qaws_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__qaws__gsl_8h</filename>
    <class kind="class">o2scl::inte_qaws_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>inte_qng_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__qng__gsl_8h</filename>
    <class kind="class">o2scl::inte_qng_gsl</class>
    <namespace>o2scl_inte_qng_coeffs</namespace>
    <namespace>o2scl</namespace>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>x1</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>ab1cd6c1569123e2cef6117c05a78d10a</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w10</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a86b4c6ef4da0d6464d5286e0f07b96c2</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>x2</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a12210b57bc63bc1903788cfb5eaec115</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w21a</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a0e217c4262ca898a51fd3500948e5c42</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w21b</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>ada9c0e56a5cc0d94fd0cd3791f08b2f4</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>x3</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a0777931550a3bbb48b057c2213586e45</anchor>
      <arglist>[11]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w43a</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a4e415d90b3ae8e349987173eb9b3f8e5</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w43b</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>aef40ff5d963ee2b3084eeedd1b204c18</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>x4</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a69775c84384f24478826d96b14e45a21</anchor>
      <arglist>[22]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w87a</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a6eea751a9ce5773c97f3dddf5717ca67</anchor>
      <arglist>[21]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w87b</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a504fcc0ad71095653898578637458839</anchor>
      <arglist>[23]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>inte_singular_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/inte/</path>
    <filename>inte__singular__gsl_8h</filename>
    <class kind="class">o2scl::inte_singular_gsl</class>
    <class kind="struct">o2scl::inte_singular_gsl::extrapolation_table</class>
    <class kind="class">o2scl::inte_transform_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>bidiag.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>bidiag_8h</filename>
    <includes id="bidiag__base_8h" name="bidiag_base.h" local="yes" imported="no">bidiag_base.h</includes>
    <namespace>o2scl_linalg</namespace>
    <namespace>o2scl_linalg_bracket</namespace>
    <member kind="function">
      <type>int</type>
      <name>bidiag_decomp</name>
      <anchorfile>bidiag_8h.html</anchorfile>
      <anchor>afbc472927bbc82414026c11228d8313d</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau_U, vec2_t &amp;tau_V)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack</name>
      <anchorfile>bidiag_8h.html</anchorfile>
      <anchor>a229334a39112824caec2ff31036c7157</anchor>
      <arglist>(size_t M, size_t N, const mat_t &amp;A, const vec_t &amp;tau_U, mat2_t &amp;U, const vec2_t &amp;tau_V, mat3_t &amp;V, vec3_t &amp;diag, vec4_t &amp;superdiag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack2</name>
      <anchorfile>bidiag_8h.html</anchorfile>
      <anchor>a8b6a9554b0e1c508d8ba1a21ca5d52d5</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau_U, vec2_t &amp;tau_V, mat2_t &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack_B</name>
      <anchorfile>bidiag_8h.html</anchorfile>
      <anchor>a825f051fb4002b3a50e3623e3f4bfa80</anchor>
      <arglist>(size_t M, size_t N, const mat_t &amp;A, vec_t &amp;diag, vec2_t &amp;superdiag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_decomp</name>
      <anchorfile>bidiag_8h.html</anchorfile>
      <anchor>affd5ae200302617951286685756d9488</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau_U, vec2_t &amp;tau_V)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack</name>
      <anchorfile>bidiag_8h.html</anchorfile>
      <anchor>af7a0f502267a013cff81c9a132449c4f</anchor>
      <arglist>(size_t M, size_t N, const mat_t &amp;A, const vec_t &amp;tau_U, mat2_t &amp;U, const vec2_t &amp;tau_V, mat3_t &amp;V, vec3_t &amp;diag, vec4_t &amp;superdiag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack2</name>
      <anchorfile>bidiag_8h.html</anchorfile>
      <anchor>aca3a0aafa2ab03002cb50e5f325dcebd</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau_U, vec2_t &amp;tau_V, mat2_t &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack_B</name>
      <anchorfile>bidiag_8h.html</anchorfile>
      <anchor>a7d08c49d0caa73c13e43e6816df840e7</anchor>
      <arglist>(size_t M, size_t N, const mat_t &amp;A, vec_t &amp;diag, vec2_t &amp;superdiag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>bidiag_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>bidiag__base_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>int</type>
      <name>bidiag_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a187185f2c949c9122d30018109d29054</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau_U, vec2_t &amp;tau_V)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a3ab3bc3b12150e0a8b158fec36b5320d</anchor>
      <arglist>(size_t M, size_t N, const mat_t &amp;A, const vec_t &amp;tau_U, mat2_t &amp;U, const vec2_t &amp;tau_V, mat3_t &amp;V, vec3_t &amp;diag, vec4_t &amp;superdiag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack2</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a851f79ebab8ed7f2b472712b3496293b</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau_U, vec2_t &amp;tau_V, mat2_t &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack_B</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ad1dda44a1c2252a5ea74747ac0d74fa7</anchor>
      <arglist>(size_t M, size_t N, const mat_t &amp;A, vec_t &amp;diag, vec2_t &amp;superdiag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cblas.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>cblas_8h</filename>
    <namespace>o2scl_cblas</namespace>
    <namespace>o2scl_cblas_bracket</namespace>
    <namespace>o2scl_linalg</namespace>
    <namespace>o2scl_linalg_bracket</namespace>
  </compound>
  <compound kind="file">
    <name>cblas_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>cblas__base_8h</filename>
    <namespace>o2scl_cblas</namespace>
    <member kind="enumeration">
      <type></type>
      <name>o2cblas_order</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a7657f6208dd45c3e055b36ea57fc5601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>o2cblas_transpose</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab0ab2f48c928084b7323374616caa05a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>o2cblas_uplo</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a915487a43578090cbdb3ae969595bf44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>o2cblas_diag</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab63e572f270e6127f3cee34aebbb33ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>o2cblas_side</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a37d339f0291c2076f15f991882efa160</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dasum</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ac077d393fba3013cebb311d75ad78591</anchor>
      <arglist>(const size_t N, const vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a42573bbc0f81c11861d948ee676adcac</anchor>
      <arglist>(const double alpha, const size_t N, const vec_t &amp;X, vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a4d9cb0a0f110fb1a2fdf2e1e5eee82cf</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a7a31b86a26be2310c8792d1f6ddb348b</anchor>
      <arglist>(const size_t N, const vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a55051b4516709c32e86d72057d4a7ef8</anchor>
      <arglist>(const double alpha, const size_t N, vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dgemv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a5537efdae904ec720971c2fa0f04b704</anchor>
      <arglist>(const enum o2cblas_order order, const enum o2cblas_transpose TransA, const size_t M, const size_t N, const double alpha, const mat_t &amp;A, const vec_t &amp;X, const double beta, vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dtrsv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a428732bda108f5a529656792a711c660</anchor>
      <arglist>(const enum o2cblas_order order, const enum o2cblas_uplo Uplo, const enum o2cblas_transpose TransA, const enum o2cblas_diag Diag, const size_t M, const size_t N, const mat_t &amp;A, vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dtrmv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a4916d26574a74a9d2cd55769e7ade038</anchor>
      <arglist>(const enum o2cblas_order Order, const enum o2cblas_uplo Uplo, const enum o2cblas_transpose TransA, const enum o2cblas_diag Diag, const size_t N, const mat_t &amp;A, vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dgemm</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ac9a4de007bb23b6e6664b31c0ba4920a</anchor>
      <arglist>(const enum o2cblas_order Order, const enum o2cblas_transpose TransA, const enum o2cblas_transpose TransB, const size_t M, const size_t N, const size_t K, const double alpha, const mat_t &amp;A, const mat_t &amp;B, const double beta, mat_t &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a1081da2a9ae830b9be55fc866364952b</anchor>
      <arglist>(const double alpha, const size_t N, const vec_t &amp;X, vec2_t &amp;Y, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a3a7c166ccebad0dd2effe9348d21b337</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const vec2_t &amp;Y, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a855cc5e1e78f0ec916ac90cdf1b00ec7</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ae10a3a2b27a7f222627642e273d29297</anchor>
      <arglist>(const double alpha, const size_t N, vec_t &amp;X, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a759f2656f2470c50ec13cb3ca6cd75dc</anchor>
      <arglist>(const double alpha, const size_t M, const mat_t &amp;X, const size_t ir, const size_t ic, vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab617e1401bf22c3fd7e7af2b3152f2ca</anchor>
      <arglist>(const size_t M, const mat_t &amp;X, const size_t ir, const size_t ic, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a725ccd7ff094a830db8bcff8c7bf408a</anchor>
      <arglist>(const mat_t &amp;A, const size_t ir, const size_t ic, const size_t M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a74efdb618d9a8c23f982ea29b4a32b29</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t M, const double alpha)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dasum_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ad42f89acb089444d831a122ce229aa2a</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>aa75d324dc3fa9b830b45e3bcbf9fe454</anchor>
      <arglist>(const double alpha, const size_t N, const mat_t &amp;X, const size_t ir, const size_t ic, vec_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab41158c698a37c0e5ffb5fff87e8d3fe</anchor>
      <arglist>(const size_t N, const mat_t &amp;X, const size_t ir, const size_t ic, const vec_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a9467f5fb47766763a9eabc50c9d8b324</anchor>
      <arglist>(const mat_t &amp;M, const size_t ir, const size_t ic, const size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>acf4291db25341aebafefa720728f3d2a</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t N, const double alpha)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dasum</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ac077d393fba3013cebb311d75ad78591</anchor>
      <arglist>(const size_t N, const vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a42573bbc0f81c11861d948ee676adcac</anchor>
      <arglist>(const double alpha, const size_t N, const vec_t &amp;X, vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a4d9cb0a0f110fb1a2fdf2e1e5eee82cf</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a7a31b86a26be2310c8792d1f6ddb348b</anchor>
      <arglist>(const size_t N, const vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a55051b4516709c32e86d72057d4a7ef8</anchor>
      <arglist>(const double alpha, const size_t N, vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dgemv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a5537efdae904ec720971c2fa0f04b704</anchor>
      <arglist>(const enum o2cblas_order order, const enum o2cblas_transpose TransA, const size_t M, const size_t N, const double alpha, const mat_t &amp;A, const vec_t &amp;X, const double beta, vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dtrsv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a428732bda108f5a529656792a711c660</anchor>
      <arglist>(const enum o2cblas_order order, const enum o2cblas_uplo Uplo, const enum o2cblas_transpose TransA, const enum o2cblas_diag Diag, const size_t M, const size_t N, const mat_t &amp;A, vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dtrmv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a4916d26574a74a9d2cd55769e7ade038</anchor>
      <arglist>(const enum o2cblas_order Order, const enum o2cblas_uplo Uplo, const enum o2cblas_transpose TransA, const enum o2cblas_diag Diag, const size_t N, const mat_t &amp;A, vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dgemm</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ac9a4de007bb23b6e6664b31c0ba4920a</anchor>
      <arglist>(const enum o2cblas_order Order, const enum o2cblas_transpose TransA, const enum o2cblas_transpose TransB, const size_t M, const size_t N, const size_t K, const double alpha, const mat_t &amp;A, const mat_t &amp;B, const double beta, mat_t &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a1081da2a9ae830b9be55fc866364952b</anchor>
      <arglist>(const double alpha, const size_t N, const vec_t &amp;X, vec2_t &amp;Y, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a3a7c166ccebad0dd2effe9348d21b337</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const vec2_t &amp;Y, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a855cc5e1e78f0ec916ac90cdf1b00ec7</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ae10a3a2b27a7f222627642e273d29297</anchor>
      <arglist>(const double alpha, const size_t N, vec_t &amp;X, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a759f2656f2470c50ec13cb3ca6cd75dc</anchor>
      <arglist>(const double alpha, const size_t M, const mat_t &amp;X, const size_t ir, const size_t ic, vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab617e1401bf22c3fd7e7af2b3152f2ca</anchor>
      <arglist>(const size_t M, const mat_t &amp;X, const size_t ir, const size_t ic, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a725ccd7ff094a830db8bcff8c7bf408a</anchor>
      <arglist>(const mat_t &amp;A, const size_t ir, const size_t ic, const size_t M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a74efdb618d9a8c23f982ea29b4a32b29</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t M, const double alpha)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dasum_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ad42f89acb089444d831a122ce229aa2a</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>aa75d324dc3fa9b830b45e3bcbf9fe454</anchor>
      <arglist>(const double alpha, const size_t N, const mat_t &amp;X, const size_t ir, const size_t ic, vec_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab41158c698a37c0e5ffb5fff87e8d3fe</anchor>
      <arglist>(const size_t N, const mat_t &amp;X, const size_t ir, const size_t ic, const vec_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a9467f5fb47766763a9eabc50c9d8b324</anchor>
      <arglist>(const mat_t &amp;M, const size_t ir, const size_t ic, const size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>acf4291db25341aebafefa720728f3d2a</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t N, const double alpha)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cholesky.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>cholesky_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <namespace>o2scl_linalg_bracket</namespace>
    <member kind="function">
      <type>void</type>
      <name>cholesky_decomp&lt; Eigen::MatrixXd &gt;</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a83fc81a8cdf48a243122b47abb3290d5</anchor>
      <arglist>(const size_t M, Eigen::MatrixXd &amp;A)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cholesky_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>cholesky__base_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>void</type>
      <name>cholesky_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4d166572a1cd2e6da85f5d0d50090a61</anchor>
      <arglist>(const size_t M, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cholesky_solve</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a1c7d4da90e7f9526d06e94c30a3d9d48</anchor>
      <arglist>(const size_t N, const mat_t &amp;LLT, const vec_t &amp;b, vec2_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cholesky_svx</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ab94edf124f826a7ebe32912d458375b4</anchor>
      <arglist>(const size_t N, const mat_t &amp;LLT, vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cholesky_invert</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>afce5f0f6fbab801df7fc63f1200ac027</anchor>
      <arglist>(const size_t N, mat_t &amp;LLT)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholesky_decomp_unit</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>af106094528bef943dfe75c2541194185</anchor>
      <arglist>(const size_t N, mat_t &amp;A, vec_t &amp;D)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>givens.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>givens_8h</filename>
    <namespace>o2scl_linalg_bracket</namespace>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>void</type>
      <name>create_givens</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a1c813de822088b1c8ac03818164f2d74</anchor>
      <arglist>(const double a, const double b, double &amp;c, double &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>givens_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>givens__base_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>void</type>
      <name>apply_givens_qr</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a7ea3190e9e6dc21e8fa4a3e832848318</anchor>
      <arglist>(size_t M, size_t N, mat1_t &amp;Q, mat2_t &amp;R, size_t i, size_t j, double c, double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_givens_lq</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a9255c444095d57e7c3119efdf558fdf3</anchor>
      <arglist>(size_t M, size_t N, mat1_t &amp;Q, mat2_t &amp;L, size_t i, size_t j, double c, double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_givens_vec</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a38a6ec5f3a3de8522a507b69a1a2fbd6</anchor>
      <arglist>(vec_t &amp;v, size_t i, size_t j, double c, double s)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hh.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>hh_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <namespace>o2scl_linalg_bracket</namespace>
  </compound>
  <compound kind="file">
    <name>hh_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>hh__base_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>int</type>
      <name>HH_svx</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a8a1780213a3f89789b6c7da494247c4f</anchor>
      <arglist>(size_t N, size_t M, mat_t &amp;A, vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>HH_solve</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>af298e12e53dde2d5ee4cb5eaa9e4ee76</anchor>
      <arglist>(size_t n, mat_t &amp;A, const vec_t &amp;b, vec2_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>householder.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>householder_8h</filename>
    <namespace>o2scl_linalg_bracket</namespace>
    <namespace>o2scl_linalg</namespace>
  </compound>
  <compound kind="file">
    <name>householder_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>householder__base_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>double</type>
      <name>householder_transform</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a5218da1d1a3b97518afcd63eeb7c4b96</anchor>
      <arglist>(const size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>householder_transform_subcol</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a902cb2a01e9961b5745812a46123b17a</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t M)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>householder_transform_subrow</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a173c7179cb0a5be576e9034ca75066c3</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hm</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>acdb8926a8b6dbc52acfb23bef0c9a9c2</anchor>
      <arglist>(const size_t M, const size_t N, double tau, const vec_t &amp;v, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hm_subcol</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a0d082487242d5d892551ab730f7126f8</anchor>
      <arglist>(mat_t &amp;M, const size_t ir, const size_t ic, const size_t nr, const size_t nc, const mat_t &amp;M2, const size_t ir2, const size_t ic2, double tau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hm_subrow</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a208ce32bd2874399535912e203056e59</anchor>
      <arglist>(mat_t &amp;M, const size_t ir, const size_t ic, const size_t nr, const size_t nc, const mat_t &amp;M2, const size_t ir2, const size_t ic2, double tau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hv</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a359717a04dd10c9fc87bae053523cf2f</anchor>
      <arglist>(const size_t N, double tau, const vec_t &amp;v, vec2_t &amp;w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hv_subcol</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a1e9031d54a0dd408080bea7d148f5762</anchor>
      <arglist>(const mat_t &amp;A, vec_t &amp;w, double tau, const size_t ie, const size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hm1</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a37e6a0eb6805d4b9a790edb644854dd5</anchor>
      <arglist>(const size_t M, const size_t N, double tau, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hm1_sub</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>acc4925d6f9b14e01dc75edab912634f9</anchor>
      <arglist>(const size_t M, const size_t N, double tau, mat_t &amp;A, size_t ir, size_t ic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_mh</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aa3db065b875a1b873c42c5c790d1f0e2</anchor>
      <arglist>(const size_t M, const size_t N, double tau, const vec_t &amp;v, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_mh_subrow</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a88d49bbb28e37fcb88408cd58854bd77</anchor>
      <arglist>(mat_t &amp;M, const size_t ir, const size_t ic, const size_t nr, const size_t nc, const mat2_t &amp;M2, const size_t ir2, const size_t ic2, double tau)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lanczos.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>lanczos_8h</filename>
    <namespace>o2scl_linalg_bracket</namespace>
    <namespace>o2scl_linalg</namespace>
  </compound>
  <compound kind="file">
    <name>lanczos_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>lanczos__base_8h</filename>
    <class kind="class">o2scl_linalg::lanczos</class>
    <namespace>o2scl_linalg</namespace>
  </compound>
  <compound kind="file">
    <name>linear_solver.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>linear__solver_8h</filename>
    <class kind="class">o2scl_linalg::linear_solver</class>
    <class kind="class">o2scl_linalg::linear_solver_LU</class>
    <class kind="class">o2scl_linalg::linear_solver_QR</class>
    <class kind="class">o2scl_linalg::linear_solver_HH</class>
    <class kind="class">o2scl_linalg::linear_solver_arma</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_houseQR</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_colQR</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_fullQR</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_partLU</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_fullLU</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_LLT</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_LDLT</class>
    <namespace>o2scl_linalg</namespace>
  </compound>
  <compound kind="file">
    <name>lu.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>lu_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <namespace>o2scl_linalg_bracket</namespace>
    <member kind="function">
      <type>int</type>
      <name>LU_decomp_array_2d</name>
      <anchorfile>namespaceo2scl__linalg__bracket.html</anchorfile>
      <anchor>ab8dbc08043d530bd1faa7b218fefd7e7</anchor>
      <arglist>(const size_t n, double A[][N], o2scl::permutation &amp;p, int &amp;signum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lu_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>lu__base_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>int</type>
      <name>diagonal_has_zero</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ac1e075fbd9d9aaddce28df94fcd4baf7</anchor>
      <arglist>(const size_t N, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aa5973786eb590c5b078d03d763c5054c</anchor>
      <arglist>(const size_t N, mat_t &amp;A, o2scl::permutation &amp;p, int &amp;signum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_svx</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>abb6fa6e1a27d9c31b8ee92b1341b01d1</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU, const o2scl::permutation &amp;p, vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_decomp_alt</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a90a918ae5c2f983de9835b2bf32e8321</anchor>
      <arglist>(const size_t N, mat_t &amp;A, o2scl::permutation &amp;p, int &amp;signum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_solve</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a6061c9646e78d3cd469fe5a8f31d5c8e</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU, const o2scl::permutation &amp;p, const vec_t &amp;b, vec2_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_refine</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4e422d4448433a6182da5ff37d21ca8f</anchor>
      <arglist>(const size_t N, const mat_t &amp;A, const mat2_t &amp;LU, const o2scl::permutation &amp;p, const vec_t &amp;b, vec2_t &amp;x, vec3_t &amp;residual)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_invert</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>af8ceda387c6125f2daaa3ec5ff07bca4</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU, const o2scl::permutation &amp;p, mat2_t &amp;inverse)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>LU_det</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a7955241fbd4a975f2206f4a6a7d012ad</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU, int signum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>LU_lndet</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a1ff6c76948a6ff9e9e5e4d8f3e318a4e</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_sgndet</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a5bee71f59276e5382c14d3f55dd3b65d</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU, int signum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>permutation.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>permutation_8h</filename>
    <class kind="class">o2scl::permutation</class>
    <namespace>o2scl</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8968e542fe7b86c353eb2efbd5a6eb58</anchor>
      <arglist>(std::ostream &amp;os, const permutation &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>qr.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>qr_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <namespace>o2scl_linalg_bracket</namespace>
    <member kind="function">
      <type>void</type>
      <name>QR_decomp_unpack&lt; arma::mat, arma::mat, arma::mat &gt;</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a93018c00cee28c8c8b9cd5b21ecc682f</anchor>
      <arglist>(const size_t M, const size_t N, arma::mat &amp;A, arma::mat &amp;Q, arma::mat &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_decomp_unpack&lt; Eigen::MatrixXd, Eigen::MatrixXd, Eigen::MatrixXd &gt;</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a8813376d2e48c84f134a5880d5b5bc19</anchor>
      <arglist>(const size_t M, const size_t N, Eigen::MatrixXd &amp;A, Eigen::MatrixXd &amp;Q, Eigen::MatrixXd &amp;R)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>qr_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>qr__base_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>void</type>
      <name>QR_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ac9d84ed3a5e0bff52f863d056ba0894b</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_QTvec</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a22786228846e8f4ff6d5f9db89d1f699</anchor>
      <arglist>(const size_t M, const size_t N, const mat_t &amp;QR, const vec_t &amp;tau, vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_unpack</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a92d3ef4178dd4cff31de2e3404029957</anchor>
      <arglist>(const size_t M, const size_t N, const mat1_t &amp;QR, const vec_t &amp;tau, mat2_t &amp;Q, mat3_t &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_svx</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a0da4aa588092693f5fe9471af70199f6</anchor>
      <arglist>(size_t M, size_t N, const mat_t &amp;QR, const vec_t &amp;tau, vec2_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_solve</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4e79f2184f8b901e7fb6927c344b6ada</anchor>
      <arglist>(size_t N, const mat_t &amp;QR, const vec_t &amp;tau, const vec2_t &amp;b, vec3_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_update</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a78da8f058be3e85b901ad9d1a1d671d2</anchor>
      <arglist>(size_t M, size_t N, mat1_t &amp;Q, mat2_t &amp;R, vec1_t &amp;w, vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_decomp_unpack</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aab670dc686bfdb814364471e15fec039</anchor>
      <arglist>(const size_t M, const size_t N, mat_t &amp;A, mat2_t &amp;Q, mat3_t &amp;R)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>qrpt.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>qrpt_8h</filename>
    <namespace>o2scl_linalg_bracket</namespace>
    <namespace>o2scl_linalg</namespace>
  </compound>
  <compound kind="file">
    <name>qrpt_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>qrpt__base_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>void</type>
      <name>QRPT_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a0ae2fb75b1a1356209440c033a63b2d2</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau, o2scl::permutation &amp;p, int &amp;signum, vec2_t &amp;norm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>svd.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>svd_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <namespace>o2scl_linalg_bracket</namespace>
  </compound>
  <compound kind="file">
    <name>svd_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>svd__base_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>void</type>
      <name>SV_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4687b73955364bcecbcc68de772f32ea</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, mat2_t &amp;V, vec_t &amp;S, vec2_t &amp;work)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SV_decomp_mod</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aecc2d7c07fec0f27560462cafe7dff7f</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, mat2_t &amp;X, mat3_t &amp;V, vec_t &amp;S, vec2_t &amp;work)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SV_solve</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ae2e3d8b8d2ab10f6fdaccecb8ca1fbdd</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;U, mat2_t &amp;V, vec_t &amp;S, vec2_t &amp;b, vec3_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SV_decomp_jacobi</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a1c8ffde83077590ee8a778c6f510070e</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, mat2_t &amp;Q, vec_t &amp;S)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>balance_columns</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ad57bdf0238e1809427f63972507e3a57</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;D)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>svdstep.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>svdstep_8h</filename>
    <namespace>o2scl_linalg_bracket</namespace>
    <namespace>o2scl_linalg</namespace>
  </compound>
  <compound kind="file">
    <name>svdstep_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>svdstep__base_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>void</type>
      <name>chop_small_elements</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a12ef037c607bfd107ccfaf7b4cfc66c5</anchor>
      <arglist>(size_t N, vec_t &amp;d, vec2_t &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>trailing_eigenvalue</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aa8404ace1b30bf263d45fac46a22d0b3</anchor>
      <arglist>(size_t n, const vec_t &amp;d, const vec2_t &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_schur</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a7c0d16f12293d34472bc53435dc91875</anchor>
      <arglist>(double d0, double f0, double d1, double &amp;c, double &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>svd2</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aa360be7ba858d83d1c868c419f19b975</anchor>
      <arglist>(size_t M, size_t N, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;U, mat2_t &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>svd2_sub</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aa671b123e0da85c5746bb58844530ce2</anchor>
      <arglist>(size_t M, size_t N, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;U, mat2_t &amp;V, size_t a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>chase_out_intermediate_zero</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a458d4b02a2aa6bc533dccb4c80397356</anchor>
      <arglist>(size_t M, size_t n, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;U, size_t k0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>chase_out_trailing_zero</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a3214efafd719353088b8629c165f79d9</anchor>
      <arglist>(size_t N, size_t n, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>chase_out_trailing_zero_sub</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aec59b8dccf3d8e7abd3966f6bc38af87</anchor>
      <arglist>(size_t N, size_t n, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;V, size_t a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qrstep</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>afc85032c94252dcdc52c7e62032b0158</anchor>
      <arglist>(size_t M, size_t N, size_t n, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;U, mat2_t &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qrstep_sub</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ab1c32a3b53b3b67c33b87489d1f305f4</anchor>
      <arglist>(size_t M, size_t N, size_t n, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;U, mat2_t &amp;V, size_t a)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tridiag.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>tridiag_8h</filename>
    <namespace>o2scl_linalg</namespace>
    <namespace>o2scl_linalg_bracket</namespace>
  </compound>
  <compound kind="file">
    <name>tridiag_base.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/linalg/</path>
    <filename>tridiag__base_8h</filename>
    <class kind="class">o2scl_linalg::ubvector_2_mem</class>
    <class kind="class">o2scl_linalg::ubvector_4_mem</class>
    <class kind="class">o2scl_linalg::ubvector_5_mem</class>
    <namespace>o2scl_linalg</namespace>
    <member kind="function">
      <type>void</type>
      <name>solve_tridiag_sym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4bfe3209ca2d4b0cdd1f2b2a62357b4e</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;offdiag, const vec3_t &amp;b, vec4_t &amp;x, size_t N, mem_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_tridiag_nonsym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ae1722344a69ea7265a16f56c310cee0a</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;abovediag, const vec3_t &amp;belowdiag, const vec4_t &amp;rhs, vec5_t &amp;x, size_t N, mem_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_cyc_tridiag_sym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a591dd2d261378d3dad5ddd530b1e81ec</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;offdiag, const vec3_t &amp;b, vec4_t &amp;x, size_t N, mem_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_cyc_tridiag_nonsym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a5c5ca01a596698528724a6b4f7ff2b9a</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;abovediag, const vec3_t &amp;belowdiag, const vec4_t &amp;rhs, vec5_t &amp;x, size_t N, mem_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_tridiag_sym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4daab14c9d2670f1a96f9ac856ad1936</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;offdiag, const vec3_t &amp;b, vec4_t &amp;x, size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_tridiag_nonsym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a150cd9732a35b49c86e99a3e3b96f228</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;abovediag, const vec3_t &amp;belowdiag, const vec4_t &amp;rhs, vec5_t &amp;x, size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_cyc_tridiag_sym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a831220db53b8904764ff597931b2be4b</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;offdiag, const vec3_t &amp;b, vec4_t &amp;x, size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_cyc_tridiag_nonsym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>af785a50d45ff33ec0f3a6bfd607d8487</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;abovediag, const vec3_t &amp;belowdiag, const vec4_t &amp;rhs, vec5_t &amp;x, size_t N)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>expval.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/mcarlo/</path>
    <filename>expval_8h</filename>
    <class kind="class">o2scl::expval_base</class>
    <class kind="class">o2scl::expval_scalar</class>
    <class kind="class">o2scl::expval_vector</class>
    <class kind="class">o2scl::expval_matrix</class>
    <namespace>o2scl</namespace>
    <namespace>o2scl_hdf</namespace>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aca3eff9daa63ebbe984f89aa3486cfaa</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_scalar &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a2370961ca64035b8bc93af1246dba8d8</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_scalar &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a6f6d97b59ee5e3992e263ff8054a538d</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_vector &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>af7cd54cc0c5b0768919f53cf83daa945</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_vector &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>ad27e35092fe6ac4956c7912cb7575c09</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_matrix &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a2fb02b265514faa208d5645531e1d222</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_matrix &amp;h, std::string name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mcarlo.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/mcarlo/</path>
    <filename>mcarlo_8h</filename>
    <class kind="class">o2scl::mcarlo</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mcarlo_miser.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/mcarlo/</path>
    <filename>mcarlo__miser_8h</filename>
    <class kind="class">o2scl::mcarlo_miser</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mcarlo_plain.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/mcarlo/</path>
    <filename>mcarlo__plain_8h</filename>
    <class kind="class">o2scl::mcarlo_plain</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mcarlo_vegas.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/mcarlo/</path>
    <filename>mcarlo__vegas_8h</filename>
    <class kind="class">o2scl::mcarlo_vegas</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mcmc.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/mcarlo/</path>
    <filename>mcmc_8h</filename>
    <class kind="class">o2scl::mcmc_base</class>
    <class kind="class">o2scl::mcmc_table</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mcmc_mpi.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/mcarlo/</path>
    <filename>mcmc__mpi_8h</filename>
    <class kind="class">o2scl::mcmc_mpi</class>
    <class kind="class">o2scl::mcmc_cli</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mcmc_para.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/mcarlo/</path>
    <filename>mcmc__para_8h</filename>
    <class kind="class">o2scl::mcmc_para_base</class>
    <class kind="class">o2scl::mcmc_para_table</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>rng_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/mcarlo/</path>
    <filename>rng__gsl_8h</filename>
    <class kind="class">o2scl::rng_gsl</class>
    <class kind="class">o2scl::rng_gsl_uniform_real</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>diff_evo.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>diff__evo_8h</filename>
    <class kind="class">o2scl::diff_evo</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>diff_evo_adapt.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>diff__evo__adapt_8h</filename>
    <class kind="class">o2scl::diff_evo_adapt</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>min.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>min_8h</filename>
    <class kind="class">o2scl::min_base</class>
    <class kind="class">o2scl::min_bkt_base</class>
    <class kind="class">o2scl::min_de_base</class>
    <namespace>o2scl</namespace>
    <member kind="function">
      <type>double</type>
      <name>constraint</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7cbe75c44704d17436a155d3bdd0c4ad</anchor>
      <arglist>(double x, double center, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cont_constraint</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1d066e73d46c910b5623671246b2c12d</anchor>
      <arglist>(double x, double center, double width, double height, double tightness=40.0, double exp_arg_limit=50.0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lower_bound</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad0dc0371a51a3a0ffe9c049c4c5b6a18</anchor>
      <arglist>(double x, double center, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cont_lower_bound</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9adb221a091098330c68d729ff214a56</anchor>
      <arglist>(double x, double center, double width, double height, double tightness=40.0, double exp_arg_limit=50.0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>min_brent_boost.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>min__brent__boost_8h</filename>
    <class kind="class">o2scl::min_brent_boost</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>min_brent_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>min__brent__gsl_8h</filename>
    <class kind="class">o2scl::min_brent_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>min_cern.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>min__cern_8h</filename>
    <class kind="class">o2scl::min_cern</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>min_quad_golden.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>min__quad__golden_8h</filename>
    <class kind="class">o2scl::min_quad_golden</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mmin.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>mmin_8h</filename>
    <class kind="class">o2scl::gradient</class>
    <class kind="class">o2scl::gradient_gsl</class>
    <class kind="class">o2scl::mmin_base</class>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::function&lt; int(size_t, boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::vector&lt; double &gt; &amp;)&gt;</type>
      <name>grad_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad90e0b05aa00e237c0999c6b32869167</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mmin_bfgs2.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>mmin__bfgs2_8h</filename>
    <class kind="class">o2scl::mmin_wrap_gsl</class>
    <class kind="class">o2scl::mmin_wrapper_gsl</class>
    <class kind="class">o2scl::mmin_linmin_gsl</class>
    <class kind="class">o2scl::mmin_bfgs2</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mmin_conf.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>mmin__conf_8h</filename>
    <class kind="class">o2scl::mmin_gsl_base</class>
    <class kind="class">o2scl::mmin_conf</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mmin_conp.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>mmin__conp_8h</filename>
    <class kind="class">o2scl::mmin_conp</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mmin_constr.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>mmin__constr_8h</filename>
    <class kind="class">o2scl::mmin_constr</class>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::function&lt; int(size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;, const boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::vector&lt; double &gt; &amp;)&gt;</type>
      <name>ool_hfunct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a52d118c7ec6a071c04fd3314d81b2b6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mmin_constr_gencan.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>mmin__constr__gencan_8h</filename>
    <class kind="class">o2scl::mmin_constr_gencan</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mmin_constr_pgrad.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>mmin__constr__pgrad_8h</filename>
    <class kind="class">o2scl::mmin_constr_pgrad</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mmin_constr_spg.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>mmin__constr__spg_8h</filename>
    <class kind="class">o2scl::mmin_constr_spg</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mmin_fix.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>mmin__fix_8h</filename>
    <class kind="class">o2scl::mmin_fix_params</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mmin_simp2.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/min/</path>
    <filename>mmin__simp2_8h</filename>
    <class kind="class">o2scl::mmin_simp2</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>astep.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>astep_8h</filename>
    <class kind="class">o2scl::astep_base</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>astep_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>astep__gsl_8h</filename>
    <class kind="class">o2scl::ode_control_gsl</class>
    <class kind="class">o2scl::astep_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>astep_nonadapt.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>astep__nonadapt_8h</filename>
    <class kind="class">o2scl::astep_nonadapt</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>ode_bsimp_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__bsimp__gsl_8h</filename>
    <class kind="class">o2scl::ode_bsimp_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>ode_bv_mshoot.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__bv__mshoot_8h</filename>
    <class kind="class">o2scl::ode_bv_mshoot</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>ode_bv_multishoot.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__bv__multishoot_8h</filename>
    <class kind="class">o2scl::ode_bv_multishoot</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>ode_bv_solve.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__bv__solve_8h</filename>
    <class kind="class">o2scl::ode_bv_solve</class>
    <class kind="class">o2scl::ode_bv_shoot</class>
    <class kind="class">o2scl::ode_bv_shoot_grid</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>ode_funct.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__funct_8h</filename>
    <class kind="class">o2scl::ode_funct_strings</class>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::function&lt; int(double, size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::vector&lt; double &gt; &amp;)&gt;</type>
      <name>ode_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aac0d728bf00540c8969b4dae2fd570ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ode_it_solve.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__it__solve_8h</filename>
    <class kind="class">o2scl::ode_it_solve</class>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::function&lt; double(size_t, double, boost::numeric::ublas::matrix_row&lt; boost::numeric::ublas::matrix&lt; double &gt; &gt; &amp;)&gt;</type>
      <name>ode_it_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac4fc2fbca228be2e272b0ade909e7908</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ode_iv_solve.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__iv__solve_8h</filename>
    <class kind="class">o2scl::ode_iv_solve</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>ode_iv_table.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__iv__table_8h</filename>
    <class kind="class">o2scl::ode_iv_table</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>ode_jac_funct.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__jac__funct_8h</filename>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::function&lt; int(double, size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::matrix&lt; double &gt; &amp;, boost::numeric::ublas::vector&lt; double &gt; &amp;) &gt;</type>
      <name>ode_jac_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a734077820d58969f583eb9d4fad5fd69</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ode_rk8pd_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__rk8pd__gsl_8h</filename>
    <class kind="class">o2scl::ode_rk8pd_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>ode_rkck_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__rkck__gsl_8h</filename>
    <class kind="class">o2scl::ode_rkck_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>ode_rkf45_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__rkf45__gsl_8h</filename>
    <class kind="class">o2scl::ode_rkf45_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>ode_step.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/ode/</path>
    <filename>ode__step_8h</filename>
    <class kind="class">o2scl::ode_step</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>cheb_approx.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>cheb__approx_8h</filename>
    <class kind="class">o2scl::cheb_approx</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>contour.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>contour_8h</filename>
    <class kind="class">o2scl::contour_line</class>
    <class kind="class">o2scl::edge_crossings</class>
    <class kind="class">o2scl::contour</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>hist.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>hist_8h</filename>
    <class kind="class">o2scl::hist</class>
    <namespace>o2scl</namespace>
    <namespace>o2scl_hdf</namespace>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a789bc780042cd6858e3b1f6ee2514816</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a5b18e2127b22f45d52504fa00bb24496</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist &amp;h, std::string name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hist_2d.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>hist__2d_8h</filename>
    <class kind="class">o2scl::hist_2d</class>
    <namespace>o2scl</namespace>
    <namespace>o2scl_hdf</namespace>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a0f5c3df81ab877b01e86a7e830dbf6d8</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist_2d &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a03f389a3c1737c4c0abc3a95a5094b44</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist_2d &amp;h, std::string name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>interp2.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>interp2_8h</filename>
    <class kind="class">o2scl::interp2_base</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>interp2_direct.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>interp2__direct_8h</filename>
    <class kind="class">o2scl::interp2_direct</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>interp2_eqi.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>interp2__eqi_8h</filename>
    <class kind="class">o2scl::interp2_eqi</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>interp2_neigh.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>interp2__neigh_8h</filename>
    <class kind="class">o2scl::interp2_neigh</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>interp2_planar.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>interp2__planar_8h</filename>
    <class kind="class">o2scl::interp2_planar</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>interp2_seq.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>interp2__seq_8h</filename>
    <class kind="class">o2scl::interp2_seq</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>interpm_idw.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>interpm__idw_8h</filename>
    <class kind="class">o2scl::interpm_idw</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>interpm_krige.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>interpm__krige_8h</filename>
    <class kind="class">o2scl::interpm_krige</class>
    <class kind="class">o2scl::interpm_krige_nn</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>pinside.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>pinside_8h</filename>
    <class kind="class">o2scl::pinside</class>
    <class kind="struct">o2scl::pinside::point</class>
    <class kind="struct">o2scl::pinside::line</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>poly.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>poly_8h</filename>
    <class kind="class">o2scl::quadratic_real</class>
    <class kind="class">o2scl::quadratic_real_coeff</class>
    <class kind="class">o2scl::quadratic_complex</class>
    <class kind="class">o2scl::cubic_real</class>
    <class kind="class">o2scl::cubic_real_coeff</class>
    <class kind="class">o2scl::cubic_complex</class>
    <class kind="class">o2scl::quartic_real</class>
    <class kind="class">o2scl::quartic_real_coeff</class>
    <class kind="class">o2scl::quartic_complex</class>
    <class kind="class">o2scl::poly_real_coeff</class>
    <class kind="class">o2scl::poly_complex</class>
    <class kind="class">o2scl::cubic_real_coeff_cern</class>
    <class kind="class">o2scl::quartic_real_coeff_cern</class>
    <class kind="class">o2scl::quadratic_real_coeff_gsl</class>
    <class kind="class">o2scl::cubic_real_coeff_gsl</class>
    <class kind="class">o2scl::quartic_real_gsl</class>
    <class kind="class">o2scl::quartic_real_gsl2</class>
    <class kind="class">o2scl::poly_real_coeff_gsl</class>
    <class kind="class">o2scl::quadratic_complex_std</class>
    <class kind="class">o2scl::cubic_complex_std</class>
    <class kind="class">o2scl::quartic_real_simple</class>
    <class kind="class">o2scl::quartic_complex_simple</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>polylog.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>polylog_8h</filename>
    <class kind="class">o2scl::polylog</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>prob_dens_func.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>prob__dens__func_8h</filename>
    <class kind="class">o2scl::prob_dens_func</class>
    <class kind="class">o2scl::prob_dens_gaussian</class>
    <class kind="class">o2scl::prob_dens_frange</class>
    <class kind="class">o2scl::prob_dens_uniform</class>
    <class kind="class">o2scl::prob_dens_positive</class>
    <class kind="class">o2scl::prob_dens_lognormal</class>
    <class kind="class">o2scl::prob_dens_hist</class>
    <class kind="class">o2scl::prob_dens_mdim</class>
    <class kind="class">o2scl::prob_dens_mdim_factor</class>
    <class kind="class">o2scl::prob_dens_mdim_gaussian</class>
    <class kind="class">o2scl::prob_cond_mdim</class>
    <class kind="class">o2scl::prob_cond_mdim_rand_walk</class>
    <class kind="class">o2scl::prob_cond_mdim_invar</class>
    <class kind="class">o2scl::prob_cond_mdim_gaussian</class>
    <class kind="class">o2scl::prob_dens_mdim_gproc</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>series_acc.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>series__acc_8h</filename>
    <class kind="class">o2scl::series_acc</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>smooth_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>smooth__gsl_8h</filename>
    <class kind="class">o2scl::smooth_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>vec_stats.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/other/</path>
    <filename>vec__stats_8h</filename>
    <namespace>o2scl</namespace>
    <member kind="function">
      <type>double</type>
      <name>vector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9039b8887a88a6d259e5200ac783d263</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5ed4cf6ed870b578794a085b2f142811</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a25b01c01b0a95c710a76021c1cea0090</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a468efe33ff1acc5e1c5fc88d91cc2a30</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a32fa77b580428db64127f179e2cb8b61</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6e0c5be2399256a7cd3f559fba853abe</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae04c9e635187120d5df32153d33793a8</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a65691df6ec02f523e4389ac165b3012a</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a26a9dafb811ea69e76d0cc054551c309</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a33bf177e88b7e3c87f838469736e50b7</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a52d34ec959f53ce4d4616ae19c80242e</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab039d9dc7560d67af104450ca19420ba</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a788da9afcbe52c49e3034293cd4c6a0d</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac0be129fee9961223c287215694be2aa</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa56a6d0efbf1ebdcfa4322a3a0bfa4ec</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a456abc6ce504a3b1c47974e4dfe86f11</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a26f14d05845a86e572193e579f81f0c9</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a69e809900a9a236f4578148415859830</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae9ff0a054e0adcc5094f6c74fd970ece</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f8958d6e76a466a45960f797d0934f5</anchor>
      <arglist>(const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51053ed4567d8278db980fd2c0238d37</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5a2b51691501e6b11bc0fe04b488d9fd</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0512bc6e59d6ba4a0ffd7f76a05438f1</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afc058d49fda2251ddcf7e7b33d7e570d</anchor>
      <arglist>(const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a120cb8596b7e3253bd3d457f488741d7</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a937e7c576bf8d5ef31939fceb2f44cbc</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a29d508067691e4f8ce13803ac2035047</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa702ce60cae7139b309d11c38a81815d</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7088d981adbd1533ad2f45f3f5b61368</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1b0c4c61f8e0c2100790810f43658ca3</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e6e2fbae681ce8fe5502a6e3e7ddbf9</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t k, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9b81207ddb9c420e4f72359ce12ed6fb</anchor>
      <arglist>(const vec_t &amp;data, size_t k, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5c2f867f85c0c893544e34cc901f4b37</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5fa5e772c61cd2a2775fc491bcb4bdfa</anchor>
      <arglist>(const vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a46251eac7ba6423978e6abe630169aea</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2, double mean1, double mean2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad6f92f417d19dd6fbafb57e1288f18cb</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2, double mean1, double mean2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1629cb68736fca0461fa548447614a5c</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ada7be2b6ee08c365d1b911ce7a6735d2</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_correlation</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6a7e5bffe045f7449e6c803968720c4a</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_correlation</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a31c821331c50254070dd167d56cac299</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_pvariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac902edbd0a73d6a51b1f1d308b70a88e</anchor>
      <arglist>(size_t n1, const vec_t &amp;data1, size_t n2, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_pvariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6029f0c45c550e0a46256a320c4815fc</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_quantile_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0e62a8e50b224a15e87174c9702675e6</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_quantile_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d800190c0b2e95eb994c95fa5d89904</anchor>
      <arglist>(const vec_t &amp;data, const double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_median_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a10ff3da3200154c7d3dabdde2fb4bdb8</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_median_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a35211ab2475763f139fd9d9724ef8d42</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_chi_squared</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6d7c8ad3861fdf5efb8d5fe0e367d8d8</anchor>
      <arglist>(size_t n, const vec_t &amp;obs, const vec2_t &amp;exp, const vec3_t &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_chi_squared</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6f463ade721bdbddfb6a842dd89d22da</anchor>
      <arglist>(const vec_t &amp;obs, const vec2_t &amp;exp, const vec3_t &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_scott</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8e715f1e636912085e91e460b0d22a4d</anchor>
      <arglist>(size_t n, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_scott</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa12ad4877c8debadabd92a91df0a5350</anchor>
      <arglist>(const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sorted_quantile</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad17d794aea92cef56a60798a88eb4c38</anchor>
      <arglist>(size_t n, const vec_t &amp;v, double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_freedman</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a298803331b28f5b3ecb91689e478123e</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_freedman</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac699a9c2003c7aa4b145d59174f70ae2</anchor>
      <arglist>(vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e7cf6bbb09e9323a1817d113e5fc428</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adadd9d58a8905e3e663314799c9f74bb</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_factor</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a392ebdf3e97d1564863cadc69dd9e4f2</anchor>
      <arglist>(size_t n, const vec_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_factor</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a77f6a7fae8aed493d6f167590bb01fe8</anchor>
      <arglist>(const vec_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae061c1b6a4a3bfcdf20615e065c02708</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6b34852828f6f097312274d55cf90923</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2d1278f53704ca4b2619a4bc39cf3c10</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab40e03c0b3d2aef852203848b7b6cd15</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a45845be10ec25f6727ab837ed492ed4f</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adf0467a8810d63b9d517568d61aff58b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad923a2a804221d762610f2b5eb7ffe04</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2, const vec3_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae15c628654db2f2866b46a0132864508</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2, const vec3_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a375d3a056d02d2c70662db60a5cfd019</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2c3454a30cba5f3d9eb5e568735abfce</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a69afc4a8bced753baa5058fd58e8a9b5</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af72357d2fd030655aaa69a2e0a2f769e</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5509fab4f6a937d4d2807b991eea619f</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6c87191b765247b2b0f69e5894f15bd0</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abe78b7efb9f8896e5ce6a356d54f375b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a42137830d5ee72152d8907bb5abf0273</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e01e0d8f126a2b2e3beeb6443269f3b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e57edd9e8c168ff8a8020e5be3b6747</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a96632b85d74ea1672b11195f895dfe97</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad44e4ae6f12d173676355ff1c5375ab8</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a235274cf25437069d908a4cb78385dfe</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4881ac69e9f35ca4443cd8fdad7e4b7b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac3ef3add1ba5583c5cc25e82c832167b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a263aacc5ccf56f2fde6f45ac26d5460b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7f4bb3af27a4e0ed27ae8600cf030836</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abc576e7fe7a6574fc5c18941be9177cc</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a890c5bb163fd79181e87158b64250591</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a372f90023cb8fb5e0e862eb17ec55767</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f9e1c7ed7bf66d976166f3449d1f164</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a461f4e4bee778fb3f2b580c2002a7313</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9039b8887a88a6d259e5200ac783d263</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5ed4cf6ed870b578794a085b2f142811</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a25b01c01b0a95c710a76021c1cea0090</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a468efe33ff1acc5e1c5fc88d91cc2a30</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a32fa77b580428db64127f179e2cb8b61</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6e0c5be2399256a7cd3f559fba853abe</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae04c9e635187120d5df32153d33793a8</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a65691df6ec02f523e4389ac165b3012a</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a26a9dafb811ea69e76d0cc054551c309</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a33bf177e88b7e3c87f838469736e50b7</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a52d34ec959f53ce4d4616ae19c80242e</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab039d9dc7560d67af104450ca19420ba</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a788da9afcbe52c49e3034293cd4c6a0d</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac0be129fee9961223c287215694be2aa</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa56a6d0efbf1ebdcfa4322a3a0bfa4ec</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a456abc6ce504a3b1c47974e4dfe86f11</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a26f14d05845a86e572193e579f81f0c9</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a69e809900a9a236f4578148415859830</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae9ff0a054e0adcc5094f6c74fd970ece</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f8958d6e76a466a45960f797d0934f5</anchor>
      <arglist>(const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51053ed4567d8278db980fd2c0238d37</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5a2b51691501e6b11bc0fe04b488d9fd</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0512bc6e59d6ba4a0ffd7f76a05438f1</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afc058d49fda2251ddcf7e7b33d7e570d</anchor>
      <arglist>(const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a120cb8596b7e3253bd3d457f488741d7</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a937e7c576bf8d5ef31939fceb2f44cbc</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a29d508067691e4f8ce13803ac2035047</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa702ce60cae7139b309d11c38a81815d</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7088d981adbd1533ad2f45f3f5b61368</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1b0c4c61f8e0c2100790810f43658ca3</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e6e2fbae681ce8fe5502a6e3e7ddbf9</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t k, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9b81207ddb9c420e4f72359ce12ed6fb</anchor>
      <arglist>(const vec_t &amp;data, size_t k, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5c2f867f85c0c893544e34cc901f4b37</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5fa5e772c61cd2a2775fc491bcb4bdfa</anchor>
      <arglist>(const vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a46251eac7ba6423978e6abe630169aea</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2, double mean1, double mean2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad6f92f417d19dd6fbafb57e1288f18cb</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2, double mean1, double mean2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1629cb68736fca0461fa548447614a5c</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ada7be2b6ee08c365d1b911ce7a6735d2</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_correlation</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6a7e5bffe045f7449e6c803968720c4a</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_correlation</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a31c821331c50254070dd167d56cac299</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_pvariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac902edbd0a73d6a51b1f1d308b70a88e</anchor>
      <arglist>(size_t n1, const vec_t &amp;data1, size_t n2, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_pvariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6029f0c45c550e0a46256a320c4815fc</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_quantile_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0e62a8e50b224a15e87174c9702675e6</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_quantile_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d800190c0b2e95eb994c95fa5d89904</anchor>
      <arglist>(const vec_t &amp;data, const double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_median_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a10ff3da3200154c7d3dabdde2fb4bdb8</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_median_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a35211ab2475763f139fd9d9724ef8d42</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_chi_squared</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6d7c8ad3861fdf5efb8d5fe0e367d8d8</anchor>
      <arglist>(size_t n, const vec_t &amp;obs, const vec2_t &amp;exp, const vec3_t &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_chi_squared</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6f463ade721bdbddfb6a842dd89d22da</anchor>
      <arglist>(const vec_t &amp;obs, const vec2_t &amp;exp, const vec3_t &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_scott</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8e715f1e636912085e91e460b0d22a4d</anchor>
      <arglist>(size_t n, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_scott</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa12ad4877c8debadabd92a91df0a5350</anchor>
      <arglist>(const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sorted_quantile</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad17d794aea92cef56a60798a88eb4c38</anchor>
      <arglist>(size_t n, const vec_t &amp;v, double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_freedman</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a298803331b28f5b3ecb91689e478123e</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_freedman</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac699a9c2003c7aa4b145d59174f70ae2</anchor>
      <arglist>(vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e7cf6bbb09e9323a1817d113e5fc428</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adadd9d58a8905e3e663314799c9f74bb</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_factor</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a392ebdf3e97d1564863cadc69dd9e4f2</anchor>
      <arglist>(size_t n, const vec_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_factor</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a77f6a7fae8aed493d6f167590bb01fe8</anchor>
      <arglist>(const vec_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae061c1b6a4a3bfcdf20615e065c02708</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6b34852828f6f097312274d55cf90923</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2d1278f53704ca4b2619a4bc39cf3c10</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab40e03c0b3d2aef852203848b7b6cd15</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a45845be10ec25f6727ab837ed492ed4f</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adf0467a8810d63b9d517568d61aff58b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad923a2a804221d762610f2b5eb7ffe04</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2, const vec3_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae15c628654db2f2866b46a0132864508</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2, const vec3_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a375d3a056d02d2c70662db60a5cfd019</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2c3454a30cba5f3d9eb5e568735abfce</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a69afc4a8bced753baa5058fd58e8a9b5</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af72357d2fd030655aaa69a2e0a2f769e</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5509fab4f6a937d4d2807b991eea619f</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6c87191b765247b2b0f69e5894f15bd0</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abe78b7efb9f8896e5ce6a356d54f375b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a42137830d5ee72152d8907bb5abf0273</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e01e0d8f126a2b2e3beeb6443269f3b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e57edd9e8c168ff8a8020e5be3b6747</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a96632b85d74ea1672b11195f895dfe97</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad44e4ae6f12d173676355ff1c5375ab8</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a235274cf25437069d908a4cb78385dfe</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4881ac69e9f35ca4443cd8fdad7e4b7b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac3ef3add1ba5583c5cc25e82c832167b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a263aacc5ccf56f2fde6f45ac26d5460b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7f4bb3af27a4e0ed27ae8600cf030836</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abc576e7fe7a6574fc5c18941be9177cc</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a890c5bb163fd79181e87158b64250591</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a372f90023cb8fb5e0e862eb17ec55767</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f9e1c7ed7bf66d976166f3449d1f164</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a461f4e4bee778fb3f2b580c2002a7313</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>jacobian.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>jacobian_8h</filename>
    <class kind="class">o2scl::jacobian</class>
    <class kind="class">o2scl::jacobian_gsl</class>
    <class kind="class">o2scl::jacobian_exact</class>
    <class kind="struct">o2scl::jacobian_exact::ej_parms</class>
    <namespace>o2scl</namespace>
    <member kind="typedef">
      <type>std::function&lt; int(size_t, boost::numeric::ublas::vector&lt; double &gt; &amp;, size_t, boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::matrix&lt; double &gt; &amp;) &gt;</type>
      <name>jac_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a16d0b2b6b2fc4deeca3246f972324885</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mroot.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>mroot_8h</filename>
    <class kind="class">o2scl::mroot</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mroot_broyden.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>mroot__broyden_8h</filename>
    <class kind="class">o2scl::mroot_broyden</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mroot_cern.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>mroot__cern_8h</filename>
    <class kind="class">o2scl::mroot_cern</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>mroot_hybrids.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>mroot__hybrids_8h</filename>
    <class kind="class">o2scl::mroot_hybrids_base</class>
    <class kind="class">o2scl::mroot_hybrids</class>
    <class kind="class">o2scl::mroot_hybrids_arma_qr_econ</class>
    <class kind="class">o2scl::mroot_hybrids_eigen</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>root.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>root_8h</filename>
    <class kind="class">o2scl::root</class>
    <class kind="class">o2scl::root_bkt</class>
    <class kind="class">o2scl::root_de</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>root_bkt_cern.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>root__bkt__cern_8h</filename>
    <class kind="class">o2scl::root_bkt_cern</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>root_brent_gsl.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>root__brent__gsl_8h</filename>
    <class kind="class">o2scl::root_brent_gsl</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>root_cern.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>root__cern_8h</filename>
    <class kind="class">o2scl::root_cern</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>root_stef.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>root__stef_8h</filename>
    <class kind="class">o2scl::root_stef</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="file">
    <name>root_toms748.h</name>
    <path>/home/awsteiner/wcs/o2scl/src/root/</path>
    <filename>root__toms748_8h</filename>
    <class kind="class">o2scl::gsl_tolerance</class>
    <class kind="class">o2scl::root_toms748</class>
    <namespace>o2scl</namespace>
  </compound>
  <compound kind="class">
    <name>o2scl_acol::acol_manager</name>
    <filename>classo2scl__acol_1_1acol__manager.html</filename>
    <class kind="struct">o2scl_acol::acol_manager::iter_parms</class>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>run</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a06074b253868d2d3174efe20f2aa8abd</anchor>
      <arglist>(int argv, char *argc[])</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>run_o2graph</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a05dd6a56a58cc75da20c10c5bb4178ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>setup_cli</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aa79c4dd739c73d0e32d4774a2e371db0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>setup_options</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>af6f8ea5cafd40ac5852b52ccaca4f3aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>setup_help</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a74eff57d96eb5e0a0e5d27dac7690464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>setup_parameters</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a365f0de5ccde684632c5a0c48f785de9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_assign</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>ab21e3ac6aa12010a7f7e77fa351c77bc</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_calc</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a7f5421d0859a327a6a80be3e62acbddb</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_create</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>ac3f953718437861fc34604b19a97270b</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_create3</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a20a03bf1e866948cb9f3af2f05d56067</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_delete_col</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a80c5ad6531b4a97540f639d418767bc5</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_delete_rows</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a466de154d1fa8000ea0112a6a99be7a6</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_deriv</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a1343970230c121d876bc712816d897c7</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_deriv2</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a404d91c29852a55abc93f21b1576adfc</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_read</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a9015c082f16d2685c54a39a59c1550e5</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_filelist</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a6ceedabd38dba0af0d1a829c214f45d8</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_nlines</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a9f191df77b92aa3fbf1f71d39d3d480d</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_to_hist</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a9f01cc69ad4334139044c022adda03c7</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_type</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a1157791374779a5363cca95b94cc1d99</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_find_row</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a0687c019676377594b752358d7a7a2bd</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_function</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a82d3850d0649e51fc59d5823348c0d32</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_generic</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>abe4605df86f3685cd8b0d06f1cf11176</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_gen3_list</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a610b14b191bf5ae68be063f4f662306b</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_get_row</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a57f02c598e3e9f3c30422a11a167a2ed</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_slice</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>ac6168fca8cef84c69ca0d7a88faa4a50</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_fit</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a50b29cd8f839a2a559827e52e4b488a1</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_insert</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>af37fc7a38adec67cd1ff2180a9e221ae</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_insert_full</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a7252b07a8b1ab7bcf357e5692128262d</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_integ</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a37a3ac3e2ef7f3be313eaf16fcbe78f1</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_interactive</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a3dbf60478a67db1e8d4a73421c1adad3</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_internal</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a2ebe3df2c438eb54f1d52254a97b6fd5</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_interp</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a2d6ec8f6bc109bed80835c9d2ecf9720</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_list</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aa7875c3481906db0ad72f3b7d5c422b8</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_max</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a152391a060fbc94b4cc4a643249f5d54</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_min</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a5514c6de3c6973468cad4af6e565c9e3</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_index</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a952d546d817a45b885caa04bc6df8a42</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_output</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>ad0107d80da8262325428296fc4e37656</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_preview</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a8cdaafad658f9f5a251c7ed6d8488195</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_cat</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a2988a7b486ba56f12af3c3be4da378e0</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_sum</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a26a358981bd36af0049f6de1353d7357</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_rename</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a4d1093b285576d4da0bfb4367ffdfcc1</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_select</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a38cae23939d367b11caf456f6f3facc0</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_select_rows</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aeac3b5386cbb3c345a2887306adbb2d2</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_set</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>afa5b98c87d80d97fc5d0f7ed53c22e18</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_set_data</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aeff9364d97c1554b5369a2d1ceee404c</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_set_unit</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a6e39796aa46e15d1e6cd15f5ad7f0515</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_contours</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>af9503843815c2ec638b6e7e3c4c1110a</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_show_units</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a17ec109370ccfd9a8a7fa67457f45cb6</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_get_unit</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a5b8c5833df100aa2da70221bf3edc33c</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_entry</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a15d71a4c481ba7c9d178e4dbdca12d6e</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_convert_unit</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a52136e1255c11638ab6f8f031cd08bdc</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_sort</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>afed91f7aa3a378c741e100a79c2f435f</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_stats</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a1f9920783078e0f3273bdcf37d9d6dd6</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_version</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a40e73c3271ce84d17f6efc7136e033fa</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_get_conv</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aa0eec75a8a5bb4ad798b300fdd18f145</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_swidth</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>acced12099630397fdfb8ee5cabee92bb</anchor>
      <arglist>(int ncol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>comm_none</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a7a66130ff59230be6eba5b792d16c45d</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static herr_t</type>
      <name>iterate_func</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a946244d094fcefd58f62946e4b24caf5</anchor>
      <arglist>(hid_t loc, const char *name, const H5L_info_t *inf, void *op_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static herr_t</type>
      <name>filelist_func</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a1bbc48742385a2415815ce3e06062938</anchor>
      <arglist>(hid_t loc, const char *name, const H5L_info_t *inf, void *op_data)</arglist>
    </member>
    <member kind="variable">
      <type>table_units</type>
      <name>table_obj</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a735fdffe991d4bc7f0d0439be6d928ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hist</type>
      <name>hist_obj</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a1aa3e632dbe856b0bf76702829e5f261</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hist_2d</type>
      <name>hist_2d_obj</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aa6c263c343d6dba399608c9bafa09bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aea1a6bcf2983d6576370d6f754a445d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cli *</type>
      <name>cl</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aa0431186402f2d55940d79ebe5389df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>table3d</type>
      <name>table3d_obj</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a240773d6a522642e07b24996fea68c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; o2scl::contour_line &gt;</type>
      <name>cont_obj</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a9cf5bb6460c28081c5e9ebcbf9210fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>post_interactive</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a327ed6f2e8f5ead5e920f76066654511</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>env_var_name</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a997cb3be23b094cff4b1e863866fcfd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string * &gt;</type>
      <name>str_params</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aabff4c69ec92890fe71b6f960a4d7bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, int * &gt;</type>
      <name>int_params</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a4b40a77c33a884850d1314fcfc5466d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clear_obj</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a0f6a3aba4d03c50cc6aefe93679fdf69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>get_input</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a8cad28f60417e950bb51d641b7b7ae2e</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, std::vector&lt; std::string &gt; &amp;directions, std::vector&lt; std::string &gt; &amp;in, std::string comm_name, bool itive_com)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>get_input_one</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a48b9441c52ff13fa1c698c22def3e6de</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, std::string directions, std::string &amp;in, std::string comm_name, bool itive_com)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>format_float</type>
      <name>ffl</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a8cfc1cbb450e001f862bac0b7f11a118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::convert_units &amp;</type>
      <name>cng</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a56aaa1874df8893a426c6f4e1fa61bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ncols</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a9a2377c4418724e27104ba426eff204c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>prec</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a2a6af6669a6610c3f6e280a6fa6f6601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a8e807081e87364ac49e4891fdef1a155</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>pretty</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a50c4e943cc67c793027ac65baee32888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>names_out</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a068878478ae61dc016c80f6fc30bc082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>obj_name</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>abef9ef19cb0613579e6555e33f5d746b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>unit_fname</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a3fa344d3bd99d3ece37f1b0928555d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>def_args</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aa0be4ad22b3eeff59ceb9d8a61aacbf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>user_ncols</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a57f23154b7fccddf3a94bdb7f062cf66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>interp_type</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a266309d0bbaaf776570b0c2d4a48d6d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>scientific</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a996ecdd9e79f3eca469af4bd252cfc8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>prec</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a2a6af6669a6610c3f6e280a6fa6f6601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a8e807081e87364ac49e4891fdef1a155</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>pretty</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a50c4e943cc67c793027ac65baee32888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>names_out</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a068878478ae61dc016c80f6fc30bc082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>obj_name</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>abef9ef19cb0613579e6555e33f5d746b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>unit_fname</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a3fa344d3bd99d3ece37f1b0928555d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>def_args</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>aa0be4ad22b3eeff59ceb9d8a61aacbf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>user_ncols</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a57f23154b7fccddf3a94bdb7f062cf66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>interp_type</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a266309d0bbaaf776570b0c2d4a48d6d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>scientific</name>
      <anchorfile>classo2scl__acol_1_1acol__manager.html</anchorfile>
      <anchor>a996ecdd9e79f3eca469af4bd252cfc8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::anneal_base</name>
    <filename>classo2scl_1_1anneal__base.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>rng_t</templarg>
    <base>mmin_base&lt; func_t, func_t, vec_t &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a1717efef8f03174d9579fec1b821c0ee</anchor>
      <arglist>(size_t nvar, vec_t &amp;x, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>acb344feeedeaf19f892b4e556e05f6af</anchor>
      <arglist>(size_t nv, vec_t &amp;x, double y, int iter, double tptr, std::string comment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a5841e61b5f41e0c2f3e01dc2ed2b3062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>anneal_base</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a570d3c9a92328e0622b0c8699ee97fcc</anchor>
      <arglist>(const anneal_base&lt; func_t, vec_t, rng_t &gt; &amp;ab)</arglist>
    </member>
    <member kind="function">
      <type>anneal_base&lt; func_t, vec_t, rng_t &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a083aa4c243198f8d166748ca6cb1afc6</anchor>
      <arglist>(const anneal_base&lt; func_t, vec_t, rng_t &gt; &amp;ab)</arglist>
    </member>
    <member kind="variable">
      <type>rng_t</type>
      <name>rng</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a51afcf6a2deb3f103c3be5f731400dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>o2scl::prob_dens_uniform</type>
      <name>dist</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a7bb7e240c197e160480cbaca4ff20b28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>anneal_base&lt; func_t, vec_t, rng_t, rng_dist_t &gt;</name>
    <filename>classo2scl_1_1anneal__base.html</filename>
    <base>mmin_base&lt; func_t, func_t, vec_t &gt;</base>
    <member kind="function">
      <type></type>
      <name>anneal_base</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a570d3c9a92328e0622b0c8699ee97fcc</anchor>
      <arglist>(const anneal_base&lt; func_t, vec_t, rng_t &gt; &amp;ab)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a1717efef8f03174d9579fec1b821c0ee</anchor>
      <arglist>(size_t nvar, vec_t &amp;x, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>acb344feeedeaf19f892b4e556e05f6af</anchor>
      <arglist>(size_t nv, vec_t &amp;x, double y, int iter, double tptr, std::string comment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a5841e61b5f41e0c2f3e01dc2ed2b3062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>anneal_base&lt; func_t, vec_t, rng_t &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a083aa4c243198f8d166748ca6cb1afc6</anchor>
      <arglist>(const anneal_base&lt; func_t, vec_t, rng_t &gt; &amp;ab)</arglist>
    </member>
    <member kind="variable">
      <type>rng_t</type>
      <name>rng</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a51afcf6a2deb3f103c3be5f731400dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>o2scl::prob_dens_uniform</type>
      <name>dist</name>
      <anchorfile>classo2scl_1_1anneal__base.html</anchorfile>
      <anchor>a7bb7e240c197e160480cbaca4ff20b28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::anneal_gsl</name>
    <filename>classo2scl_1_1anneal__gsl.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>rng_t</templarg>
    <base>o2scl::anneal_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a7f9f1dc7379e4cdd3702e172927c838a</anchor>
      <arglist>(size_t nvar, vec_t &amp;x0, double &amp;fmin, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a5a07a76bc334f2dbad9a16cc544dfccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_step</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a292f45c109b47a67189564ded338d80c</anchor>
      <arglist>(size_t nv, vec2_t &amp;stepv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>anneal_gsl</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>aa339eed6536ebcd4ab6bf18d23a0142d</anchor>
      <arglist>(const anneal_gsl&lt; func_t, vec_t, rng_t &gt; &amp;ag)</arglist>
    </member>
    <member kind="function">
      <type>anneal_gsl&lt; func_t, vec_t, rng_t &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a78cff1ac5136b075d6f0be05dd7a3866</anchor>
      <arglist>(const anneal_gsl&lt; func_t, vec_t, rng_t &gt; &amp;ag)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>boltz</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a516b2efbb3e0f3c9fb5aec6bcf81ddec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>T_start</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a6d708c653c1233fda76a166b32190a92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>T_dec</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a8a397021df3fab457853cf6393a5a1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_dec</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a565cc1bd18275fa5f6d243d9405ce97e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>min_step_ratio</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a6ad0629aa98d342ab9c0aceb96aa166f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>next</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a0ef089728c9f2e648e098556838efc81</anchor>
      <arglist>(size_t nvar, vec_t &amp;x_old, double min_old, vec_t &amp;x_new, double min_new, double &amp;T, size_t n_moves, double best_E, bool &amp;finished)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>start</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a6490b4bbb1a11ae5c296f7f27d1ee498</anchor>
      <arglist>(size_t nvar, double &amp;T)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a08aaaae79562459ce83420e21124ded2</anchor>
      <arglist>(size_t n, double boltz_factor=1.0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>af1cc388fb2fbbc1da8378331fcd74f28</anchor>
      <arglist>(vec_t &amp;sx, int nvar)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>step_norm</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>ae730b8eb78cd1a2ba33030c532cf20bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>step_vec</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a070ae3d3f770e1f662af336e2cdb573d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a104584fef7542bc8c13e789dc99a88d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>new_x</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a23f883d3df9764ba14a3cf1ed1ad2055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>best_x</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a3cd47b4008fbad7d0653e9f3adc23e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>old_x</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>ad9c5d4c367a6998223f364f39cc1a88d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a104584fef7542bc8c13e789dc99a88d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>new_x</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a23f883d3df9764ba14a3cf1ed1ad2055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>best_x</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>a3cd47b4008fbad7d0653e9f3adc23e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>old_x</name>
      <anchorfile>classo2scl_1_1anneal__gsl.html</anchorfile>
      <anchor>ad9c5d4c367a6998223f364f39cc1a88d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::anneal_mt</name>
    <filename>classo2scl_1_1anneal__mt.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>anneal_base&lt; func_t, vec_t, rng_t, rng_dist_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a62345fd2b314e970ce3615728922299e</anchor>
      <arglist>(size_t nv, vec_t &amp;x0, double &amp;fmin, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>af377326a4e5f40785d3b1f5aa61406cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_verbose_stream</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a9ca6d92a089266f1277111b5f02464ab</anchor>
      <arglist>(std::ostream &amp;out, std::istream &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a267fe4b9e1e8e812e0b4fba9db80ffed</anchor>
      <arglist>(size_t nv, vec_t &amp;xx, double y, int iter, double tptr, std::string comment)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_step</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a2850603dcdd48984fd2d18026f922715</anchor>
      <arglist>(size_t nv, vec2_t &amp;stepv)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a58550151dc9a40724ef87c1b57ba2083</anchor>
      <arglist>(size_t nv, vec_t &amp;x0, double &amp;fmin, func_t &amp;func, size_t np)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>next</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ac09b47ae48df26583899b6634e55e315</anchor>
      <arglist>(size_t nv, vec_t &amp;x_old, double min_old, vec_t &amp;x_new, double min_new, double &amp;T, size_t n_moves, bool &amp;finished)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>start</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a2646e65a20fe98a3974a541381a7259d</anchor>
      <arglist>(size_t nv, double &amp;T)</arglist>
    </member>
    <member kind="variable">
      <type>rng_t</type>
      <name>def_rng</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a3b7d0662780c2d7c4fb702117ec5b612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>boltz</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a445197b2da63851ced3431ffe967109e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ab880fb0074d00784ac2b8f89df437ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a25768e9b744407a39d5de9e5bc1e8582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>out_step_changes</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ac94ca4ed7e36885e7b4be3538230f2c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>out_best</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a7b9c1db7bad448362bbe8ece8b5d9b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tolx</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>adabf3773e04212329c54380d9d7aadea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>T_start</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a63d70350a18d984799db1cda2dee5414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>T_dec</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a57d2193a10da6d7f1a931f8e3fadade3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_dec</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a1e25a77d2669de8c0f71cd27e5f3da84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>min_step_ratio</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ac10226908aeb20c528f33ad891c5c015</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>func_wrapper</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a2bef0db336142dfcc5afa80a8d3c5b9a</anchor>
      <arglist>(size_t ip)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>af8c4a3de7de9063a0683da8b06ffed9f</anchor>
      <arglist>(size_t nv, size_t np)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ac877e797e225b1456d0eb94dad67dbf8</anchor>
      <arglist>(size_t nv, vec_t &amp;sx)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>outs</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a14a5a96884f9216488269a5c81648bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::istream *</type>
      <name>ins</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ab4b74ca94886ec929ef0175ac07fae68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nproc</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a955947ac5581a7269d1749431c00db9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nvar</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ab4dff486b9778906593ceb1e392049a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>f</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a39b304ff3993f44d9ea802f37786e390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>step_vec</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ab28adb7a9c1969ba7b7d95811f8fe111</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a58550151dc9a40724ef87c1b57ba2083</anchor>
      <arglist>(size_t nv, vec_t &amp;x0, double &amp;fmin, func_t &amp;func, size_t np)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>next</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ac09b47ae48df26583899b6634e55e315</anchor>
      <arglist>(size_t nv, vec_t &amp;x_old, double min_old, vec_t &amp;x_new, double min_new, double &amp;T, size_t n_moves, bool &amp;finished)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>start</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a2646e65a20fe98a3974a541381a7259d</anchor>
      <arglist>(size_t nv, double &amp;T)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>boltz</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a445197b2da63851ced3431ffe967109e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ab880fb0074d00784ac2b8f89df437ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a25768e9b744407a39d5de9e5bc1e8582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>out_step_changes</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ac94ca4ed7e36885e7b4be3538230f2c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>out_best</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a7b9c1db7bad448362bbe8ece8b5d9b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tolx</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>adabf3773e04212329c54380d9d7aadea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>T_start</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a63d70350a18d984799db1cda2dee5414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>T_dec</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a57d2193a10da6d7f1a931f8e3fadade3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_dec</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>a1e25a77d2669de8c0f71cd27e5f3da84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>min_step_ratio</name>
      <anchorfile>classo2scl_1_1anneal__mt.html</anchorfile>
      <anchor>ac10226908aeb20c528f33ad891c5c015</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::astep_base</name>
    <filename>classo2scl_1_1astep__base.html</filename>
    <templarg>vec_y_t</templarg>
    <templarg>vec_dydx_t</templarg>
    <templarg>vec_yerr_t</templarg>
    <templarg>func_t</templarg>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>astep</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>aa95077aefba35acba8947f98699db4a5</anchor>
      <arglist>(double &amp;x, double xlimit, double &amp;h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx_out, vec_yerr_t &amp;yerr, func_t &amp;derivs)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>astep_derivs</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>ad032f0e91629b4f515ddd4714d5b9b5f</anchor>
      <arglist>(double &amp;x, double xlimit, double &amp;h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_yerr_t &amp;yerr, func_t &amp;derivs)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>astep_full</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>a90e5df827680c0f334f330e4c1c01956</anchor>
      <arglist>(double x, double xlimit, double &amp;x_out, double &amp;h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_y_t &amp;yout, vec_yerr_t &amp;yerr, vec_dydx_t &amp;dydx_out, func_t &amp;derivs)=0</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_step</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>a1d837c562cf516f4eeb3e3e0a78349a4</anchor>
      <arglist>(ode_step&lt; vec_y_t, vec_dydx_t, vec_yerr_t, func_t &gt; &amp;step)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>a980cb9b29a929ee97fb5d1e7d69f906b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ode_rkck_gsl&lt; vec_y_t, vec_dydx_t, vec_yerr_t, func_t &gt;</type>
      <name>def_step</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>a39d2627438fd5dd0a241624d8be909d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ode_step&lt; vec_y_t, vec_dydx_t, vec_yerr_t, func_t &gt; *</type>
      <name>stepp</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>a08a448d66b089e10f469f41c93f1b2a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>astep_base&lt; vec_t, vec_t, vec_t, func_t &gt;</name>
    <filename>classo2scl_1_1astep__base.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>astep</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>aa95077aefba35acba8947f98699db4a5</anchor>
      <arglist>(double &amp;x, double xlimit, double &amp;h, size_t n, vec_t &amp;y, vec_t &amp;dydx_out, vec_t &amp;yerr, func_t &amp;derivs)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>astep_derivs</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>ad032f0e91629b4f515ddd4714d5b9b5f</anchor>
      <arglist>(double &amp;x, double xlimit, double &amp;h, size_t n, vec_t &amp;y, vec_t &amp;dydx, vec_t &amp;yerr, func_t &amp;derivs)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>astep_full</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>a90e5df827680c0f334f330e4c1c01956</anchor>
      <arglist>(double x, double xlimit, double &amp;x_out, double &amp;h, size_t n, vec_t &amp;y, vec_t &amp;dydx, vec_t &amp;yout, vec_t &amp;yerr, vec_t &amp;dydx_out, func_t &amp;derivs)=0</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_step</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>a1d837c562cf516f4eeb3e3e0a78349a4</anchor>
      <arglist>(ode_step&lt; vec_t, vec_t, vec_t, func_t &gt; &amp;step)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>a980cb9b29a929ee97fb5d1e7d69f906b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ode_rkck_gsl&lt; vec_t, vec_t, vec_t, func_t &gt;</type>
      <name>def_step</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>a39d2627438fd5dd0a241624d8be909d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ode_step&lt; vec_t, vec_t, vec_t, func_t &gt; *</type>
      <name>stepp</name>
      <anchorfile>classo2scl_1_1astep__base.html</anchorfile>
      <anchor>a08a448d66b089e10f469f41c93f1b2a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::astep_gsl</name>
    <filename>classo2scl_1_1astep__gsl.html</filename>
    <templarg>vec_y_t</templarg>
    <templarg>vec_dydx_t</templarg>
    <templarg>vec_yerr_t</templarg>
    <templarg>func_t</templarg>
    <base>o2scl::astep_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>astep</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>abfb993d8321861ced783437b205dc28a</anchor>
      <arglist>(double &amp;x, double xmax, double &amp;h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx_out, vec_yerr_t &amp;yerr, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>astep_derivs</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a7a834876eff6a2b3bd72677b1c9e6815</anchor>
      <arglist>(double &amp;x, double xmax, double &amp;h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_yerr_t &amp;yerr, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>astep_full</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>ae1e4603603f5125e72c6d9a084643fe6</anchor>
      <arglist>(double x, double xmax, double &amp;x_out, double &amp;h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_y_t &amp;yout, vec_yerr_t &amp;yerr, vec_dydx_t &amp;dydx_out, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable">
      <type>ode_control_gsl&lt; vec_y_t, vec_dydx_t, vec_yerr_t &gt;</type>
      <name>con</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a05ce8403a103fa23e55dbdb01bc925a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>evolve_apply</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a64439880ef6f9cd879acdfdf9da2fb8f</anchor>
      <arglist>(double t0, double t1, double &amp;t, double &amp;h, size_t nvar, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_y_t &amp;yout, vec_yerr_t &amp;yerr, vec_dydx_t &amp;dydx_out, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_y_t</type>
      <name>yout_int</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a165c70843ba048929e6d048bf819806c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_dydx_t</type>
      <name>dydx_int</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a8b3123a0bf3edc9483927fa6111d73ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>last_step</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a66ab6a60b67637bd3a67fc4677898a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned long int</type>
      <name>count</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a876f02c9039dde8271efc9afaa840a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned long int</type>
      <name>failed_steps</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>ace2f1c161ac627f071df272f705ba2d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>msize</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>aae3c68683ad19bca3a3ed61f2527e95d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>astep_gsl&lt; vec_t, vec_t, vec_t, func_t &gt;</name>
    <filename>classo2scl_1_1astep__gsl.html</filename>
    <base>astep_base&lt; vec_t, vec_t, vec_t, func_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>astep</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>abfb993d8321861ced783437b205dc28a</anchor>
      <arglist>(double &amp;x, double xmax, double &amp;h, size_t n, vec_t &amp;y, vec_t &amp;dydx_out, vec_t &amp;yerr, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>astep_derivs</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a7a834876eff6a2b3bd72677b1c9e6815</anchor>
      <arglist>(double &amp;x, double xmax, double &amp;h, size_t n, vec_t &amp;y, vec_t &amp;dydx, vec_t &amp;yerr, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>astep_full</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>ae1e4603603f5125e72c6d9a084643fe6</anchor>
      <arglist>(double x, double xmax, double &amp;x_out, double &amp;h, size_t n, vec_t &amp;y, vec_t &amp;dydx, vec_t &amp;yout, vec_t &amp;yerr, vec_t &amp;dydx_out, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable">
      <type>ode_control_gsl&lt; vec_t, vec_t, vec_t &gt;</type>
      <name>con</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a05ce8403a103fa23e55dbdb01bc925a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>evolve_apply</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a64439880ef6f9cd879acdfdf9da2fb8f</anchor>
      <arglist>(double t0, double t1, double &amp;t, double &amp;h, size_t nvar, vec_t &amp;y, vec_t &amp;dydx, vec_t &amp;yout, vec_t &amp;yerr, vec_t &amp;dydx_out, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>yout_int</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a165c70843ba048929e6d048bf819806c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>dydx_int</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a8b3123a0bf3edc9483927fa6111d73ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>last_step</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a66ab6a60b67637bd3a67fc4677898a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned long int</type>
      <name>count</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>a876f02c9039dde8271efc9afaa840a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned long int</type>
      <name>failed_steps</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>ace2f1c161ac627f071df272f705ba2d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>msize</name>
      <anchorfile>classo2scl_1_1astep__gsl.html</anchorfile>
      <anchor>aae3c68683ad19bca3a3ed61f2527e95d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::astep_nonadapt</name>
    <filename>classo2scl_1_1astep__nonadapt.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::astep_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>astep</name>
      <anchorfile>classo2scl_1_1astep__nonadapt.html</anchorfile>
      <anchor>abe082bbb1527a1cb9cc579a523e40fb3</anchor>
      <arglist>(double &amp;x, double xlimit, double &amp;h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx_out, vec_yerr_t &amp;yerr, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>astep_derivs</name>
      <anchorfile>classo2scl_1_1astep__nonadapt.html</anchorfile>
      <anchor>a9d1d1e2b1abccbef35d1e3cd810af560</anchor>
      <arglist>(double &amp;x, double xlimit, double &amp;h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_yerr_t &amp;yerr, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>astep_full</name>
      <anchorfile>classo2scl_1_1astep__nonadapt.html</anchorfile>
      <anchor>afa5949d68e6d9fb0656adf5f513ba3ae</anchor>
      <arglist>(double x, double xlimit, double &amp;x_out, double &amp;h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_y_t &amp;yout, vec_yerr_t &amp;yerr, vec_dydx_t &amp;dydx_out, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>msize</name>
      <anchorfile>classo2scl_1_1astep__nonadapt.html</anchorfile>
      <anchor>ad661011f1e7d10fe4bf4f1f78dbeaf8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_dydx_t</type>
      <name>dydx_int</name>
      <anchorfile>classo2scl_1_1astep__nonadapt.html</anchorfile>
      <anchor>a043ec59869238bb7ae894da5d85dd3e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_pcubature::cache</name>
    <filename>classo2scl_1_1inte__pcubature_1_1cache.html</filename>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m</name>
      <anchorfile>classo2scl_1_1inte__pcubature_1_1cache.html</anchorfile>
      <anchor>a06471c0b5d54e0cb324c51962ce6d22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mi</name>
      <anchorfile>classo2scl_1_1inte__pcubature_1_1cache.html</anchorfile>
      <anchor>a56dc2cc32daa5dc1ce4b9664a02834fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>val</name>
      <anchorfile>classo2scl_1_1inte__pcubature_1_1cache.html</anchorfile>
      <anchor>a1407e8ec28bcfd7fc14e6907cb7b71da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::calculator</name>
    <filename>classo2scl_1_1calculator.html</filename>
    <member kind="function">
      <type></type>
      <name>calculator</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>a2e919500e878168bf73869cd9e17270f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>calculator</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>aabe8f81f8fc52a49def1c7ff40e9a8ec</anchor>
      <arglist>(const char *expr, std::map&lt; std::string, double &gt; *vars=0, bool debug=false, std::map&lt; std::string, int &gt; opPrec=opPrecedence)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compile</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>af61d3e332083bd053edf03494e3ec146</anchor>
      <arglist>(const char *expr, std::map&lt; std::string, double &gt; *vars=0, bool debug=false, std::map&lt; std::string, int &gt; opPrec=opPrecedence)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>a7ff8da5fec15af5c8bbfa3e8afe0598d</anchor>
      <arglist>(std::map&lt; std::string, double &gt; *vars=0)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>RPN_to_string</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>ad24a46cba958c2e297301f6e76a0dd5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>calculate</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>a89708b3ccb17129f7a5be870f0773891</anchor>
      <arglist>(const char *expr, std::map&lt; std::string, double &gt; *vars=0, bool debug=false)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::map&lt; std::string, int &gt;</type>
      <name>buildOpPrecedence</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>ad8dfd3199a7aff1d8336adcef95e8138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>isvariablechar</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>a23f5910bbea14f6c1b509d5d29be3482</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static double</type>
      <name>calculate</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>a7cad5488bd2c676c1daae41c2bcf218b</anchor>
      <arglist>(TokenQueue_t RPN, std::map&lt; std::string, double &gt; *vars=0)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>cleanRPN</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>a99941161dc4755c1fb24308c38f1e630</anchor>
      <arglist>(TokenQueue_t &amp;rpn)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static TokenQueue_t</type>
      <name>toRPN</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>a3f1da1498bfcbfc41bcceb5dcd653b0e</anchor>
      <arglist>(const char *expr, std::map&lt; std::string, double &gt; *vars, bool debug=false, std::map&lt; std::string, int &gt; opPrec=opPrecedence)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TokenQueue_t</type>
      <name>RPN</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>a924dfdc782f35d647f47f0663bb2b7db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::map&lt; std::string, int &gt;</type>
      <name>opPrecedence</name>
      <anchorfile>classo2scl_1_1calculator.html</anchorfile>
      <anchor>a0ac7bcc27d3bb2aa74951be5fa0cc0ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cheb_approx</name>
    <filename>classo2scl_1_1cheb__approx.html</filename>
    <member kind="function">
      <type></type>
      <name>cheb_approx</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ab2d1f19a6d7a5bccf7364214bc2d1bd4</anchor>
      <arglist>(const cheb_approx &amp;gc)</arglist>
    </member>
    <member kind="function">
      <type>cheb_approx &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ad4e52b6e193ee2bb9344707a650a4acf</anchor>
      <arglist>(const cheb_approx &amp;gc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ab511ed9170d43f3d6ac6f7c7e6728c02</anchor>
      <arglist>(func_t &amp;func, size_t ord, double a1, double b1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a6d908cca7ce00ee88bcf61ab935d1934</anchor>
      <arglist>(double a1, double b1, size_t ord, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_func_values</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ab1be969f55ba4169abc81ab45864b5cf</anchor>
      <arglist>(double a1, double b1, size_t ord, vec_t &amp;fval)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a8982f3743f4fa3a4d0d11480d1edd942</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a742afa8b83a3414960d7d2c5b34e371c</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval_n</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a37f42d72600caa5cfea65afd3b9874d8</anchor>
      <arglist>(size_t n, double x) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_err</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ad09d56c276343bbc4c7a3fb761294fd6</anchor>
      <arglist>(double x, double &amp;result, double &amp;abserr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_n_err</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>adb1864fc0d0192f62cb0fa21f4309215</anchor>
      <arglist>(size_t n, double x, double &amp;result, double &amp;abserr)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_coefficient</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ae573bd4a01e927660f6f09f0168c8dc3</anchor>
      <arglist>(size_t ix) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_coefficient</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ac1b785f85aafd201b243b1d687914945</anchor>
      <arglist>(size_t ix, double co)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_endpoints</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>acf66ad5c11697d424552a34a984f9193</anchor>
      <arglist>(double &amp;la, double &amp;lb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_coefficients</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a884e4047e7f4be3fcdbc38cd949baafb</anchor>
      <arglist>(size_t n, vec_t &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_coefficients</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a224d95efda2c7991b2ec258b8e2485e9</anchor>
      <arglist>(size_t n, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a263f3d541a84e73235e8ef953ba280fe</anchor>
      <arglist>(cheb_approx &amp;gc) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a8325a1e64d2a3037bcf636d0105f7b6e</anchor>
      <arglist>(cheb_approx &amp;gc) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>c</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a5760e3fca7399e1987af87748ca644cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>order</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a70ffd63344597fdf2fef9638cbe03883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>a</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a39e3b89ae539514bc8cb3d60bec99bd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>b</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>af9f89bc3077d3fcb025a456bc279f133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>order_sp</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ade70b5aeb2e1837e19f1e43de61b443f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>f</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>afe474185c9ae2c331e51be4710119310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>init_called</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ac71fadf1f720ee3db98240844ac3ab9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ab511ed9170d43f3d6ac6f7c7e6728c02</anchor>
      <arglist>(func_t &amp;func, size_t ord, double a1, double b1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a6d908cca7ce00ee88bcf61ab935d1934</anchor>
      <arglist>(double a1, double b1, size_t ord, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_func_values</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ab1be969f55ba4169abc81ab45864b5cf</anchor>
      <arglist>(double a1, double b1, size_t ord, vec_t &amp;fval)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a8982f3743f4fa3a4d0d11480d1edd942</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a742afa8b83a3414960d7d2c5b34e371c</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval_n</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a37f42d72600caa5cfea65afd3b9874d8</anchor>
      <arglist>(size_t n, double x) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_err</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ad09d56c276343bbc4c7a3fb761294fd6</anchor>
      <arglist>(double x, double &amp;result, double &amp;abserr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_n_err</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>adb1864fc0d0192f62cb0fa21f4309215</anchor>
      <arglist>(size_t n, double x, double &amp;result, double &amp;abserr)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_coefficient</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ae573bd4a01e927660f6f09f0168c8dc3</anchor>
      <arglist>(size_t ix) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_coefficient</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>ac1b785f85aafd201b243b1d687914945</anchor>
      <arglist>(size_t ix, double co)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_endpoints</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>acf66ad5c11697d424552a34a984f9193</anchor>
      <arglist>(double &amp;la, double &amp;lb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_coefficients</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a884e4047e7f4be3fcdbc38cd949baafb</anchor>
      <arglist>(size_t n, vec_t &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_coefficients</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a224d95efda2c7991b2ec258b8e2485e9</anchor>
      <arglist>(size_t n, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a263f3d541a84e73235e8ef953ba280fe</anchor>
      <arglist>(cheb_approx &amp;gc) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1cheb__approx.html</anchorfile>
      <anchor>a8325a1e64d2a3037bcf636d0105f7b6e</anchor>
      <arglist>(cheb_approx &amp;gc) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::chi_fit_funct</name>
    <filename>classo2scl_1_1chi__fit__funct.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::gen_fit_funct</base>
    <member kind="function">
      <type></type>
      <name>chi_fit_funct</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>af552595b69b7435b351a06387dc929ff</anchor>
      <arglist>(size_t ndat, const vec_t &amp;xdat, const vec_t &amp;ydat, const vec_t &amp;yerr, fit_func_t &amp;fun)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>aed53d59a652942ae1096a4594c8fa0a7</anchor>
      <arglist>(size_t ndat, const vec_t &amp;xdat, const vec_t &amp;ydat, const vec_t &amp;yerr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_func</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>acec9c4cbf3e08ad94e4bf1b3bbee647c</anchor>
      <arglist>(fit_func_t &amp;fun)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>chi2</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>aae51f813eca0e636a5cc8fff937e6321</anchor>
      <arglist>(size_t np, const vec_t &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>a925b5aa02fbbc48ab579d637fe1076d6</anchor>
      <arglist>(size_t np, const vec_t &amp;p, size_t nd, vec_t &amp;f)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>jac</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>a500e1ef8e6f113aceed4451fc416e4bb</anchor>
      <arglist>(size_t np, vec_t &amp;p, size_t nd, vec_t &amp;f, mat_t &amp;J)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>get_ndata</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>a8b597461199523f5970bdb130c8645ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>jacobian_gsl&lt; std::function&lt; int(size_t, const vec_t &amp;, vec_t &amp;)&gt;, vec_t, mat_t &gt;</type>
      <name>auto_jac</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>a988b2039a91d7a0c8dc610df83d3c1ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>jac_mm_funct</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>a5cc896bc701818f99fd303b488d18285</anchor>
      <arglist>(size_t np, const vec_t &amp;p, vec_t &amp;f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::function&lt; int(size_t, const vec_t &amp;, vec_t &amp;)&gt;</type>
      <name>mfm</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>a6d35267d2a17d5b579c4d44b334cc874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>fit_func_t *</type>
      <name>fun_</name>
      <anchorfile>classo2scl_1_1chi__fit__funct.html</anchorfile>
      <anchor>a5ecb8db4496b1d5dcbabbf2b3230ea7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cli</name>
    <filename>classo2scl_1_1cli.html</filename>
    <class kind="class">o2scl::cli::parameter</class>
    <class kind="class">o2scl::cli::parameter_bool</class>
    <class kind="class">o2scl::cli::parameter_double</class>
    <class kind="class">o2scl::cli::parameter_int</class>
    <class kind="class">o2scl::cli::parameter_size_t</class>
    <class kind="class">o2scl::cli::parameter_string</class>
    <member kind="function">
      <type>int</type>
      <name>set_function</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>aed0bd8a1f2fc7056bd41fdbe4a0ab276</anchor>
      <arglist>(comm_option_funct &amp;usf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char *</type>
      <name>cli_gets</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>af2efaadd2171b7d375fbba1f4179cab5</anchor>
      <arglist>(const char *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>call_args</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a7292557af64479ad179a91d93ed5a2a8</anchor>
      <arglist>(std::vector&lt; cmd_line_arg &gt; &amp;ca)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_args</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a4b49d211ee8e603e563f4e2777369f06</anchor>
      <arglist>(int argc, char *argv[], std::vector&lt; cmd_line_arg &gt; &amp;ca, int debug=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_args</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a2248ef689dd1b3c32ff942bf7356791f</anchor>
      <arglist>(std::string s, std::vector&lt; cmd_line_arg &gt; &amp;ca, int debug=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_verbose</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>aac999812ef11c40ebd8848b562d8f367</anchor>
      <arglist>(int v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run_interactive</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>af2ad9670df1b1f9a82084a4fcca36178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_alias</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a980e324c19844df642045f1f80f8f01e</anchor>
      <arglist>(std::string alias, std::string str)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_alias</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>acd626b9616074a2509ceebce6bd48dbf</anchor>
      <arglist>(std::string alias)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_comm_option</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a965a1e0bc221e10173609f44b14427a3</anchor>
      <arglist>(comm_option_s &amp;ic)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_comm_option_vec</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a80a7bc73d8cbebb4f6379113ec1f32d0</anchor>
      <arglist>(size_t list_size, vec_t &amp;option_list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_param_help</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a3368171ed1a538e4e0fff94e0a26f432</anchor>
      <arglist>(std::string param, std::string help)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run_auto</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a45316c9ea8c9e68d7d393298b731be05</anchor>
      <arglist>(int argc, char *argv[], int debug=0)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>tilde_string</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>acb4fb5b1da0b8b7ba06a757972ba7270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>gnu_intro</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a8167a66083225d19cdfb2a39376582c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>sync_verbose</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>ada99f8e1fb769d9cb1409b4b0dc1ae45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>shell_cmd_allowed</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>ab5921c1057f1da5d012e7524c6e769b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>prompt</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a9d359c60676a19446925cc82775bc7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>desc</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>ac87082007bbb168e66055fc20d2aaa33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>cmd_name</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a5ab71206333223772d2e6982a14f98d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>addl_help_cmd</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a325760ca9fb71593299bac8ef45649d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>addl_help_cli</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a97220bea731b27717843db726e84aef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>output_param_list</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>af722336d02bae61246637a137c45cc88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>expand_tilde</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a2e96759d25f0d033fa074335f248dc14</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>apply_alias</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>af7bff4f9b6b708f3ad6650f071c80e7d</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, std::string sold, std::string snew)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>string_equal_dash</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a1ba2f4f9df22c6a7dec0d434b49c3aac</anchor>
      <arglist>(std::string s1, std::string s2)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>aa2bea0349d214a5222db0be9fa0660e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>buf</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>ac13863cd7bde7b1fadb40644bb3663a2</anchor>
      <arglist>[300]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>comm_option_funct *</type>
      <name>user_set_func</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a3f79b7354be50cacfe691cb277bf5c74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; comm_option_s &gt;</type>
      <name>clist</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>afa59fdcdd24ad67fcda653b4d57dec21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, parameter *, std::greater&lt; std::string &gt; &gt;::iterator</type>
      <name>par_t</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>aad69623da9a0f4bbc50d3a7904810f39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, parameter *, std::less&lt; std::string &gt; &gt;</type>
      <name>par_list</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a79e11266e213160fe1d99f9eb2a79ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_comm_option</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a965a1e0bc221e10173609f44b14427a3</anchor>
      <arglist>(comm_option_s &amp;ic)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_comm_option_vec</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a80a7bc73d8cbebb4f6379113ec1f32d0</anchor>
      <arglist>(size_t list_size, vec_t &amp;option_list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_param_help</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a3368171ed1a538e4e0fff94e0a26f432</anchor>
      <arglist>(std::string param, std::string help)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run_auto</name>
      <anchorfile>classo2scl_1_1cli.html</anchorfile>
      <anchor>a45316c9ea8c9e68d7d393298b731be05</anchor>
      <arglist>(int argc, char *argv[], int debug=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cli_readline</name>
    <filename>classo2scl_1_1cli__readline.html</filename>
    <base>o2scl::cli</base>
    <member kind="function">
      <type>void</type>
      <name>set_histfile</name>
      <anchorfile>classo2scl_1_1cli__readline.html</anchorfile>
      <anchor>a000068d725ebfa504ba41577ffcadaae</anchor>
      <arglist>(std::string fname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char *</type>
      <name>cli_gets</name>
      <anchorfile>classo2scl_1_1cli__readline.html</anchorfile>
      <anchor>ab61cd33e75a8676e46645a2e65e11d03</anchor>
      <arglist>(const char *c)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char *</type>
      <name>line_read</name>
      <anchorfile>classo2scl_1_1cli__readline.html</anchorfile>
      <anchor>af6516e63a61c9f25d95c8538d458deab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>histfile</name>
      <anchorfile>classo2scl_1_1cli__readline.html</anchorfile>
      <anchor>a2cff62fb3422c7f99a8a013194fd7b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>msize</name>
      <anchorfile>classo2scl_1_1cli__readline.html</anchorfile>
      <anchor>aad6a6b713281ee7e5b6817fa8252fee7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_hdf::cloud_file</name>
    <filename>classo2scl__hdf_1_1cloud__file.html</filename>
    <member kind="function">
      <type>int</type>
      <name>hdf5_open</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>af3f2411b2d6a9b6e104dd195e899ebc3</anchor>
      <arglist>(hdf_file &amp;hf, std::string file, std::string url, std::string dir=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hdf5_open_hash</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>a394fd7dad6cf6d778ce4e5eed4242347</anchor>
      <arglist>(hdf_file &amp;hf, std::string file, std::string hash, std::string url, std::string dir=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hdf5_open_subdir</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>a8bf090fce2c0c5ae89fe5e87a6794600</anchor>
      <arglist>(hdf_file &amp;hf, std::string file, std::string subdir, std::string url, std::string dir=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hdf5_open_hash_subdir</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>a0ece366d650bf8bb04886bac21b49d08</anchor>
      <arglist>(hdf_file &amp;hf, std::string file, std::string hash, std::string subdir, std::string url, std::string dir=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_file</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>a447c00e4a23b4f791fafb893a1bffe24</anchor>
      <arglist>(std::string file, std::string url, std::string &amp;fname, std::string dir=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_file_hash</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>a8ea907655e205cbc4398f784d5fcef76</anchor>
      <arglist>(std::string file, std::string hash, std::string url, std::string &amp;fname, std::string dir=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_file_subdir</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>ab1da33281f246f4fca167ef318dcfb65</anchor>
      <arglist>(std::string file, std::string subdir, std::string url, std::string &amp;fname, std::string dir=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_file_hash_subdir</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>a1ede17ea2d7923c8c7916d527e0b7ba2</anchor>
      <arglist>(std::string file, std::string hash, std::string subdir, std::string url, std::string &amp;fname, std::string dir=&quot;&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allow_wget</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>a8d0f1273f4ec356fa0a9d6fe1b8e89e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allow_curl</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>a89c3416ff34d8eab0d88765eb9ebadd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>ab4dc463a3bd122ab89ee5b7906fef81e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>throw_on_fail</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>af62cfd0bbc1c104823cc671a52d6798e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>env_var</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>a72253f9c308969d00076f826ce18ed2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hash_type</name>
      <anchorfile>classo2scl__hdf_1_1cloud__file.html</anchorfile>
      <anchor>a6f5b902074cfc2a985538fed163f5710</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>o2scl::cmd_line_arg</name>
    <filename>structo2scl_1_1cmd__line__arg.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>arg</name>
      <anchorfile>structo2scl_1_1cmd__line__arg.html</anchorfile>
      <anchor>a2cb011e8901b3f5195dd5d849ba97220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_option</name>
      <anchorfile>structo2scl_1_1cmd__line__arg.html</anchorfile>
      <anchor>a3d74c333ec27bdef3fd5cdb84670980d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_valid</name>
      <anchorfile>structo2scl_1_1cmd__line__arg.html</anchorfile>
      <anchor>a1486bf7b004e317f8ecef6145b76e78b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>parms</name>
      <anchorfile>structo2scl_1_1cmd__line__arg.html</anchorfile>
      <anchor>a3412525030a8e0aa3cbb4034d7f4955a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>comm_option_s *</type>
      <name>cop</name>
      <anchorfile>structo2scl_1_1cmd__line__arg.html</anchorfile>
      <anchor>ae1f1bc467cc3086af0848dd05404c6ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::table::col</name>
    <filename>classo2scl_1_1table_1_1col.html</filename>
    <member kind="variable">
      <type>vec_t</type>
      <name>dat</name>
      <anchorfile>classo2scl_1_1table_1_1col.html</anchorfile>
      <anchor>ad392e5184982a28653a0cf38f784eef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>classo2scl_1_1table_1_1col.html</anchorfile>
      <anchor>aa2a527f18e2772c50a8dcb2740a57bc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::columnify</name>
    <filename>classo2scl_1_1columnify.html</filename>
    <member kind="function">
      <type>int</type>
      <name>align</name>
      <anchorfile>classo2scl_1_1columnify.html</anchorfile>
      <anchor>ac222618305776fd35397d7d63ba26b16</anchor>
      <arglist>(const mat_string_t &amp;table, size_t ncols, size_t nrows, vec_string_t &amp;ctable, vec_int_t &amp;align_spec)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>align_left</name>
      <anchorfile>classo2scl_1_1columnify.html</anchorfile>
      <anchor>a8c329c850464a48cab4997518e549d00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>align_right</name>
      <anchorfile>classo2scl_1_1columnify.html</anchorfile>
      <anchor>a34a9021682118d8a178157771a39d3be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>align_lmid</name>
      <anchorfile>classo2scl_1_1columnify.html</anchorfile>
      <anchor>a14066f466fd5c6fc4838d16defea6830</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>align_rmid</name>
      <anchorfile>classo2scl_1_1columnify.html</anchorfile>
      <anchor>a0220349062e2f8eeefd08ea78876d41d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>align_dp</name>
      <anchorfile>classo2scl_1_1columnify.html</anchorfile>
      <anchor>a50d6e3362a919d1ea2cd28ce014ad281</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>align_lnum</name>
      <anchorfile>classo2scl_1_1columnify.html</anchorfile>
      <anchor>affa2f5333d9458b6b6c9149f97f756bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::comm_option_fptr</name>
    <filename>classo2scl_1_1comm__option__fptr.html</filename>
    <base>o2scl::comm_option_funct</base>
    <member kind="function">
      <type></type>
      <name>comm_option_fptr</name>
      <anchorfile>classo2scl_1_1comm__option__fptr.html</anchorfile>
      <anchor>a82dac6bd4b48082602cf7491489058ee</anchor>
      <arglist>(int(*fp)(std::vector&lt; std::string &gt; &amp;, bool))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1comm__option__fptr.html</anchorfile>
      <anchor>a34e9f419d2cc40c5e2145ae69d9f1af5</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;cstr, bool itive_com)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>comm_option_fptr &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1comm__option__fptr.html</anchorfile>
      <anchor>a46708956cc193ab132ad34afe3e340a2</anchor>
      <arglist>(const comm_option_fptr &amp;f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int(*</type>
      <name>fptr</name>
      <anchorfile>classo2scl_1_1comm__option__fptr.html</anchorfile>
      <anchor>a956426efd0910464bbcb3bc95fdd1c73</anchor>
      <arglist>)(std::vector&lt; std::string &gt; &amp;cstr, bool itive_com)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::comm_option_funct</name>
    <filename>classo2scl_1_1comm__option__funct.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1comm__option__funct.html</anchorfile>
      <anchor>a5ab02680d4428d20cfaed90c3c103585</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;cstr, bool itive_com)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::comm_option_mfptr</name>
    <filename>classo2scl_1_1comm__option__mfptr.html</filename>
    <templarg></templarg>
    <base>o2scl::comm_option_funct</base>
    <member kind="function">
      <type></type>
      <name>comm_option_mfptr</name>
      <anchorfile>classo2scl_1_1comm__option__mfptr.html</anchorfile>
      <anchor>a8f7251cd02a3334240b7fa0ce80a925b</anchor>
      <arglist>(tclass *tp, int(tclass::*fp)(std::vector&lt; std::string &gt; &amp;, bool))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1comm__option__mfptr.html</anchorfile>
      <anchor>aafd05955206275e481dde2c9fd768621</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;cstr, bool itive_com)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>comm_option_mfptr</name>
      <anchorfile>classo2scl_1_1comm__option__mfptr.html</anchorfile>
      <anchor>ae2cedde9357eca4c302254a850447be8</anchor>
      <arglist>(const comm_option_mfptr &amp;f)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>comm_option_mfptr &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1comm__option__mfptr.html</anchorfile>
      <anchor>a8ffaa72972299527f30b1a6b7f1dbd21</anchor>
      <arglist>(const comm_option_mfptr &amp;f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int(tclass::*</type>
      <name>fptr</name>
      <anchorfile>classo2scl_1_1comm__option__mfptr.html</anchorfile>
      <anchor>ae9cc0bd3f683aee6a22ee583f8e24582</anchor>
      <arglist>)(std::vector&lt; std::string &gt; &amp;cstr, bool itive_com)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tclass *</type>
      <name>tptr</name>
      <anchorfile>classo2scl_1_1comm__option__mfptr.html</anchorfile>
      <anchor>a7760e1d99ee7f3fa1940af91c5a1f56f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>o2scl::comm_option_s</name>
    <filename>structo2scl_1_1comm__option__s.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>shrt</name>
      <anchorfile>structo2scl_1_1comm__option__s.html</anchorfile>
      <anchor>a9421be436273be4b4750535bb8464cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>lng</name>
      <anchorfile>structo2scl_1_1comm__option__s.html</anchorfile>
      <anchor>ad7c2d1da99794da9183f1cdf660c280a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>desc</name>
      <anchorfile>structo2scl_1_1comm__option__s.html</anchorfile>
      <anchor>a6ad6d85633c2a3bbc8f3c1aa176dddea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>min_parms</name>
      <anchorfile>structo2scl_1_1comm__option__s.html</anchorfile>
      <anchor>af36818144ffd252819898f59632dc17b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_parms</name>
      <anchorfile>structo2scl_1_1comm__option__s.html</anchorfile>
      <anchor>aa4206d360cc09cf698dc63c0c4455b4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>parm_desc</name>
      <anchorfile>structo2scl_1_1comm__option__s.html</anchorfile>
      <anchor>a8d2c700e6ff31fcc341243018e645c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>help</name>
      <anchorfile>structo2scl_1_1comm__option__s.html</anchorfile>
      <anchor>a4a3d947de7e28f841da681e1ebfb37c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>comm_option_funct *</type>
      <name>func</name>
      <anchorfile>structo2scl_1_1comm__option__s.html</anchorfile>
      <anchor>acc081211a249f74d5239d6dcce4ff37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>structo2scl_1_1comm__option__s.html</anchorfile>
      <anchor>a5b6e4b069f3a516533a85072a48e12e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::const_vector_range_gen</name>
    <filename>classo2scl_1_1const__vector__range__gen.html</filename>
    <templarg>vec_t</templarg>
    <member kind="function">
      <type></type>
      <name>const_vector_range_gen</name>
      <anchorfile>classo2scl_1_1const__vector__range__gen.html</anchorfile>
      <anchor>ac56ab7a2d87e0ec9062e8bdfc218d446</anchor>
      <arglist>(const vec_t &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>const_vector_range_gen</name>
      <anchorfile>classo2scl_1_1const__vector__range__gen.html</anchorfile>
      <anchor>af9b484bdf3879197b74d80675bebb041</anchor>
      <arglist>(const const_vector_range_gen &amp;v2, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>const_vector_range_gen</name>
      <anchorfile>classo2scl_1_1const__vector__range__gen.html</anchorfile>
      <anchor>af69959991905a513e216bb2d4cc2d10b</anchor>
      <arglist>(const vector_range_gen&lt; vec_t &gt; &amp;v2, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1const__vector__range__gen.html</anchorfile>
      <anchor>a14542f997774bdb598dba5b88f561dfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1const__vector__range__gen.html</anchorfile>
      <anchor>adcb1aca7b91462204f440a7c5f96c990</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const vec_t &amp;</type>
      <name>v_</name>
      <anchorfile>classo2scl_1_1const__vector__range__gen.html</anchorfile>
      <anchor>a3a58afe8abfb569fa7bc57b2d931a3b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>start_</name>
      <anchorfile>classo2scl_1_1const__vector__range__gen.html</anchorfile>
      <anchor>ad6f86f02bf804372accf66927b87c065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>last_</name>
      <anchorfile>classo2scl_1_1const__vector__range__gen.html</anchorfile>
      <anchor>ad978479d5ee0afba1377dbd8b35c9bfe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::contour</name>
    <filename>classo2scl_1_1contour.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>aafdd9c615872c6a651fecd99e272fc6c</anchor>
      <arglist>(size_t sizex, size_t sizey, const vec_t &amp;x_fun, const vec_t &amp;y_fun, const mat_t &amp;udata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a4d0bba34c70c8a7bc9f5d8d1e035ed36</anchor>
      <arglist>(const uniform_grid&lt; double &gt; &amp;ugx, const uniform_grid&lt; double &gt; &amp;ugy, const mat_t &amp;udata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_levels</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a061e2708934b9f17c23f2fe69b369c6c</anchor>
      <arglist>(size_t nlevels, vec_t &amp;ulevels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_contours</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>aaef59e122ce65610992729ec3c9e2e99</anchor>
      <arglist>(std::vector&lt; contour_line &gt; &amp;clines)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>regrid_data</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>aa3122194550dce5e7019f01e0093d5a7</anchor>
      <arglist>(size_t xfact, size_t yfact, size_t interp_type=o2scl::itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a871fc0c3abbf962be7fb9820f1b59d4d</anchor>
      <arglist>(size_t &amp;sizex, size_t &amp;sizey, ubvector *&amp;x_fun, ubvector *&amp;y_fun, ubmatrix *&amp;udata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_edges</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a3f8a03e814079678cfff166b4646fdf2</anchor>
      <arglist>(std::vector&lt; edge_crossings &gt; &amp;x_edges, std::vector&lt; edge_crossings &gt; &amp;y_edges)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_edges_yhoriz</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>ad653ec2bdd6bdb8de85cf86be62df7f0</anchor>
      <arglist>(edge_crossings &amp;xedges, edge_crossings &amp;yedges)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_edges_xhoriz</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a46d683e3a4bf9ec2ed309b2d78621a5a</anchor>
      <arglist>(edge_crossings &amp;xedges, edge_crossings &amp;yedges)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>ad25f74dddae9c7c56549294ffa1e3a2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lev_adjust</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a60836b21c1ff7ce34926e5f8cb6e90eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>debug_next_point</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a14a695c97cd408405093aef4010d952f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>find_next_point_y_direct</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a6a57af8ff453fcefeb27d2cb725aaa67</anchor>
      <arglist>(int j, int k, int &amp;jnext, int &amp;knext, int &amp;dir_next, int nsw, edge_crossings &amp;xedges, edge_crossings &amp;yedges)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>find_next_point_x_direct</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a820266846ff39e079acb4f49aa80b039</anchor>
      <arglist>(int j, int k, int &amp;jnext, int &amp;knext, int &amp;dir_next, int nsw, edge_crossings &amp;xedges, edge_crossings &amp;yedges)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>find_intersections</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a687b29a4597e6afb37f6d1da7e8dc254</anchor>
      <arglist>(size_t ilev, double &amp;level, edge_crossings &amp;xedges, edge_crossings &amp;yedges)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>edges_in_y_direct</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a302426d1bed236032f51ebe5d25c4974</anchor>
      <arglist>(double level, interp&lt; ubvector &gt; &amp;si, edge_crossings &amp;yedges)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>edges_in_x_direct</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>ab282df36157747485c152fef3ca73869</anchor>
      <arglist>(double level, interp&lt; ubvector &gt; &amp;si, edge_crossings &amp;xedges)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>process_line</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a16115cc2c00f7abc658cc6fa656c5b14</anchor>
      <arglist>(int j, int k, int dir, std::vector&lt; double &gt; &amp;x, std::vector&lt; double &gt; &amp;y, bool first, edge_crossings &amp;xedges, edge_crossings &amp;yedges)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>check_data</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>aa0e06531da113607cd329dfd0e9b0b77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; edge_crossings &gt;</type>
      <name>yed</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a0f40e21b43af90c01a64f6f46951eab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; edge_crossings &gt;</type>
      <name>xed</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a48e54ea055eca622fa52b1f21046d72c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>aafdd9c615872c6a651fecd99e272fc6c</anchor>
      <arglist>(size_t sizex, size_t sizey, const vec_t &amp;x_fun, const vec_t &amp;y_fun, const mat_t &amp;udata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a4d0bba34c70c8a7bc9f5d8d1e035ed36</anchor>
      <arglist>(const uniform_grid&lt; double &gt; &amp;ugx, const uniform_grid&lt; double &gt; &amp;ugy, const mat_t &amp;udata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_levels</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a061e2708934b9f17c23f2fe69b369c6c</anchor>
      <arglist>(size_t nlevels, vec_t &amp;ulevels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_contours</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>aaef59e122ce65610992729ec3c9e2e99</anchor>
      <arglist>(std::vector&lt; contour_line &gt; &amp;clines)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>regrid_data</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>aa3122194550dce5e7019f01e0093d5a7</anchor>
      <arglist>(size_t xfact, size_t yfact, size_t interp_type=o2scl::itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a871fc0c3abbf962be7fb9820f1b59d4d</anchor>
      <arglist>(size_t &amp;sizex, size_t &amp;sizey, ubvector *&amp;x_fun, ubvector *&amp;y_fun, ubmatrix *&amp;udata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_edges</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a3f8a03e814079678cfff166b4646fdf2</anchor>
      <arglist>(std::vector&lt; edge_crossings &gt; &amp;x_edges, std::vector&lt; edge_crossings &gt; &amp;y_edges)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_edges_yhoriz</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>ad653ec2bdd6bdb8de85cf86be62df7f0</anchor>
      <arglist>(edge_crossings &amp;xedges, edge_crossings &amp;yedges)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_edges_xhoriz</name>
      <anchorfile>classo2scl_1_1contour.html</anchorfile>
      <anchor>a46d683e3a4bf9ec2ed309b2d78621a5a</anchor>
      <arglist>(edge_crossings &amp;xedges, edge_crossings &amp;yedges)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::contour_line</name>
    <filename>classo2scl_1_1contour__line.html</filename>
    <member kind="function">
      <type></type>
      <name>contour_line</name>
      <anchorfile>classo2scl_1_1contour__line.html</anchorfile>
      <anchor>a2830ddba3de21bd2eef6af7b743d1244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>contour_line</name>
      <anchorfile>classo2scl_1_1contour__line.html</anchorfile>
      <anchor>a0b7c848d5d1180c9b64f747541262b08</anchor>
      <arglist>(const contour_line &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>contour_line &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1contour__line.html</anchorfile>
      <anchor>aefde8f4a456e384499216a1ed0db199e</anchor>
      <arglist>(const contour_line &amp;c)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>level</name>
      <anchorfile>classo2scl_1_1contour__line.html</anchorfile>
      <anchor>ad034ea61bdfa34f3b32d8180c9e0ee7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1contour__line.html</anchorfile>
      <anchor>a0292993e12a4e5cd79b7c294318a356e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>y</name>
      <anchorfile>classo2scl_1_1contour__line.html</anchorfile>
      <anchor>ae396fe08d6c670c24054cc4ce624d57d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::convert_units</name>
    <filename>classo2scl_1_1convert__units.html</filename>
    <class kind="struct">o2scl::convert_units::unit_t</class>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>convert</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>ab22d50c06a5e28220f37aaa08b9a75ee</anchor>
      <arglist>(std::string from, std::string to, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_cache</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>a64138b5f73d823fdd8ea675ab90fed3f</anchor>
      <arglist>(std::string from, std::string to, double conv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_cache</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>a806f9fd5f10979e7dbb0151763b56791</anchor>
      <arglist>(std::string from, std::string to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_cache</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>affdeb1b04ef8a8b92ac71ceb5113e192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_units_dat</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>ae41588333244a08996bf40771c019e97</anchor>
      <arglist>(std::string fname, bool c_1=false, bool hbar_1=false, bool K_1=false)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>a9c0b29f46f976cd3142fc0f65cbc1f9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use_gnu_units</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>a853f597da8581ea161a9ee30be5063b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_on_fail</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>ae012ac5672b3abd6b9d56f394011bf63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>combine_two_conv</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>af43163a4849d0a2e103d7352b40acaaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>units_cmd_string</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>a61b3898555ee1e0fe62fb8f91191fee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, unit_t, std::greater&lt; std::string &gt; &gt;::iterator</type>
      <name>miter</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>ae2c71f51368ca809b68336a370578de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, unit_t, std::greater&lt; std::string &gt; &gt;</type>
      <name>mcache</name>
      <anchorfile>classo2scl_1_1convert__units.html</anchorfile>
      <anchor>affbdf359f2f3b66e07a14e6473faa4da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cubic_complex</name>
    <filename>classo2scl_1_1cubic__complex.html</filename>
    <base>o2scl::cubic_real_coeff</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1cubic__complex.html</anchorfile>
      <anchor>a5208d76f822f0633c18dce506092b396</anchor>
      <arglist>(const double a3, const double b3, const double c3, const double d3, double &amp;x1, double &amp;x2, double &amp;x3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1cubic__complex.html</anchorfile>
      <anchor>a380ab77c2115eda40d8aa2acc3a8a262</anchor>
      <arglist>(const double a3, const double b3, const double c3, const double d3, double &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_c</name>
      <anchorfile>classo2scl_1_1cubic__complex.html</anchorfile>
      <anchor>a80943ff9aae63471c5263cb8749fa739</anchor>
      <arglist>(const std::complex&lt; double &gt; a3, const std::complex&lt; double &gt; b3, const std::complex&lt; double &gt; c3, const std::complex&lt; double &gt; d3, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1cubic__complex.html</anchorfile>
      <anchor>af209ce980a98baf8e5d60040b94978cd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cubic_complex_std</name>
    <filename>classo2scl_1_1cubic__complex__std.html</filename>
    <base>o2scl::cubic_complex</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_c</name>
      <anchorfile>classo2scl_1_1cubic__complex__std.html</anchorfile>
      <anchor>ae7adba046ac7cc2f3121a7ff82a39ff4</anchor>
      <arglist>(const std::complex&lt; double &gt; a3, const std::complex&lt; double &gt; b3, const std::complex&lt; double &gt; c3, const std::complex&lt; double &gt; d3, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1cubic__complex__std.html</anchorfile>
      <anchor>aba03cfe208aac68476601136a701125b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cubic_real</name>
    <filename>classo2scl_1_1cubic__real.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1cubic__real.html</anchorfile>
      <anchor>a7aba645375981ae9bd87162331c219a5</anchor>
      <arglist>(const double a3, const double b3, const double c3, const double d3, double &amp;x1, double &amp;x2, double &amp;x3)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1cubic__real.html</anchorfile>
      <anchor>a2f5b88fa4e75709ae040b84e5937d2ae</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cubic_real_coeff</name>
    <filename>classo2scl_1_1cubic__real__coeff.html</filename>
    <base>o2scl::cubic_real</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff.html</anchorfile>
      <anchor>a4c424a8dfececddd84b590111c2849c7</anchor>
      <arglist>(const double a3, const double b3, const double c3, const double d3, double &amp;x1, double &amp;x2, double &amp;x3)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff.html</anchorfile>
      <anchor>a2c2b0e482d04044efc34b3f891b98561</anchor>
      <arglist>(const double a3, const double b3, const double c3, const double d3, double &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff.html</anchorfile>
      <anchor>ac32d15c4856dd7522193be5f4a1fbef1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cubic_real_coeff_cern</name>
    <filename>classo2scl_1_1cubic__real__coeff__cern.html</filename>
    <base>o2scl::cubic_real_coeff</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff__cern.html</anchorfile>
      <anchor>aa7324b6b7851e42807411488d9bb0450</anchor>
      <arglist>(const double a3, const double b3, const double c3, const double d3, double &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rrteq3</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff__cern.html</anchorfile>
      <anchor>a8931c331d5f127b4b1928b46e8c39b42</anchor>
      <arglist>(double r, double s, double t, double x[], double &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff__cern.html</anchorfile>
      <anchor>ab01a6d4c2b9152e6be28ada95fe56db2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff__cern.html</anchorfile>
      <anchor>ad7ca05525c69a3d02d6b7e4bfb42cede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>delta</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff__cern.html</anchorfile>
      <anchor>a167fb9d06e9853b4339fe1dcb1b17c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>improve_scale</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff__cern.html</anchorfile>
      <anchor>a29cbd2c5cc08db6b0c32e3c7317f2e70</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cubic_real_coeff_gsl</name>
    <filename>classo2scl_1_1cubic__real__coeff__gsl.html</filename>
    <base>o2scl::cubic_real_coeff</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff__gsl.html</anchorfile>
      <anchor>af9620d7ce8959912466d0027f07cdd83</anchor>
      <arglist>(const double a3, const double b3, const double c3, const double d3, double &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff__gsl.html</anchorfile>
      <anchor>a6c069f293ab5ff4050dd9299969e8f4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gsl_poly_complex_solve_cubic2</name>
      <anchorfile>classo2scl_1_1cubic__real__coeff__gsl.html</anchorfile>
      <anchor>a2703de3c6662a6809782d5d13fe13ee2</anchor>
      <arglist>(double a, double b, double c, gsl_complex *z0, gsl_complex *z1, gsl_complex *z2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::deriv_base</name>
    <filename>classo2scl_1_1deriv__base.html</filename>
    <templarg>func_t</templarg>
    <class kind="struct">o2scl::deriv_base::dpars</class>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>a9f5cb3a17708f34ba076cadddbd616c5</anchor>
      <arglist>(double x, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>a265875bd34269068ecf6bb950d78c0ba</anchor>
      <arglist>(double x, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv3</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>a6ec902142eb91fef913a42677d3b865a</anchor>
      <arglist>(double x, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>get_err</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>aea8349d0bb655c1495f1927e30df2fdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>deriv_err</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>a1879ff55577699c5eb9d2b981892b3d0</anchor>
      <arglist>(double x, func_t &amp;func, double &amp;dfdx, double &amp;err)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>deriv2_err</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>a2b85943ed43ce86bc6e254d4e9435c6b</anchor>
      <arglist>(double x, func_t &amp;func, double &amp;d2fdx2, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>deriv3_err</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>a90678935bb50663488fea49853eeb4fb</anchor>
      <arglist>(double x, func_t &amp;func, double &amp;d3fdx3, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>ac3af34806cfa15674cb72dd5b22dde58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>a650ad326be7cf69258e78b40b72117ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>ae3029279c847a9b93d98b0174a9ef5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv_int</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>aada9e7f65fd11ac47ecc7a3080b44a75</anchor>
      <arglist>(double x, funct &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>deriv_err_int</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>aed147f7f6d6d7cd050ff44b1b771f62f</anchor>
      <arglist>(double x, funct &amp;func, double &amp;dfdx, double &amp;err)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>derivfun</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>ae12ebb333a93d511c0ff7b6b39953ded</anchor>
      <arglist>(double x, func_t *fp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>derivfun2</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>a070aa888f736760b951cf8f52518f674</anchor>
      <arglist>(double x, func_t *fp)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>from_deriv</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>aa272773be0d3fc90d82fa21f68de3747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>derr</name>
      <anchorfile>classo2scl_1_1deriv__base.html</anchorfile>
      <anchor>a2e8d77d9406d0d17631f4aeceb90b01a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::deriv_cern</name>
    <filename>classo2scl_1_1deriv__cern.html</filename>
    <templarg>func_t</templarg>
    <base>o2scl::deriv_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>deriv_err</name>
      <anchorfile>classo2scl_1_1deriv__cern.html</anchorfile>
      <anchor>a766475078a0b438d4d3f1b6259f3433a</anchor>
      <arglist>(double x, func_t &amp;func, double &amp;dfdx, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1deriv__cern.html</anchorfile>
      <anchor>a89d318be9604bb12ca0aa4527b030fe8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>delta</name>
      <anchorfile>classo2scl_1_1deriv__cern.html</anchorfile>
      <anchor>a5b417b19066d0fe7d0689d9e2c567a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps</name>
      <anchorfile>classo2scl_1_1deriv__cern.html</anchorfile>
      <anchor>a2ef5d1638b6b98d7a7e83b418981c3d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>deriv_tlate</name>
      <anchorfile>classo2scl_1_1deriv__cern.html</anchorfile>
      <anchor>a3fc3d570d9befe82ff354a8c8e434e9e</anchor>
      <arglist>(double x, func2_t &amp;func, double &amp;dfdx, double &amp;err)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>deriv_err_int</name>
      <anchorfile>classo2scl_1_1deriv__cern.html</anchorfile>
      <anchor>a0d5e31549a950c914624e2f8f7789889</anchor>
      <arglist>(double x, funct &amp;func, double &amp;dfdx, double &amp;err)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::deriv_eqi</name>
    <filename>classo2scl_1_1deriv__eqi.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::deriv_base</base>
    <member kind="function">
      <type>int</type>
      <name>set_npoints</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>ad34c7ed76afa41d33cdf686b3830c60e</anchor>
      <arglist>(int npoints)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_npoints2</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>abb7838d9ee6ea6b9624baa922f033015</anchor>
      <arglist>(int npoints)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>deriv_err</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a3036f1a8b0139c60f172372a26181a1c</anchor>
      <arglist>(double x, func_t &amp;func, double &amp;dfdx, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>deriv2_err</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a2ccda8daa16a6b28d05c53aae74b9625</anchor>
      <arglist>(double x, func_t &amp;func, double &amp;dfdx, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>deriv3_err</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>ad73f143870c72bf85b54ff2f37da45ad</anchor>
      <arglist>(double x, func_t &amp;func, double &amp;dfdx, double &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_vector</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>aa9a36707d405fd40001ec5381bbca360</anchor>
      <arglist>(double x, double x0, double dx, size_t nx, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2_vector</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a6e1bc3e665a2f0211e2e5af18fc5d341</anchor>
      <arglist>(double x, double x0, double dx, size_t nx, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv3_vector</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>ac21f052722e9b43f30f5b6ca07a16ec8</anchor>
      <arglist>(double x, double x0, double dx, size_t nx, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deriv_vector</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a46484148d23d41a2e1d67bba5fc12a47</anchor>
      <arglist>(size_t nv, double dx, const vec_t &amp;y, vec_t &amp;dydx)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a79f713bc9c30166a40da58a12ed74486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>h</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a2418bef72625a30c70916e3ece4add6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>xoff</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>abd1a142f94c21760b75c561e4836072d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>deriv_err_int</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a2034862ada062d544f4d762a3e4cd3ad</anchor>
      <arglist>(double x, funct &amp;func, double &amp;dfdx, double &amp;err)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>derivp2</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a58f657880533671910178c2ca16381b9</anchor>
      <arglist>(double x, double p, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>derivp3</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>af9a78c33b793a2987153006fe0cd18d2</anchor>
      <arglist>(double x, double p, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>derivp4</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a1658aac945f5b302db7b091b5cbc59e2</anchor>
      <arglist>(double x, double p, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>derivp5</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a56b946194d98395811603a4f9a14e2c0</anchor>
      <arglist>(double x, double p, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>deriv_vector3</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>ab68a7c0bb3cb1a58995f12988c64d60c</anchor>
      <arglist>(double x, double x0, double dx, size_t nx, const vec_t &amp;y, size_t ix)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>deriv_vector4</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>af79b17aec8b5add56c75f5fbf7138e31</anchor>
      <arglist>(double x, double x0, double dx, size_t nx, const vec_t &amp;y, size_t ix)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>deriv_vector5</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>ab49549d034621948a7dd186a25e87a57</anchor>
      <arglist>(double x, double x0, double dx, size_t nx, const vec_t &amp;y, size_t ix)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>deriv2p3</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a93b83d2f70cf3a4fadfd13926da7e2e6</anchor>
      <arglist>(double x, double p, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>deriv2p4</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a304f49a5d36cc20f8aa6c5e77114bce3</anchor>
      <arglist>(double x, double p, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>deriv2p5</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a194513549987256823dc47b8feb54963</anchor>
      <arglist>(double x, double p, func_t &amp;func)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double(deriv_eqi::*</type>
      <name>cp</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>acf07efcaf6aaa247898116e20dfc5172</anchor>
      <arglist>)(double x, double p, func_t &amp;func)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double(deriv_eqi::*</type>
      <name>cap</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a0c63cc229160be52cba3adb0aa88b850</anchor>
      <arglist>)(double x, double x0, double dx, size_t nx, const vec_t &amp;y, size_t ix)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double(deriv_eqi::*</type>
      <name>c2p</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a76d24e1d150d85140fd0f07b09f134a0</anchor>
      <arglist>)(double x, double p, func_t &amp;func)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double(deriv_eqi::*</type>
      <name>c2ap</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a379fcd858c1b5dd86c5ddb2aa19d3f37</anchor>
      <arglist>)(double x, double x0, double dx, size_t nx, const vec_t &amp;y, size_t ix)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double(deriv_eqi::*</type>
      <name>c3p</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>ac9cd0dd1c174831a18a56dda004f906e</anchor>
      <arglist>)(double x, double h, double p, func_t &amp;func)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double(deriv_eqi::*</type>
      <name>c3ap</name>
      <anchorfile>classo2scl_1_1deriv__eqi.html</anchorfile>
      <anchor>a803a04027a390554879ade7d23a0574b</anchor>
      <arglist>)(double x, double x0, double dx, size_t nx, const vec_t &amp;y, size_t ix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::deriv_gsl</name>
    <filename>classo2scl_1_1deriv__gsl.html</filename>
    <templarg>func_t</templarg>
    <base>o2scl::deriv_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>deriv_err</name>
      <anchorfile>classo2scl_1_1deriv__gsl.html</anchorfile>
      <anchor>aaba5a035726b610a182888b4e2c16c01</anchor>
      <arglist>(double x, func_t &amp;func, double &amp;dfdx, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1deriv__gsl.html</anchorfile>
      <anchor>ab61f8eca78e53cf85bf4bfe8924cd973</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>h</name>
      <anchorfile>classo2scl_1_1deriv__gsl.html</anchorfile>
      <anchor>a6550fa3d3ca81a75656879ba427f9808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>func_max</name>
      <anchorfile>classo2scl_1_1deriv__gsl.html</anchorfile>
      <anchor>a4e2835c6e63f6d1e1f94b0ed733aba6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>h_opt</name>
      <anchorfile>classo2scl_1_1deriv__gsl.html</anchorfile>
      <anchor>a591eb7869fda1cd5333bac589fd70a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>deriv_tlate</name>
      <anchorfile>classo2scl_1_1deriv__gsl.html</anchorfile>
      <anchor>a79f7757c633cae3874d0cf599fa64b4b</anchor>
      <arglist>(double x, func2_t &amp;func, double &amp;dfdx, double &amp;err)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>deriv_err_int</name>
      <anchorfile>classo2scl_1_1deriv__gsl.html</anchorfile>
      <anchor>a9f2db5b4ab847667d20dff631053afe4</anchor>
      <arglist>(double x, funct &amp;func, double &amp;dfdx, double &amp;err)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>central_deriv</name>
      <anchorfile>classo2scl_1_1deriv__gsl.html</anchorfile>
      <anchor>a5eaa6675b9ff8c6f72b0b8843a1034e4</anchor>
      <arglist>(double x, double hh, double &amp;result, double &amp;abserr_round, double &amp;abserr_trunc, func2_t &amp;func)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::diff_evo</name>
    <filename>classo2scl_1_1diff__evo.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>init_funct_t</templarg>
    <base>mmin_base&lt; func_t, func_t, vec_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_init_function</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>a67445eae7140731726f0f4fdba7f32e3</anchor>
      <arglist>(init_funct_t &amp;function)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>a01623120b7504bd32e2dc05db8c3405b</anchor>
      <arglist>(size_t nvar, vec_t &amp;x0, double &amp;fmin, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>aa9093d01625ff1e2cc369e7cc5b001c3</anchor>
      <arglist>(size_t nvar, double fmin, int iter, vec_t &amp;best_fit)</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>pop_size</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>a1f07f2c5fdd750dc4a9ac419b97ab56f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nconv</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>a4c609b4f9fd8fc951f0b4ebb1caee1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>f</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>a506df4c05005077754f20a19e37dc80d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>cr</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>ad38e4bd4e1c89941a292025fc4344e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>initialize_population</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>ad411e2c6ebfbcc3de963a7ca6175dbc2</anchor>
      <arglist>(size_t nvar, vec_t &amp;x0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::vector&lt; int &gt;</type>
      <name>pick_unique_agents</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>a28e16a2592be5ea5af14cd07dfd3a9f3</anchor>
      <arglist>(int nr, size_t x)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>population</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>aecfe1431e645ff6b1acb71ffbdb0a88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fmins</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>a7d2f331fd1b4388b71e263a8fe9894d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>init_funct_t *</type>
      <name>rand_init_funct</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>a10cb1f8419d92004ebab29496ed2efe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>rng_gsl</type>
      <name>gr</name>
      <anchorfile>classo2scl_1_1diff__evo.html</anchorfile>
      <anchor>a3ad4aa963b01fc7f988baa0c9d2128af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::diff_evo_adapt</name>
    <filename>classo2scl_1_1diff__evo__adapt.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>init_funct_t</templarg>
    <base>o2scl::diff_evo</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1diff__evo__adapt.html</anchorfile>
      <anchor>aaeba868b9f57a6d5d4d20da9854f5903</anchor>
      <arglist>(size_t nvar, vec_t &amp;x0, double &amp;fmin, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1diff__evo__adapt.html</anchorfile>
      <anchor>a925d18bf270373d6e3bc4dae78f20d91</anchor>
      <arglist>(size_t nvar, double fmin, int iter, vec_t &amp;best_fit)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tau_1</name>
      <anchorfile>classo2scl_1_1diff__evo__adapt.html</anchorfile>
      <anchor>a907bed128f0a2a3a94943b399cdbe2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tau_2</name>
      <anchorfile>classo2scl_1_1diff__evo__adapt.html</anchorfile>
      <anchor>ab6ddb1eac184a216a64942060b2dba20</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>initialize_population</name>
      <anchorfile>classo2scl_1_1diff__evo__adapt.html</anchorfile>
      <anchor>a98d80d713188c719a64eb2bf8b4fb7e7</anchor>
      <arglist>(size_t nvar, vec_t &amp;x0)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>variables</name>
      <anchorfile>classo2scl_1_1diff__evo__adapt.html</anchorfile>
      <anchor>a97f779e51fedfc1d45419ecf974fd14b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fmins</name>
      <anchorfile>classo2scl_1_1diff__evo__adapt.html</anchorfile>
      <anchor>a79f3036d349bca4f2900815645657061</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>o2scl::deriv_base::dpars</name>
    <filename>structo2scl_1_1deriv__base_1_1dpars.html</filename>
    <member kind="variable">
      <type>func_t *</type>
      <name>func</name>
      <anchorfile>structo2scl_1_1deriv__base_1_1dpars.html</anchorfile>
      <anchor>a11b539af95c9bcbd0970019fb569b49b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::edge_crossings</name>
    <filename>classo2scl_1_1edge__crossings.html</filename>
    <member kind="function">
      <type></type>
      <name>edge_crossings</name>
      <anchorfile>classo2scl_1_1edge__crossings.html</anchorfile>
      <anchor>a8ae7bdd427315ca3eeea76c00f8b0806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>edge_crossings</name>
      <anchorfile>classo2scl_1_1edge__crossings.html</anchorfile>
      <anchor>a5457f4788453bdddc790d4061e73a87e</anchor>
      <arglist>(const edge_crossings &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>edge_crossings &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1edge__crossings.html</anchorfile>
      <anchor>a75e8fea1cc5ddfadea6f2fa941ba1f36</anchor>
      <arglist>(const edge_crossings &amp;ec)</arglist>
    </member>
    <member kind="variable">
      <type>ubmatrix_int</type>
      <name>status</name>
      <anchorfile>classo2scl_1_1edge__crossings.html</anchorfile>
      <anchor>a7a6d5b9599cc50c3de05e3fbc84f911f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ubmatrix</type>
      <name>values</name>
      <anchorfile>classo2scl_1_1edge__crossings.html</anchorfile>
      <anchor>a8290f457fad8b95f8794d551503e76af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>o2scl::jacobian_exact::ej_parms</name>
    <filename>structo2scl_1_1jacobian__exact_1_1ej__parms.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>nx</name>
      <anchorfile>structo2scl_1_1jacobian__exact_1_1ej__parms.html</anchorfile>
      <anchor>a0dad9f74c41012f6d399163109fdce46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ny</name>
      <anchorfile>structo2scl_1_1jacobian__exact_1_1ej__parms.html</anchorfile>
      <anchor>a4049acbd71cb7b57119ad6c0da851cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>xj</name>
      <anchorfile>structo2scl_1_1jacobian__exact_1_1ej__parms.html</anchorfile>
      <anchor>a2722e7c48bde929f2567c5b79b8c2bc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>yi</name>
      <anchorfile>structo2scl_1_1jacobian__exact_1_1ej__parms.html</anchorfile>
      <anchor>a6709b0e089a81ae0daee8487cda4c3f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t *</type>
      <name>x</name>
      <anchorfile>structo2scl_1_1jacobian__exact_1_1ej__parms.html</anchorfile>
      <anchor>abe1a5532e830d38bf5d4d4bd68b05da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t *</type>
      <name>y</name>
      <anchorfile>structo2scl_1_1jacobian__exact_1_1ej__parms.html</anchorfile>
      <anchor>afaa0efafed0c56c9cd0f7bc14e3e8ec8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::err_hnd_cpp</name>
    <filename>classo2scl_1_1err__hnd__cpp.html</filename>
    <base>o2scl::err_hnd_gsl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1err__hnd__cpp.html</anchorfile>
      <anchor>ae1732d9d10c79372a04987b2f56d0f5c</anchor>
      <arglist>(const char *reason, const char *file, int line, int lerrno)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1err__hnd__cpp.html</anchorfile>
      <anchor>ad59be9164a98d2ca6fd3526d07f09f7c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::err_hnd_gsl</name>
    <filename>classo2scl_1_1err__hnd__gsl.html</filename>
    <base>o2scl::err_hnd_type</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a23a279becb894298db5b44cd698ebca3</anchor>
      <arglist>(const char *reason, const char *file, int line, int lerrno)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a05cad7bb6c27baeb428bc7aef55783e8</anchor>
      <arglist>(const char *&amp;reason, const char *&amp;file, int &amp;line, int &amp;lerrno)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>get_errno</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>ac79db167f74c82d4104105f28b3faa0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>get_line</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>ab0598ea0535188b2c7c726d7c5b0e516</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>get_reason</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a6999d76dd4c57a0d714c9b6214582fcb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>get_file</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a1d549674c182c2bc7111c255dcc919e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>get_str</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a79a94e285074e93e2745c2accdabda31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>aa67d87c8db0cf83f6a31698e5d357aca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a8ed1a8856ae1be9e423a239b01a77033</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>fname_size</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a63f4210e0efdd8bda0a42311e3c66891</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>errno_to_string</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>af35ea3f699894b753609ff99585de987</anchor>
      <arglist>(int errnox)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>a_errno</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>ac42619b78ad16bf4f1334f50c00a966a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>a_line</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>ac96680bd674c8524a99e090c2692f448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char *</type>
      <name>a_file</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a63c2e5ddecd1fed53c788b80b77ea4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>a_reason</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a4741916a24b3194848af32fe24bfc2f4</anchor>
      <arglist>[rsize]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>fullstr</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a792d81ea96c43e5d640b6b06f5e9be6a</anchor>
      <arglist>[fsize]</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>rsize</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a5ddd18f3398c2560692c3b53805b27dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>fsize</name>
      <anchorfile>classo2scl_1_1err__hnd__gsl.html</anchorfile>
      <anchor>a3d6477da407624f07a3e7c3cc70f08e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::err_hnd_type</name>
    <filename>classo2scl_1_1err__hnd__type.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1err__hnd__type.html</anchorfile>
      <anchor>a9d497d9ba291fcb4a51c91d6219a36de</anchor>
      <arglist>(const char *reason, const char *file, int line, int lerrno)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1err__hnd__type.html</anchorfile>
      <anchor>afbe335745af7ad294a6c28a2056e0a54</anchor>
      <arglist>(const char *&amp;reason, const char *&amp;file, int &amp;line, int &amp;lerrno)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>get_errno</name>
      <anchorfile>classo2scl_1_1err__hnd__type.html</anchorfile>
      <anchor>a2e6490ade2dae4ea314bf78a69a24004</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>get_line</name>
      <anchorfile>classo2scl_1_1err__hnd__type.html</anchorfile>
      <anchor>abc2687ced96ba29b6299114a21db99b8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_reason</name>
      <anchorfile>classo2scl_1_1err__hnd__type.html</anchorfile>
      <anchor>a44cd9308e7f3ef68e4d79a8d1ce72c63</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_file</name>
      <anchorfile>classo2scl_1_1err__hnd__type.html</anchorfile>
      <anchor>a48d3ef42fe37c3e199e20462d3729fbe</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_str</name>
      <anchorfile>classo2scl_1_1err__hnd__type.html</anchorfile>
      <anchor>a41a44539a750d335bea86833d7bce265</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classo2scl_1_1err__hnd__type.html</anchorfile>
      <anchor>aaf4a1b1bbbe1503f4f04bdf6263103a7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1err__hnd__type.html</anchorfile>
      <anchor>afb1551c002dd193325d0ff592c4c6f4a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>gsl_hnd</name>
      <anchorfile>classo2scl_1_1err__hnd__type.html</anchorfile>
      <anchor>aee5eb3d60b59e712844c7f15e30071c5</anchor>
      <arglist>(const char *reason, const char *file, int line, int lerrno)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_hcubature::esterr</name>
    <filename>classo2scl_1_1inte__hcubature_1_1esterr.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>val</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1esterr.html</anchorfile>
      <anchor>a2bc7b80a42dc2cd63cc2626fcef98499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>err</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1esterr.html</anchorfile>
      <anchor>acee5602ab284c738f8dfd6f593766d22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::exc_exception</name>
    <filename>classo2scl_1_1exc__exception.html</filename>
    <member kind="function">
      <type></type>
      <name>exc_exception</name>
      <anchorfile>classo2scl_1_1exc__exception.html</anchorfile>
      <anchor>aed6e36dda3b1c7b756e6e0d0843fc9bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classo2scl_1_1exc__exception.html</anchorfile>
      <anchor>a6069b38850b79a97953fae05fd950823</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::exc_invalid_argument</name>
    <filename>classo2scl_1_1exc__invalid__argument.html</filename>
    <member kind="function">
      <type></type>
      <name>exc_invalid_argument</name>
      <anchorfile>classo2scl_1_1exc__invalid__argument.html</anchorfile>
      <anchor>a401ac7b68ee20bfc1f71983ff4a2131c</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classo2scl_1_1exc__invalid__argument.html</anchorfile>
      <anchor>ae4b94967e9b90b453ba00e4ff170fc01</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::exc_ios_failure</name>
    <filename>classo2scl_1_1exc__ios__failure.html</filename>
    <member kind="function">
      <type></type>
      <name>exc_ios_failure</name>
      <anchorfile>classo2scl_1_1exc__ios__failure.html</anchorfile>
      <anchor>a07a40a27bacd539d575bcbd4de7c1855</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classo2scl_1_1exc__ios__failure.html</anchorfile>
      <anchor>a2fe9e8256c86cadf485434ed0cf2a594</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::exc_logic_error</name>
    <filename>classo2scl_1_1exc__logic__error.html</filename>
    <member kind="function">
      <type></type>
      <name>exc_logic_error</name>
      <anchorfile>classo2scl_1_1exc__logic__error.html</anchorfile>
      <anchor>a9a13623d74e1f5e3504e7bc73b37b7c8</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classo2scl_1_1exc__logic__error.html</anchorfile>
      <anchor>a1b2d6feea13a5a5c12c176e4fc884ec0</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::exc_overflow_error</name>
    <filename>classo2scl_1_1exc__overflow__error.html</filename>
    <member kind="function">
      <type></type>
      <name>exc_overflow_error</name>
      <anchorfile>classo2scl_1_1exc__overflow__error.html</anchorfile>
      <anchor>ab98a7ea2c2f2463a38cc4aa69131781f</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classo2scl_1_1exc__overflow__error.html</anchorfile>
      <anchor>acd7dc704d7b9e675fe258ac89f8c1a55</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::exc_range_error</name>
    <filename>classo2scl_1_1exc__range__error.html</filename>
    <member kind="function">
      <type></type>
      <name>exc_range_error</name>
      <anchorfile>classo2scl_1_1exc__range__error.html</anchorfile>
      <anchor>a0782847566649ab7054a6a6a48306512</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classo2scl_1_1exc__range__error.html</anchorfile>
      <anchor>a9ee5401de947758058ba6cc8775155da</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::exc_runtime_error</name>
    <filename>classo2scl_1_1exc__runtime__error.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~exc_runtime_error</name>
      <anchorfile>classo2scl_1_1exc__runtime__error.html</anchorfile>
      <anchor>a437c5e8625a7e62bcf1c5908faa28231</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classo2scl_1_1exc__runtime__error.html</anchorfile>
      <anchor>add699579c8bfe918f23b85b471359dfb</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::expval_base</name>
    <filename>classo2scl_1_1expval__base.html</filename>
    <member kind="function">
      <type></type>
      <name>expval_base</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>aa199cbd7b5328971a6ce351d5b5ec646</anchor>
      <arglist>(size_t n_blocks=1, size_t n_per_block=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>expval_base</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>ac59f3f2bc7857d9c5a93fedc9a5d4ede</anchor>
      <arglist>(const expval_base &amp;ev)</arglist>
    </member>
    <member kind="function">
      <type>expval_base &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>aa5edcf8ec546091cf2b6ebf47a4b7968</anchor>
      <arglist>(const expval_base &amp;ev)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_blocks</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>af64eef758c6e47914fffc25ff2b32195</anchor>
      <arglist>(size_t n_blocks, size_t n_per_block)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>get_blocks</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>ac4840e860f77304789b612eb82ee1fe7</anchor>
      <arglist>(size_t &amp;n_blocks, size_t &amp;n_per_block) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>aa14ddc8de7fb1a19765c1dfc15cc9391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>get_block_indices</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>abb961dc75ec170cea88d7ecc63ba5279</anchor>
      <arglist>(size_t &amp;i_block, size_t &amp;i_curr_block) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>finished</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>a78eba1b82317bfc27c54228749d00972</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>progress</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>acbda9ef87ad4cda7bebc2fae9aa87222</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>is_valid</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>ae139009f7fe6f54ef31a6833ae3312ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>a9eed0de93b76f5829729bec7cac53ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>short_name</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>a01d92c7d1761d510fa21847106470f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>iblock</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>aacb4d999f70acfcf77a4855d684732d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>i</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>a13b12040f21dc6e510c5345e31aa96b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nblocks</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>a9e651f3ba54bf3821995f2909fa4d7cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nperblock</name>
      <anchorfile>classo2scl_1_1expval__base.html</anchorfile>
      <anchor>aa4fe54a0695943376c09cfc729d2bbab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::expval_matrix</name>
    <filename>classo2scl_1_1expval__matrix.html</filename>
    <base>o2scl::expval_base</base>
    <member kind="function">
      <type></type>
      <name>expval_matrix</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>ae68d8ee2b09486c597e9a1b343cbdcb1</anchor>
      <arglist>(size_t rows, size_t cols, size_t n_blocks=1, size_t n_per_block=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>expval_matrix</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>a42f6c60638dacb26bda123075246ecd3</anchor>
      <arglist>(const expval_matrix &amp;ev)</arglist>
    </member>
    <member kind="function">
      <type>expval_matrix &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>a732a1fdd62754077973f30e8a77af477</anchor>
      <arglist>(const expval_matrix &amp;ev)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_blocks</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>a426dc14c16f268613a2fe60feb3065e3</anchor>
      <arglist>(size_t rows, size_t cols, size_t n_blocks, size_t n_per_block)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>aa071f33e5e59eafdd6aa00afae290a5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>a55120a165e7ab923997a00237f58ae49</anchor>
      <arglist>(mat_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>const tensor3 &amp;</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>ad27fce6db0e009b3c32448ab325b4715</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>current_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>aaeaff4d57582d427dc7f84e30f449a07</anchor>
      <arglist>(mat_t &amp;avg, mat2_t &amp;std_dev, mat3_t &amp;avg_err, size_t &amp;m_block, size_t &amp;m_per_block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>current_avg</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>afb861d354c39ae150f1effd5494d977b</anchor>
      <arglist>(mat_t &amp;avg, mat2_t &amp;std_dev, mat3_t &amp;avg_err)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reblock_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>af2a9b2dcdb22b912c6eb4b306f91f330</anchor>
      <arglist>(size_t new_blocks, mat_t &amp;avg, mat2_t &amp;std_dev, mat3_t &amp;avg_err, size_t &amp;m_per_block) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reblock_avg</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>a8ecdd366d70acd809d9f3d7c6537443c</anchor>
      <arglist>(size_t new_blocks, mat_t &amp;avg, mat2_t &amp;std_dev, mat3_t &amp;avg_err) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tensor3</type>
      <name>vals</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>a3cc0edc53b42b421bbcbe2e583065121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix</type>
      <name>current</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>a243f7e2d036833dbdd213cd8dc2d4f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nr</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>a52bdf118eca38f88946f185f1b1b6b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nc</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>af4878f5db8ad03da3bdb1d9925af3ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>current_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>aaeaff4d57582d427dc7f84e30f449a07</anchor>
      <arglist>(mat_t &amp;avg, mat2_t &amp;std_dev, mat3_t &amp;avg_err, size_t &amp;m_block, size_t &amp;m_per_block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>current_avg</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>afb861d354c39ae150f1effd5494d977b</anchor>
      <arglist>(mat_t &amp;avg, mat2_t &amp;std_dev, mat3_t &amp;avg_err)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reblock_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>af2a9b2dcdb22b912c6eb4b306f91f330</anchor>
      <arglist>(size_t new_blocks, mat_t &amp;avg, mat2_t &amp;std_dev, mat3_t &amp;avg_err, size_t &amp;m_per_block) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reblock_avg</name>
      <anchorfile>classo2scl_1_1expval__matrix.html</anchorfile>
      <anchor>a8ecdd366d70acd809d9f3d7c6537443c</anchor>
      <arglist>(size_t new_blocks, mat_t &amp;avg, mat2_t &amp;std_dev, mat3_t &amp;avg_err) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::expval_scalar</name>
    <filename>classo2scl_1_1expval__scalar.html</filename>
    <base>o2scl::expval_base</base>
    <member kind="function">
      <type></type>
      <name>expval_scalar</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>afdf628cf61958cf8978de2a1e329dbea</anchor>
      <arglist>(size_t n_blocks=1, size_t n_per_block=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>expval_scalar</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>ad25eca5ab09b84d57c81039c3df01417</anchor>
      <arglist>(const expval_scalar &amp;ev)</arglist>
    </member>
    <member kind="function">
      <type>expval_scalar &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a1647a3bdcb855900783eec242d0efa28</anchor>
      <arglist>(const expval_scalar &amp;ev)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_blocks</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a5d3ff8c87ba95e68bf96422abf8a399f</anchor>
      <arglist>(size_t n_blocks, size_t n_per_block)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a5bf8af8043ca52d7689781fdf0162041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>ab1de68e2eb347deaa8a8af4f9b444b27</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>is_valid</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>ade28051c8f0b622795ec66bcf213f16b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>current_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a4192e4ecd455bea46e32613c3415d7df</anchor>
      <arglist>(double &amp;avg, double &amp;std_dev, double &amp;avg_err, size_t &amp;m_block, size_t &amp;m_per_block) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>current_avg</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a779dcc17090655afde4d976e6c3446db</anchor>
      <arglist>(double &amp;avg, double &amp;std_dev, double &amp;avg_err) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reblock_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>ae2756edc9724dd4c059a73256720d0f4</anchor>
      <arglist>(size_t new_blocks, double &amp;avg, double &amp;std_dev, double &amp;avg_err, size_t &amp;m_per_block) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reblock_avg</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a427af7e302de1fcfb059ddbedf275412</anchor>
      <arglist>(size_t new_blocks, double &amp;avg, double &amp;std_dev, double &amp;avg_err) const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a67afe047e4afc7d0d97d0d9cea6c0735</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>ad89952d600710543ccee16d1a51a86ed</anchor>
      <arglist>(size_t i_block) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>ab1124314416b29a6070cc889de4d6b76</anchor>
      <arglist>(size_t i_block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a8435a700eee4b023f789848f86131473</anchor>
      <arglist>(vec_t &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>current</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a8d0dc1e9d6d990af0ae6806d3b5b94b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>vals</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>aba63ec507ad890c381c8c9cfd4c80a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>current_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a4192e4ecd455bea46e32613c3415d7df</anchor>
      <arglist>(double &amp;avg, double &amp;std_dev, double &amp;avg_err, size_t &amp;m_block, size_t &amp;m_per_block) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>current_avg</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a779dcc17090655afde4d976e6c3446db</anchor>
      <arglist>(double &amp;avg, double &amp;std_dev, double &amp;avg_err) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reblock_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>ae2756edc9724dd4c059a73256720d0f4</anchor>
      <arglist>(size_t new_blocks, double &amp;avg, double &amp;std_dev, double &amp;avg_err, size_t &amp;m_per_block) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reblock_avg</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a427af7e302de1fcfb059ddbedf275412</anchor>
      <arglist>(size_t new_blocks, double &amp;avg, double &amp;std_dev, double &amp;avg_err) const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a67afe047e4afc7d0d97d0d9cea6c0735</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>ad89952d600710543ccee16d1a51a86ed</anchor>
      <arglist>(size_t i_block) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>ab1124314416b29a6070cc889de4d6b76</anchor>
      <arglist>(size_t i_block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1expval__scalar.html</anchorfile>
      <anchor>a8435a700eee4b023f789848f86131473</anchor>
      <arglist>(vec_t &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::expval_vector</name>
    <filename>classo2scl_1_1expval__vector.html</filename>
    <base>o2scl::expval_base</base>
    <member kind="function">
      <type></type>
      <name>expval_vector</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>aab99964e3490d1c3407002a2303befcf</anchor>
      <arglist>(size_t n, size_t n_blocks=1, size_t n_per_block=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>expval_vector</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>a578b6adbf290a05409d09c53ccb43490</anchor>
      <arglist>(const expval_vector &amp;ev)</arglist>
    </member>
    <member kind="function">
      <type>expval_vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>ac187da4623b4c4a017ff589291da6890</anchor>
      <arglist>(const expval_vector &amp;ev)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_blocks</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>a10ec2b40e95b36889ca8d89b7f4ca3b2</anchor>
      <arglist>(size_t n, size_t n_blocks, size_t n_per_block)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>ac7588890f0d77b6d50f7186f39471f5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>aac91ca61c48235be4e0c5191e4d72c3a</anchor>
      <arglist>(vec_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>const ubmatrix &amp;</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>a9121830f4cb38807e765456682acede8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>current_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>a1be4683c202352ac4edc6bc6ca732160</anchor>
      <arglist>(vec_t &amp;avg, vec2_t &amp;std_dev, vec3_t &amp;avg_err, size_t &amp;m_block, size_t &amp;m_per_block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>current_avg</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>a0461958b7ce4265dbce90090ebd20808</anchor>
      <arglist>(vec_t &amp;avg, vec2_t &amp;std_dev, vec3_t &amp;avg_err)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reblock_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>ac57c3d037abc5bbe1a636e2147d90dd2</anchor>
      <arglist>(size_t new_blocks, vec_t &amp;avg, vec2_t &amp;std_dev, vec3_t &amp;avg_err, size_t &amp;m_per_block) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reblock_avg</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>aeb3bd65f81be8cdfaa8f96fd73d4fc61</anchor>
      <arglist>(size_t new_blocks, vec_t &amp;avg, vec2_t &amp;std_dev, vec3_t &amp;avg_err) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix</type>
      <name>vals</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>aa8d5473823ae0aa82e22d6701d9791ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>current</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>adf59e2672c6044d8cdd93bb351cd9ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nvec</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>a66b84e134975ce0aa506b847956a77e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>current_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>a1be4683c202352ac4edc6bc6ca732160</anchor>
      <arglist>(vec_t &amp;avg, vec2_t &amp;std_dev, vec3_t &amp;avg_err, size_t &amp;m_block, size_t &amp;m_per_block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>current_avg</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>a0461958b7ce4265dbce90090ebd20808</anchor>
      <arglist>(vec_t &amp;avg, vec2_t &amp;std_dev, vec3_t &amp;avg_err)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reblock_avg_stats</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>ac57c3d037abc5bbe1a636e2147d90dd2</anchor>
      <arglist>(size_t new_blocks, vec_t &amp;avg, vec2_t &amp;std_dev, vec3_t &amp;avg_err, size_t &amp;m_per_block) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reblock_avg</name>
      <anchorfile>classo2scl_1_1expval__vector.html</anchorfile>
      <anchor>aeb3bd65f81be8cdfaa8f96fd73d4fc61</anchor>
      <arglist>(size_t new_blocks, vec_t &amp;avg, vec2_t &amp;std_dev, vec3_t &amp;avg_err) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>o2scl::inte_singular_gsl::extrapolation_table</name>
    <filename>structo2scl_1_1inte__singular__gsl_1_1extrapolation__table.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>structo2scl_1_1inte__singular__gsl_1_1extrapolation__table.html</anchorfile>
      <anchor>a883b6f1b4220b0ae702049b0c2000ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rlist2</name>
      <anchorfile>structo2scl_1_1inte__singular__gsl_1_1extrapolation__table.html</anchorfile>
      <anchor>a6a007e4e4440235874f73713b5621a0d</anchor>
      <arglist>[52]</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nres</name>
      <anchorfile>structo2scl_1_1inte__singular__gsl_1_1extrapolation__table.html</anchorfile>
      <anchor>ac98967364c4f6fb49b242122eddaff96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>res3la</name>
      <anchorfile>structo2scl_1_1inte__singular__gsl_1_1extrapolation__table.html</anchorfile>
      <anchor>ad6af2b483991117d7a395b45acdd8b7c</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::fit_base</name>
    <filename>classo2scl_1_1fit__base.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a940c61c4368877b6fbe987093dc4b7c2</anchor>
      <arglist>(size_t nv, vec_t &amp;x, double y, int iter, double value=0.0, double limit=0.0)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>fit</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a4d50a1f5781f7e021625398d921b4251</anchor>
      <arglist>(size_t npar, vec_t &amp;parms, mat_t &amp;covar, double &amp;chi2, func_t &amp;fitfun)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a5eeb7dbace61e6cab2fc062f7f68fc5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a4ef2c754962d59deb4062743b8c4dbc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>aebaf6bae14bde5b189220795bd1ed34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a6b040512f9bb3d0aa1adf0f52509609c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a51b811045127093e922f73fe331c35ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_dat</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a020f3ba5ed35b43fe6f87f08ae1135ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_par</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a99aea832b043ece8c3b0692ab1c5e38f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fit_base&lt; fit_fix_pars&lt; bool_vec_t, func_t, vec_t, mat_t &gt;, vec_t, mat_t &gt;</name>
    <filename>classo2scl_1_1fit__base.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a940c61c4368877b6fbe987093dc4b7c2</anchor>
      <arglist>(size_t nv, vec_t &amp;x, double y, int iter, double value=0.0, double limit=0.0)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>fit</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a4d50a1f5781f7e021625398d921b4251</anchor>
      <arglist>(size_t npar, vec_t &amp;parms, mat_t &amp;covar, double &amp;chi2, fit_fix_pars&lt; bool_vec_t, func_t, vec_t, mat_t &gt; &amp;fitfun)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a5eeb7dbace61e6cab2fc062f7f68fc5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a4ef2c754962d59deb4062743b8c4dbc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>aebaf6bae14bde5b189220795bd1ed34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a6b040512f9bb3d0aa1adf0f52509609c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a51b811045127093e922f73fe331c35ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_dat</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a020f3ba5ed35b43fe6f87f08ae1135ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_par</name>
      <anchorfile>classo2scl_1_1fit__base.html</anchorfile>
      <anchor>a99aea832b043ece8c3b0692ab1c5e38f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::fit_bayes</name>
    <filename>classo2scl_1_1fit__bayes.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evidence</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>a82ceaa1bb26df709745f2f0ebd02c15d</anchor>
      <arglist>(size_t ndat, vec_t &amp;xdat, vec_t &amp;ydat, vec_t &amp;yerr, size_t npar, vec_t &amp;plo2, vec_t &amp;phi2, multi_func_t &amp;prior_fun, double &amp;evi, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>weight_fun</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>a11dd2de632c1136adf876b7db68d44ca</anchor>
      <arglist>(size_t ndat, const vec_t &amp;xdat, const vec_t &amp;ydat, const vec_t &amp;yerr, size_t npar, const vec_t &amp;par)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>fit</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>a0c63db40cde2796854cdac800533bc9d</anchor>
      <arglist>(size_t ndat, vec_t &amp;xdat, vec_t &amp;ydat, vec_t &amp;yerr, size_t npar, vec_t &amp;plo2, vec_t &amp;pmax, vec_t &amp;phi2, vec_t &amp;plo_err, vec_t &amp;pmax_err, vec_t &amp;phi_err, fit_func_t &amp;fitfun, multi_func_t &amp;prior_fun)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>fit_hist</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>a494fd0357aec703496ccd09ce2fa7cdd</anchor>
      <arglist>(size_t ndat, vec_t &amp;xdat, vec_t &amp;ydat, vec_t &amp;yerr, size_t npar, vec_t &amp;plo2, vec_t &amp;phi2, std::vector&lt; hist &gt; &amp;par_hist, fit_func_t &amp;fitfun, multi_func_t &amp;prior_fun)</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_warm_up</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>a4b9eae59fa56a17dc172c947e4768578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_iter</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>a7ac55b05ab27edac9fd67c8bee0fc7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>hsize</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>accfd52670ce8a2a2f97de49da1056564</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nmeas</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>af9ded509e7840c74a0c2d69b6fcaaa4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>multi_func_t *</type>
      <name>pri</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>ad3ebb9e723b59158cd716c666825f758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rng_gsl</type>
      <name>gr</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>adff481f43ce9e2c2beda9d9f090d40ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>mcarlo_vegas</type>
      <name>def_inte</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>ac8f97752c925c290012cefcebc68298d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>integrand</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>a12b0604226174b8bc8fa2f340439ac6d</anchor>
      <arglist>(size_t npar, const vec_t &amp;par)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>fit_func_t *</type>
      <name>ff</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>aa743a387d983f9b9670b6597683b8005</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>lndat</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>a7b16cca636ac7b5a7c54a846abedebd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>lxdat</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>a27ab577e15c772c1f3c0b214e1cd07c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>lydat</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>a624ae0fdf2da301fed1072ed8fd41eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>lyerr</name>
      <anchorfile>classo2scl_1_1fit__bayes.html</anchorfile>
      <anchor>ae8762ae45cfb55b5b1f0320070ee29f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::fit_fix_pars</name>
    <filename>classo2scl_1_1fit__fix__pars.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::fit_base</base>
    <base>o2scl::gen_fit_funct</base>
    <member kind="typedef">
      <type>fit_base&lt; fit_fix_pars&lt; bool_vec_t, func_t, vec_t, mat_t &gt;, vec_t, mat_t &gt;</type>
      <name>base_fit_t</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a7f777da6559fcb21ca142566306b38a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fit_nonlin&lt; fit_fix_pars&lt; bool_vec_t, func_t, vec_t, mat_t &gt;, vec_t, mat_t &gt;</type>
      <name>def_fit_t</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a7d9acb5ffaf7a7186c2b02c4529fb8f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fit_fix_pars</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>ad8f23e643bc0c646dff5e16ebecef7af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>fit</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a99d3bae799acad18ad9c6f5abb96dd19</anchor>
      <arglist>(size_t np, vec_t &amp;par, mat_t &amp;covar, double &amp;chi2, func_t &amp;fitfun)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>fit_fix</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>ac5d31944b0fefbc461f609534519b033</anchor>
      <arglist>(size_t np, vec_t &amp;par, mat_t &amp;covar, double &amp;chi2, func_t &amp;fitfun, bool_vec_t &amp;fix)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_fit</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>aab90e98f6cfdfadbefe5181a5da89c27</anchor>
      <arglist>(base_fit_t &amp;fitter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>get_ndata</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a15daff4b4ea46c9d510a8dd660ac77df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>afd2a857d44178fadcf7053dadd39b47c</anchor>
      <arglist>(size_t np_new, const vec_t &amp;par_new, size_t nd, vec_t &amp;f)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>jac</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a52bb8441faac2e356303d341ef05dba6</anchor>
      <arglist>(size_t np_new, vec_t &amp;par_new, size_t nd, vec_t &amp;f, mat_t &amp;J_new)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>expand_covar</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>af5f554f38397f8b0e34df850f570df37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>def_fit_t</type>
      <name>def_fit</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a2caa7c47f405d634372e0de0e5c05a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>u_par</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a844436823b2e7faeb5075a2b08b05313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>u_par_new</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a28511d6e17c699595a01373c77dedaab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>J</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>ad230bc26a8bb557b8a967844d5f453fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>base_fit_t *</type>
      <name>fitp</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a486cbb524240bf494ec87908e89b2dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>funcp</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a0a906c20af32f5af8e45bc749515598a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>u_np</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a2b66f21f950bdecbd84a3b625f370e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>u_np_new</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>af054f88404584215bde4561dcb1cf66a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool_vec_t *</type>
      <name>fix_par</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a3935d7bd153d836a2629cd3e48682d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>x_par</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>ad4c9d2a99019c15df1dce368255ce081</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>get_ndata</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a15daff4b4ea46c9d510a8dd660ac77df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>afd2a857d44178fadcf7053dadd39b47c</anchor>
      <arglist>(size_t np_new, const vec_t &amp;par_new, size_t nd, vec_t &amp;f)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>jac</name>
      <anchorfile>classo2scl_1_1fit__fix__pars.html</anchorfile>
      <anchor>a52bb8441faac2e356303d341ef05dba6</anchor>
      <arglist>(size_t np_new, vec_t &amp;par_new, size_t nd, vec_t &amp;f, mat_t &amp;J_new)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::fit_funct_strings</name>
    <filename>classo2scl_1_1fit__funct__strings.html</filename>
    <member kind="function">
      <type></type>
      <name>fit_funct_strings</name>
      <anchorfile>classo2scl_1_1fit__funct__strings.html</anchorfile>
      <anchor>a264d54f8ec805758c11f5112cd81d229</anchor>
      <arglist>(std::string expr, vec_string_t &amp;parms, std::string var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_aux_parm</name>
      <anchorfile>classo2scl_1_1fit__funct__strings.html</anchorfile>
      <anchor>a4b6296a1fe7ac56dad90a553f0f233f8</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1fit__funct__strings.html</anchorfile>
      <anchor>a80b9a7cd3c1e5baa4cb614b3d6dabd90</anchor>
      <arglist>(size_t np, const vec_t &amp;p, double x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>set_function</name>
      <anchorfile>classo2scl_1_1fit__funct__strings.html</anchorfile>
      <anchor>a3e2989d2a714f84a0b723e6eff8a0fc9</anchor>
      <arglist>(std::string expr, std::string parms, std::string var, int nauxp=0, std::string auxp=&quot;&quot;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>calculator</type>
      <name>calc</name>
      <anchorfile>classo2scl_1_1fit__funct__strings.html</anchorfile>
      <anchor>a95c8a9cbb70726ff415662fb28a5757e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>vars</name>
      <anchorfile>classo2scl_1_1fit__funct__strings.html</anchorfile>
      <anchor>aa135c5ba1f42d6dc61a04cb25593a1f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>st_form</name>
      <anchorfile>classo2scl_1_1fit__funct__strings.html</anchorfile>
      <anchor>ac65e83159cbd024c5686dd3f4f7f9c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>st_parms</name>
      <anchorfile>classo2scl_1_1fit__funct__strings.html</anchorfile>
      <anchor>a3f9910dcefc1c8e08f9aff21e2edd0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>st_var</name>
      <anchorfile>classo2scl_1_1fit__funct__strings.html</anchorfile>
      <anchor>a3cfa1e4d31c1b1413389f92075e8161a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::fit_linear</name>
    <filename>classo2scl_1_1fit__linear.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fit_svd</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a63a95684973e604bf779a3e3fd822250</anchor>
      <arglist>(size_t ndat, size_t npar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fit</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>ad92f35bffbcee8f2ca03fd25c849b6cc</anchor>
      <arglist>(size_t npar, size_t ndat, const vec_t &amp;ydat, const mat_t &amp;xpred, vec_t &amp;parms, mat_t &amp;covar, double &amp;chi2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a83e76c919935c232f975efc21a4cee56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>column_scaling</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>ad0218678db6b891fe2aee570bf16a341</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>abe72aa288021c3859fd7a84288d1b32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>rank</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>adf512cc8204792c682694a8b82d0751e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>size_par</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a6bf830699b721ca2b5e10560b294a003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>size_dat</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a1fc8fb8c52914172a1a578b38fdfb721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>A</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>abbc5e7927b0392ce69a53bd61226ef72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>Q</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a57c977e27fd08bae908d02c4d9ab67ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>QSI</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a828e35338066f9228d79762f07edb7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>S</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a3a501e65fe39a1850d3e77fb1d5d6ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>xt</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a82257ae3bd13c8d598f53ad479ea5815</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>D</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a1a4ce03f49e139604e3794e2fe899f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>t</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>ad5e90fd7c03627a0f854e220345aed9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>A</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>abbc5e7927b0392ce69a53bd61226ef72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>Q</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a57c977e27fd08bae908d02c4d9ab67ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>QSI</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a828e35338066f9228d79762f07edb7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>S</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a3a501e65fe39a1850d3e77fb1d5d6ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>xt</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a82257ae3bd13c8d598f53ad479ea5815</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>D</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>a1a4ce03f49e139604e3794e2fe899f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>t</name>
      <anchorfile>classo2scl_1_1fit__linear.html</anchorfile>
      <anchor>ad5e90fd7c03627a0f854e220345aed9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::fit_min</name>
    <filename>classo2scl_1_1fit__min.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::fit_base</base>
    <base>o2scl::fit_nonlin_b</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>fit</name>
      <anchorfile>classo2scl_1_1fit__min.html</anchorfile>
      <anchor>abc1ab28abbd4a525699b1e769a2bb832</anchor>
      <arglist>(size_t npar, vec_t &amp;par, mat_t &amp;covar, double &amp;chi2, func_t &amp;fitfun)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_mmin</name>
      <anchorfile>classo2scl_1_1fit__min.html</anchorfile>
      <anchor>a85371bb69e6c7ff518f71c641f5f0540</anchor>
      <arglist>(mmin_base&lt; multi_funct &gt; &amp;mm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1fit__min.html</anchorfile>
      <anchor>ac090ab8294d0059fb3073e209e76d585</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>mmin_simp2&lt; multi_funct &gt;</type>
      <name>def_mmin</name>
      <anchorfile>classo2scl_1_1fit__min.html</anchorfile>
      <anchor>a4a4d261f36e402749c042a19930e1e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>min_func</name>
      <anchorfile>classo2scl_1_1fit__min.html</anchorfile>
      <anchor>a83c18e8617ead508d1ea3de0812535a8</anchor>
      <arglist>(size_t np, const vec_t &amp;xp)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>fval</name>
      <anchorfile>classo2scl_1_1fit__min.html</anchorfile>
      <anchor>aff0eb61aa154299620d66ecd5c5af827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1fit__min.html</anchorfile>
      <anchor>a1e36e8d16279d1db1bc2cc2fec5bd286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mmin_base&lt; multi_funct &gt; *</type>
      <name>mmp</name>
      <anchorfile>classo2scl_1_1fit__min.html</anchorfile>
      <anchor>aefe94b7336a131325a09b377f10eeb9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>min_set</name>
      <anchorfile>classo2scl_1_1fit__min.html</anchorfile>
      <anchor>afc586b707002e6779f5e44c1c4bc89fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::fit_nonlin</name>
    <filename>classo2scl_1_1fit__nonlin.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <base>o2scl::fit_nonlin_b</base>
    <base>o2scl::fit_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ab92338ca5e8b0d397bcf9d367eebea1b</anchor>
      <arglist>(size_t nv, vec_t &amp;x, vec_t &amp;dx, int iter2, double l_epsabs, double l_epsrel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a0b7e4d433222eadcb3296f58d68903b2</anchor>
      <arglist>(size_t n, size_t p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af3711144e52867d16c30ca3d7cb54f37</anchor>
      <arglist>(size_t npar, vec_t &amp;parms, func_t &amp;fitfun)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af0a569e0077b20d795846e252396bf09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>fit</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a2f788febf93742c89c821f7df5235644</anchor>
      <arglist>(size_t npar, vec_t &amp;parms, mat_t &amp;covar, double &amp;chi2, func_t &amp;fitfun)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>acdfaaac0c23f4c4ed2826a4e3380c4d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>acf998c3badd4d4f7a5e7d7e8ead57fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>dx_</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>afa1b699ced0567a5b0bbc633ab0df218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>f_</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a793c7f5c45e4b0d64e2679ad9684c433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>test_gradient</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a159283dc25d0736dc9bf938cc0e8f182</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use_scaled</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ad6488d6d4b3473dbe8c55184de78b1bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ae14b849ffa9ba64619cfd3b9db4623bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>cff</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a7c9312e1c4021fed1a32dcae4236426c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x_trial</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a39787ed1968b22bc45c3b857f44389b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>f_trial</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a278b82757fe793a9b97e293e647a6f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>iter</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ab70106c5d301d60280a830a655d85147</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xnorm</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>aff071e521e296d0ca780e01270a1c894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fnorm</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>aec39ede4980f89731b9b533fbfaaea31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>delta</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a6686f250db3db0ae074e56df34f80039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>par</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>aad7f3408c9be02f0cb9ef57a63feac80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>r</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af032065f6ed2543e6a8d1788c3ed6201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>tau</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>afe383a5c68e27f99118ba4a9e6fed25a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>diag</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ac8e7ae511aeec0a982c2d0223be76d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>qtf</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>adffc544e575cbeb7fee72bc9589a4360</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>df</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a29a259b7cc7e37861e63b436c98fa473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>rptdx</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af0bdf05f9b522f5c17a300418ec7f625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>newton</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af57bcc181942eb5c6c2783e40ed01f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>gradient</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a8eb9d08d8337acfbe1248db8b052fbdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>sdiag</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a0835c772d0c568ff4dae544783384d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>w</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a65d67ee3f978ece57703de42a07aae57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>work1</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a26c25179fdd19cb5708d755591f13852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>permutation</type>
      <name>perm</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>adcf905f53ebab1bd834ec883f3248313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ndata</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af3629a65e2f5d273a4f8b11d271ada8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nparm</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ac288bab9b942e3331d174a45ebb7980a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>g_</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a4f8f05c95b4f1c3076f55559592de69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>J_</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a379cc78023c2478310b1ae7032e9f9dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>x_</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ab8b03ced6ad74653190a2ab821b35120</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fit_nonlin&lt; fit_fix_pars&lt; bool_vec_t, func_t, vec_t, mat_t &gt;, vec_t, mat_t &gt;</name>
    <filename>classo2scl_1_1fit__nonlin.html</filename>
    <base>o2scl::fit_nonlin_b</base>
    <base>fit_base&lt; fit_fix_pars&lt; bool_vec_t, func_t, vec_t, mat_t &gt;, vec_t, mat_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ab92338ca5e8b0d397bcf9d367eebea1b</anchor>
      <arglist>(size_t nv, vec_t &amp;x, vec_t &amp;dx, int iter2, double l_epsabs, double l_epsrel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a0b7e4d433222eadcb3296f58d68903b2</anchor>
      <arglist>(size_t n, size_t p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af3711144e52867d16c30ca3d7cb54f37</anchor>
      <arglist>(size_t npar, vec_t &amp;parms, fit_fix_pars&lt; bool_vec_t, func_t, vec_t, mat_t &gt; &amp;fitfun)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af0a569e0077b20d795846e252396bf09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>fit</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a2f788febf93742c89c821f7df5235644</anchor>
      <arglist>(size_t npar, vec_t &amp;parms, mat_t &amp;covar, double &amp;chi2, fit_fix_pars&lt; bool_vec_t, func_t, vec_t, mat_t &gt; &amp;fitfun)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>acdfaaac0c23f4c4ed2826a4e3380c4d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>acf998c3badd4d4f7a5e7d7e8ead57fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>dx_</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>afa1b699ced0567a5b0bbc633ab0df218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>f_</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a793c7f5c45e4b0d64e2679ad9684c433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>test_gradient</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a159283dc25d0736dc9bf938cc0e8f182</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use_scaled</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ad6488d6d4b3473dbe8c55184de78b1bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ae14b849ffa9ba64619cfd3b9db4623bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>fit_fix_pars&lt; bool_vec_t, func_t, vec_t, mat_t &gt; *</type>
      <name>cff</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a7c9312e1c4021fed1a32dcae4236426c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x_trial</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a39787ed1968b22bc45c3b857f44389b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>f_trial</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a278b82757fe793a9b97e293e647a6f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>iter</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ab70106c5d301d60280a830a655d85147</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xnorm</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>aff071e521e296d0ca780e01270a1c894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fnorm</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>aec39ede4980f89731b9b533fbfaaea31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>delta</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a6686f250db3db0ae074e56df34f80039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>par</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>aad7f3408c9be02f0cb9ef57a63feac80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>r</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af032065f6ed2543e6a8d1788c3ed6201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>tau</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>afe383a5c68e27f99118ba4a9e6fed25a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>diag</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ac8e7ae511aeec0a982c2d0223be76d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>qtf</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>adffc544e575cbeb7fee72bc9589a4360</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>df</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a29a259b7cc7e37861e63b436c98fa473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>rptdx</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af0bdf05f9b522f5c17a300418ec7f625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>newton</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af57bcc181942eb5c6c2783e40ed01f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>gradient</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a8eb9d08d8337acfbe1248db8b052fbdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>sdiag</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a0835c772d0c568ff4dae544783384d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>w</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a65d67ee3f978ece57703de42a07aae57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>work1</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a26c25179fdd19cb5708d755591f13852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>permutation</type>
      <name>perm</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>adcf905f53ebab1bd834ec883f3248313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ndata</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>af3629a65e2f5d273a4f8b11d271ada8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nparm</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ac288bab9b942e3331d174a45ebb7980a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>g_</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a4f8f05c95b4f1c3076f55559592de69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>J_</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>a379cc78023c2478310b1ae7032e9f9dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>x_</name>
      <anchorfile>classo2scl_1_1fit__nonlin.html</anchorfile>
      <anchor>ab8b03ced6ad74653190a2ab821b35120</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::fit_nonlin_b</name>
    <filename>classo2scl_1_1fit__nonlin__b.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>int</type>
      <name>test_delta_f</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>a1de2bc65ad2292b6ebbf1103384a54aa</anchor>
      <arglist>(size_t nparm, vec_t &amp;dx, vec_t &amp;x, double l_epsabs, double l_epsrel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>test_gradient_f</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>af58cb80854d2984560df14ec43f184c1</anchor>
      <arglist>(size_t nparm, vec_t &amp;g, double l_epsabs)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel_covar</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>ae3c3aaa4b7bb5d324f15f5b2bc9b4373</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>compute_actual_reduction</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>abb117ba1be0d7b172021e8e2e5d15ef0</anchor>
      <arglist>(double fnorm0, double fnorm1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>count_nsing</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>a2a309040baf1a56227f39affd58a6a1a</anchor>
      <arglist>(const size_t ncols, const mat_t &amp;r2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>compute_newton_direction</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>a1aac584a731d9441ed61d3aa51f954bf</anchor>
      <arglist>(size_t n, const mat_t &amp;r2, const permutation &amp;perm2, const vec_t &amp;qtf2, vec_t &amp;x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>compute_newton_bound</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>ae30d1d0aaa082945917c7887b9217e14</anchor>
      <arglist>(size_t nd, size_t np, const mat_t &amp;r2, const vec_t &amp;x, double dxnorm, const permutation &amp;perm, const vec_t &amp;diag, vec_t &amp;w)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>compute_gradient_direction</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>ab3cc7c9ea9be1c011a1bc74495acfb38</anchor>
      <arglist>(size_t n, const mat_t &amp;r, const permutation &amp;p, const vec_t &amp;qtf2, const vec_t &amp;diag, vec_t &amp;g)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update_diag</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>a8b268060e3e54e29548e3bc99372869d</anchor>
      <arglist>(size_t n, const mat_t &amp;J, vec_t &amp;diag2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>scaled_enorm</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>afb1049fa1f0a112638c3a8c95f39fc83</anchor>
      <arglist>(const vec_t &amp;d, size_t n, const vec_t &amp;f)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>compute_delta</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>a9d67722d90b4c829d2b3486236945a09</anchor>
      <arglist>(vec_t &amp;diag2, size_t n, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>compute_rptdx</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>af53fe736498b77064d42468981f0d0ae</anchor>
      <arglist>(const mat_t &amp;r2, const permutation &amp;p, size_t N, vec_t &amp;dx, vec_t &amp;rptdx2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>qrsolv</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>ad131bb5cdf2f0184726c3d2bf3b40edd</anchor>
      <arglist>(size_t n, mat_t &amp;r2, const permutation &amp;p, const double lambda, const vec_t &amp;diag2, const vec_t &amp;qtb, vec_t &amp;x, vec_t &amp;sdiag2, vec_t &amp;wa)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>compute_newton_correction</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>a9af4efbd7b8965fc1507ba8bdda3bacf</anchor>
      <arglist>(size_t n, const mat_t &amp;r2, const vec_t &amp;sdiag2, const permutation &amp;p, vec_t &amp;x, double dxnorm, const vec_t &amp;diag2, vec_t &amp;w2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>lmpar</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>a59a8a103bfe4f0d9483590e4d7409a30</anchor>
      <arglist>(mat_t &amp;r2, const permutation &amp;perm2, const vec_t &amp;qtf2, const vec_t &amp;diag2, double delta2, double *par_inout, vec_t &amp;newton2, vec_t &amp;gradient2, vec_t &amp;sdiag2, vec_t &amp;x, vec_t &amp;w2, size_t nparm, size_t ndata)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>compute_trial_step</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>afcf392dcc2e82ceeb9909503cb0da7ec</anchor>
      <arglist>(size_t N, vec_t &amp;x, vec_t &amp;dx, vec_t &amp;trial)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>compute_diag</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>a70bb40630f89da105de7abe7489ab07c</anchor>
      <arglist>(size_t nparm, size_t ndata, const mat_t &amp;J, vec_t &amp;diag_vec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>covariance</name>
      <anchorfile>classo2scl_1_1fit__nonlin__b.html</anchorfile>
      <anchor>a8b3840a11e3c4ca83465ff30dc90bfe4</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;J, mat_t &amp;covar, vec_t &amp;norm, mat_t &amp;r, vec_t &amp;tau, permutation &amp;perm, double epsrel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::format_float</name>
    <filename>classo2scl_1_1format__float.html</filename>
    <member kind="function">
      <type>void</type>
      <name>html_mode</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ad474597e1eab42f87e6c734648a889b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>latex_mode</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a012372e16b2c2a65fddb386e40da53f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>c_mode</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a853090d562d2deabcad828cd3a3edcf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convert</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a755824bd85fadf62f91013fe08add08c</anchor>
      <arglist>(double x, bool debug=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a49bace43dd0093890783a9ae119d8e90</anchor>
      <arglist>(std::string prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aadf148d33caec2ed98e76d8044c00a39</anchor>
      <arglist>(std::string suffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sci_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aecb4b8ecab0d9743e28900be22ba8e9b</anchor>
      <arglist>(std::string sci_prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sci_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a3d33dea07a2d5164c8348a9d1262d7fa</anchor>
      <arglist>(std::string sci_suffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exp_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>af1dcede5000a89042cddbf675d953ea0</anchor>
      <arglist>(std::string exp_prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exp_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>af39f6af0f764df78679dce639d1fdbb8</anchor>
      <arglist>(std::string exp_suffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aa2cb717fa67c3ff044604026fe92e36c</anchor>
      <arglist>(std::string sign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exp_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ab78dd766a14d5fc2b585c79208fb0796</anchor>
      <arglist>(std::string exp_sign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_exp_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a53a6c94a9c8eb86e2991e4e559a9b3cb</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sci_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a4e7827c890cf41c42d292129d89f09cc</anchor>
      <arglist>(std::string sci_sign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_times</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>afe04eccbb16c64d4fc93f19ed5ba5940</anchor>
      <arglist>(std::string times)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_zero</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a52df256c2b694ca0bb0b815d86295c38</anchor>
      <arglist>(std::string zero)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_not_finite</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a4d95df572cf8b4c1eca847e1e260b9d7</anchor>
      <arglist>(std::string not_finite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exp_limits</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aae8206e5db31a188470e4acecde0121f</anchor>
      <arglist>(int min, int max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sig_figs</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aef50ea88a07fa87e6ae9cdd82c51bdae</anchor>
      <arglist>(size_t sig_figs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pad_zeros</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a10b074d8e5bfa16f584b5b54547b53d2</anchor>
      <arglist>(bool pad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dec_point</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>af6f08c1b8784bdc1206b2a04e9cd3afe</anchor>
      <arglist>(std::string dec_point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exp_digits</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aa86c2a4ec0d696ded7d41796c0f56834</anchor>
      <arglist>(size_t d)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ac119d02d3ffffe0a87cc6b6c00e17e5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a2f53c384a774ea715c368c68ea8406f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_sci_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a911a2ccd733a1fc7fbefc855e8da01ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_sci_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ae8cff5b7ab6e677acdc9bf0f91d28a7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_exp_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a65b1bf7d7fba646833e3037bb23b8a82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_exp_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ae5fd5280bb5d2f97b3cbd64bb5bd2ef4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a20b9c935d082a87f05447a8cf9573867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_exp_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a590a3c29c47c4248f0096f8b95bc8821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_sci_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a2d99036787a85a8fd9a23c7b9f36add0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_times</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aaad360af55f18baffdde8051580b81f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_zero</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a1fd86475e6f4f034c3f65d13714694fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_not_finite</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a40854fc3dffa78c006f9b02012e0a1fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_exp_min</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a4a6a062fe76129c0a28060f20502e372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_exp_max</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a3b70980dc4f901939519576fdf555dfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_sig_figs</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ab22108df5a7534725e7e42f67fcd882a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_pad_zeros</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a86276a2dbb5e85859ea49614cd4e222a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_dec_point</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ad138e2607518eb195db0475a656ea68f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>remove_zeros_dpt</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a5d7e466976a14a65cd5bbf8cf83296a0</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>prefx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ad446c156b39c939b7c2fd6da3e1f976d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>suffx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a8b0bc44965ebae91ca84f8afcfd2f499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sgn</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aa78714668172176eac0cbed35c1d1527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sci_sgn</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aefe45438687b9ba5400f431abce0ca1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>exp_sgn</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a9bc34d0c5172cda2be29411b3975e406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sci_prefx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ad9b65a081a5a749d9da035af5e08a300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sci_suffx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ad0aa8399448cc97ee5e554a76cc2e958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>exp_prefx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a194d56cfc9e27dc1dfe883a99b3ca143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>exp_suffx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>acc4e2d1e8a836fa5e64d0efcba8f7bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>tmes</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a321c36e8a102674566f6e5b62de60cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>not_finte</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a12db5c04dea8ea84da199e67ee26a749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>zeros</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a8a9d06f3546b219316a5729ec369f145</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>sig_fgs</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aa3a6e5d22b4655c42e40c258c52956bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>exp_dgs</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ab134fa14399b09054671609607af923c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ex_mn</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a769b20efe13f6f6d6375500e9ff6ee27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ex_mx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a284cfb2ee2573a630f4b2344f2323740</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>pad_zeros</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ac3802257cd73f226d3e5ded664eb559e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>show_exp_sgn</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a0e5cb41967e43ab92ade5cb4676add68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>dpt</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a7da8a980d199e624780b6b4f32f9241d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>prefx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ad446c156b39c939b7c2fd6da3e1f976d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>suffx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a8b0bc44965ebae91ca84f8afcfd2f499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sgn</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aa78714668172176eac0cbed35c1d1527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sci_sgn</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aefe45438687b9ba5400f431abce0ca1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>exp_sgn</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a9bc34d0c5172cda2be29411b3975e406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sci_prefx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ad9b65a081a5a749d9da035af5e08a300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sci_suffx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ad0aa8399448cc97ee5e554a76cc2e958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>exp_prefx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a194d56cfc9e27dc1dfe883a99b3ca143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>exp_suffx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>acc4e2d1e8a836fa5e64d0efcba8f7bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>tmes</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a321c36e8a102674566f6e5b62de60cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>not_finte</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a12db5c04dea8ea84da199e67ee26a749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>zeros</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a8a9d06f3546b219316a5729ec369f145</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>sig_fgs</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aa3a6e5d22b4655c42e40c258c52956bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>exp_dgs</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ab134fa14399b09054671609607af923c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ex_mn</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a769b20efe13f6f6d6375500e9ff6ee27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ex_mx</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a284cfb2ee2573a630f4b2344f2323740</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>pad_zeros</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ac3802257cd73f226d3e5ded664eb559e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>show_exp_sgn</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a0e5cb41967e43ab92ade5cb4676add68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>dpt</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a7da8a980d199e624780b6b4f32f9241d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>html_mode</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ad474597e1eab42f87e6c734648a889b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>latex_mode</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a012372e16b2c2a65fddb386e40da53f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>c_mode</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a853090d562d2deabcad828cd3a3edcf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convert</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a755824bd85fadf62f91013fe08add08c</anchor>
      <arglist>(double x, bool debug=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a49bace43dd0093890783a9ae119d8e90</anchor>
      <arglist>(std::string prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aadf148d33caec2ed98e76d8044c00a39</anchor>
      <arglist>(std::string suffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sci_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aecb4b8ecab0d9743e28900be22ba8e9b</anchor>
      <arglist>(std::string sci_prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sci_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a3d33dea07a2d5164c8348a9d1262d7fa</anchor>
      <arglist>(std::string sci_suffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exp_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>af1dcede5000a89042cddbf675d953ea0</anchor>
      <arglist>(std::string exp_prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exp_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>af39f6af0f764df78679dce639d1fdbb8</anchor>
      <arglist>(std::string exp_suffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aa2cb717fa67c3ff044604026fe92e36c</anchor>
      <arglist>(std::string sign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exp_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ab78dd766a14d5fc2b585c79208fb0796</anchor>
      <arglist>(std::string exp_sign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_exp_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a53a6c94a9c8eb86e2991e4e559a9b3cb</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sci_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a4e7827c890cf41c42d292129d89f09cc</anchor>
      <arglist>(std::string sci_sign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_times</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>afe04eccbb16c64d4fc93f19ed5ba5940</anchor>
      <arglist>(std::string times)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_zero</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a52df256c2b694ca0bb0b815d86295c38</anchor>
      <arglist>(std::string zero)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_not_finite</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a4d95df572cf8b4c1eca847e1e260b9d7</anchor>
      <arglist>(std::string not_finite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exp_limits</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aae8206e5db31a188470e4acecde0121f</anchor>
      <arglist>(int min, int max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sig_figs</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aef50ea88a07fa87e6ae9cdd82c51bdae</anchor>
      <arglist>(size_t sig_figs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pad_zeros</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a10b074d8e5bfa16f584b5b54547b53d2</anchor>
      <arglist>(bool pad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dec_point</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>af6f08c1b8784bdc1206b2a04e9cd3afe</anchor>
      <arglist>(std::string dec_point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exp_digits</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aa86c2a4ec0d696ded7d41796c0f56834</anchor>
      <arglist>(size_t d)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ac119d02d3ffffe0a87cc6b6c00e17e5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a2f53c384a774ea715c368c68ea8406f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_sci_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a911a2ccd733a1fc7fbefc855e8da01ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_sci_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ae8cff5b7ab6e677acdc9bf0f91d28a7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_exp_prefix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a65b1bf7d7fba646833e3037bb23b8a82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_exp_suffix</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ae5fd5280bb5d2f97b3cbd64bb5bd2ef4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a20b9c935d082a87f05447a8cf9573867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_exp_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a590a3c29c47c4248f0096f8b95bc8821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_sci_sign</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a2d99036787a85a8fd9a23c7b9f36add0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_times</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>aaad360af55f18baffdde8051580b81f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_zero</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a1fd86475e6f4f034c3f65d13714694fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_not_finite</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a40854fc3dffa78c006f9b02012e0a1fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_exp_min</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a4a6a062fe76129c0a28060f20502e372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_exp_max</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a3b70980dc4f901939519576fdf555dfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_sig_figs</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ab22108df5a7534725e7e42f67fcd882a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_pad_zeros</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>a86276a2dbb5e85859ea49614cd4e222a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_dec_point</name>
      <anchorfile>classo2scl_1_1format__float.html</anchorfile>
      <anchor>ad138e2607518eb195db0475a656ea68f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::funct_gsl</name>
    <filename>classo2scl_1_1funct__gsl.html</filename>
    <member kind="function">
      <type></type>
      <name>funct_gsl</name>
      <anchorfile>classo2scl_1_1funct__gsl.html</anchorfile>
      <anchor>a1375991c9f11e5b8b13735ea3a782fd7</anchor>
      <arglist>(funct &amp;f)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>funct_wrap</name>
      <anchorfile>classo2scl_1_1funct__gsl.html</anchorfile>
      <anchor>ad76ce7490e5fb1172547fb9883adcb4e</anchor>
      <arglist>(double x, void *params)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::funct_string</name>
    <filename>classo2scl_1_1funct__string.html</filename>
    <member kind="function">
      <type></type>
      <name>funct_string</name>
      <anchorfile>classo2scl_1_1funct__string.html</anchorfile>
      <anchor>ad00029c45e682867c9282429d2a932ab</anchor>
      <arglist>(std::string expr, std::string var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_function</name>
      <anchorfile>classo2scl_1_1funct__string.html</anchorfile>
      <anchor>a3ade101093be9694dc4ff2706e49d955</anchor>
      <arglist>(std::string expr, std::string var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_parm</name>
      <anchorfile>classo2scl_1_1funct__string.html</anchorfile>
      <anchor>a0dad49c1c8615a6c7a82d64f911d374b</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1funct__string.html</anchorfile>
      <anchor>ad78fe86b3a810f5f42c6200023727609</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>calculator</type>
      <name>calc</name>
      <anchorfile>classo2scl_1_1funct__string.html</anchorfile>
      <anchor>a465bc6b80f3199128dc9bf991eb963c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>vars</name>
      <anchorfile>classo2scl_1_1funct__string.html</anchorfile>
      <anchor>a605c88f0965acdbdcc2a30dc66c7a97e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>st_form</name>
      <anchorfile>classo2scl_1_1funct__string.html</anchorfile>
      <anchor>a7a40f8ae4e44173c2c062eb4807278aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>st_var</name>
      <anchorfile>classo2scl_1_1funct__string.html</anchorfile>
      <anchor>a88040784244f166b3cbab0677f2c0552</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::gen_fit_funct</name>
    <filename>classo2scl_1_1gen__fit__funct.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1gen__fit__funct.html</anchorfile>
      <anchor>af8f74312db9388cf492da3227ca2d45e</anchor>
      <arglist>(size_t np, const vec_t &amp;p, size_t nd, vec_t &amp;f)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>jac</name>
      <anchorfile>classo2scl_1_1gen__fit__funct.html</anchorfile>
      <anchor>a2c32633a96bfdfabf4597bdb8cbb7748</anchor>
      <arglist>(size_t np, vec_t &amp;p, size_t nd, vec_t &amp;f, mat_t &amp;J)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>get_ndata</name>
      <anchorfile>classo2scl_1_1gen__fit__funct.html</anchorfile>
      <anchor>a253ede5657f6b3c73f5d9b6f33311d75</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::gen_test_number</name>
    <filename>classo2scl_1_1gen__test__number.html</filename>
    <templarg>tot</templarg>
    <member kind="function">
      <type>double</type>
      <name>gen</name>
      <anchorfile>classo2scl_1_1gen__test__number.html</anchorfile>
      <anchor>a70c24c01c972b8728492b1fb9484fb94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>n</name>
      <anchorfile>classo2scl_1_1gen__test__number.html</anchorfile>
      <anchor>a5966533e146687575ad0bd563e0b9c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fact</name>
      <anchorfile>classo2scl_1_1gen__test__number.html</anchorfile>
      <anchor>a04690e98ae0a76a1601aa19e755567c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::gradient</name>
    <filename>classo2scl_1_1gradient.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_function</name>
      <anchorfile>classo2scl_1_1gradient.html</anchorfile>
      <anchor>a8f73b2e67f649dd1072a14778800ec8e</anchor>
      <arglist>(func_t &amp;f)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1gradient.html</anchorfile>
      <anchor>ad7b5c64dafb7198ff5fca3c27d28687b</anchor>
      <arglist>(size_t nv, vec_t &amp;x, vec_t &amp;g)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1gradient.html</anchorfile>
      <anchor>a27429d8c6227fa1bc188645de826e177</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::gradient_gsl</name>
    <filename>classo2scl_1_1gradient__gsl.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::gradient</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1gradient__gsl.html</anchorfile>
      <anchor>a4f41401064b3315fec1d8676c128a8e2</anchor>
      <arglist>(size_t nv, vec_t &amp;x, vec_t &amp;g)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epsrel</name>
      <anchorfile>classo2scl_1_1gradient__gsl.html</anchorfile>
      <anchor>a0c8514b07d0b4bd662e82a8cd0ed4ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epsmin</name>
      <anchorfile>classo2scl_1_1gradient__gsl.html</anchorfile>
      <anchor>a56e57bad949c2a9316f02a4f807804a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::gsl_matrix_wrap</name>
    <filename>classo2scl_1_1gsl__matrix__wrap.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl::gsl_tolerance</name>
    <filename>classo2scl_1_1gsl__tolerance.html</filename>
    <templarg>T</templarg>
  </compound>
  <compound kind="class">
    <name>o2scl::gsl_vector_wrap</name>
    <filename>classo2scl_1_1gsl__vector__wrap.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl_hdf::hdf_file</name>
    <filename>classo2scl__hdf_1_1hdf__file.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>has_write_access</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aa5a572c9c07eb8efc9c6b8278bce03e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>open</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a1e4788ef88411fec49203615de658825</anchor>
      <arglist>(std::string fname, bool write_access=false, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open_or_create</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae1a2c5b864321a81adf1561e749e85e8</anchor>
      <arglist>(std::string fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>af3ea8c47772debec157ab6643eb11626</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>get_file_id</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7bdb96679c154cd19f79f7f5945bca7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_id</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ab180130e0aec6a804463a42630113866</anchor>
      <arglist>(hid_t cur)</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>get_current_id</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a655bd9c1f7fc0fb5958dead4b5e7a36e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aee9eb4fe1f026fbad263c1f9a6832cf9</anchor>
      <arglist>(std::string name, char &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae3273931eae7a104f3def6f01ad89b5a</anchor>
      <arglist>(std::string name, double &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getf</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a1da582007d532ba618dc364123cca465</anchor>
      <arglist>(std::string name, float &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>acf35b307145419c6b7ff14abed37ed51</anchor>
      <arglist>(std::string name, int &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_szt</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a14addd98d8cec8c498436528df3b3b4c</anchor>
      <arglist>(std::string name, size_t &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gets</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a866165db74ecbf863a1158312219e0c0</anchor>
      <arglist>(std::string name, std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gets_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a1a7c5adde07dba8b3ec77ffa9a081c34</anchor>
      <arglist>(std::string name, std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gets_def_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7390bfe8ac8e5f08292fa6efc8769c61</anchor>
      <arglist>(std::string name, std::string def, std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aeb827987153f8c324bce4fbdfd812676</anchor>
      <arglist>(std::string name, char c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setd</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aca41594e907424ad0765170793e16ba6</anchor>
      <arglist>(std::string name, double d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setf</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a6f1bcde2fc1fddf9284dc77ed1d54f3c</anchor>
      <arglist>(std::string name, float f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seti</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a043f7b483941ab41ad581f26e75217ab</anchor>
      <arglist>(std::string name, int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_szt</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a50d3fc8072cab79193e925a7bc530fba</anchor>
      <arglist>(std::string name, size_t u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sets</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a3a870203baa9353d3477e5f755d7344f</anchor>
      <arglist>(std::string name, std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sets_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>add91abfb5549cef56dfe339895300489</anchor>
      <arglist>(std::string name, std::string s)</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>open_group</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a8ba6bf2ca34f0ed519c8516c0a5eb913</anchor>
      <arglist>(hid_t init_id, std::string path)</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>open_group</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae6dbaa30dd36c7a77adf1b6a01d96e15</anchor>
      <arglist>(std::string path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>close_group</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a0bf98177f4c5fe4702ba68587d54df56</anchor>
      <arglist>(hid_t group)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a977e228a21b2fa84d07b4438c8d0bff0</anchor>
      <arglist>(std::string name, std::vector&lt; double &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a88216aeed6bfdbdf2b4c59f72d561c67</anchor>
      <arglist>(std::string name, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ad92d41104ca5a236ba8723d514de93b2</anchor>
      <arglist>(std::string name, std::vector&lt; int &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a94a100e432250f07db98612e68a69205</anchor>
      <arglist>(std::string name, vec_int_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_szt_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a41310349ccd6a38be324e08c43329ac8</anchor>
      <arglist>(std::string name, std::vector&lt; size_t &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_szt_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a590dbf51a576795ec17dc175a98d7132</anchor>
      <arglist>(std::string name, vec_size_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gets_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aff1623edbee8796b1104b0c0dd1c1db7</anchor>
      <arglist>(std::string name, std::vector&lt; std::string &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ab61441da10626de11204fb66c9a46dcb</anchor>
      <arglist>(std::string name, const std::vector&lt; double &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aa9f0510970eb66c8c5df37db71f52348</anchor>
      <arglist>(std::string name, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a4b7476072977b2db348071b37b10ba66</anchor>
      <arglist>(std::string name, const std::vector&lt; int &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>afa41a7c1add9e5d07b24687d2278ba05</anchor>
      <arglist>(std::string name, vec_int_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_szt_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae3e47537cd8b95691eda20f25f831be7</anchor>
      <arglist>(std::string name, const std::vector&lt; size_t &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_szt_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aeec1b7b71418a1cb28c02e145ec090a0</anchor>
      <arglist>(std::string name, vec_size_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sets_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a930e38c8e9e709447e6043a0358929e2</anchor>
      <arglist>(std::string name, std::vector&lt; std::string &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_mat_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aea1eb8f209a15019e49eb16b3d11063c</anchor>
      <arglist>(std::string name, ubmatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_mat_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ab9172bd4f5d2a756f510f9d8297992a7</anchor>
      <arglist>(std::string name, ubmatrix_int &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_mat_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a8ff65cd8cdac2b9202d28eca30bb1005</anchor>
      <arglist>(std::string name, const ubmatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_mat_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a547cd36f80b6742cef55258a65f04884</anchor>
      <arglist>(std::string name, const ubmatrix_int &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_arr2d_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a04d69f78a12ab9b3ec585a68a523d850</anchor>
      <arglist>(std::string name, size_t r, size_t c, const arr2d_t &amp;a2d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_arr2d_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae8a6438010722d5d2c2c01b00db4ff0e</anchor>
      <arglist>(std::string name, size_t r, size_t c, const arr2d_t &amp;a2d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_szt_arr2d_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a21d70cd3bb14c517f56f31fba3615307</anchor>
      <arglist>(std::string name, size_t r, size_t c, const arr2d_t &amp;a2d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_ten</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7000b31e92eb52f7999a4d458374c4c8</anchor>
      <arglist>(std::string name, o2scl::tensor&lt; std::vector&lt; double &gt;, std::vector&lt; size_t &gt; &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_ten_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a2a1c2483d5759e5065428b5bb336bfd3</anchor>
      <arglist>(std::string name, o2scl::tensor&lt; vec_t, vec_size_t &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_ten</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a9f438e3b1a363b0993ec8ba35ceba424</anchor>
      <arglist>(std::string name, const o2scl::tensor&lt; std::vector&lt; double &gt;, std::vector&lt; size_t &gt; &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_ten_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aeb36b48755352c59e063e05d0f03909e</anchor>
      <arglist>(std::string name, const o2scl::tensor&lt; std::vector&lt; double &gt;, std::vector&lt; size_t &gt; &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getc_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aa0aa88aff2a2e547de3fa62b903716e6</anchor>
      <arglist>(std::string name, size_t n, char *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a22e370990fe7ded68eaa8f9cc88482f1</anchor>
      <arglist>(std::string name, size_t n, double *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getf_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ac569b8fd240269617ba7aabc95b619c0</anchor>
      <arglist>(std::string name, size_t n, float *f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a6712ea444796967e8f245f0350abb8d5</anchor>
      <arglist>(std::string name, size_t n, int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getc_arr_alloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a08fb72a2578cb87bcb1a1cb3675aeaab</anchor>
      <arglist>(std::string name, size_t &amp;n, char *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_arr_alloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ad1d29fc859b760de43076437a87468fa</anchor>
      <arglist>(std::string name, size_t &amp;n, double *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getf_arr_alloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ad57bfb0f4c7aed9181beb79cc50b2375</anchor>
      <arglist>(std::string name, size_t &amp;n, float *f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_arr_alloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a15def0715d81b9b06d0df7749c726282</anchor>
      <arglist>(std::string name, size_t &amp;n, int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setc_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7c836fafeb4b915392996bef4740be69</anchor>
      <arglist>(std::string name, size_t n, const char *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a8b6ca87e5b8e520964312a32b7fc899c</anchor>
      <arglist>(std::string name, size_t n, const double *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setf_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a5942696ee42f0e61b5246750fd4431bc</anchor>
      <arglist>(std::string name, size_t n, const float *f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a3920832cbeb535a0a0040d2997887544</anchor>
      <arglist>(std::string name, size_t n, const int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_szt_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a1077ed5d3531a4daffa6bb1a39f65031</anchor>
      <arglist>(std::string name, size_t n, const size_t *u)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setc_arr_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ab12374f6f5e7cffe9a4a652fe7ea1863</anchor>
      <arglist>(std::string name, size_t n, const char *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_arr_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a4b39f108868a6549242ad6ea94063815</anchor>
      <arglist>(std::string name, size_t n, const double *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setf_arr_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a982adf910fb27ae6cc5ac61ec57065d7</anchor>
      <arglist>(std::string name, size_t n, const float *f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_arr_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a8a793e5d2ffdf2c195e212bc2d363cab</anchor>
      <arglist>(std::string name, size_t n, const int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getc_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a6651c684f57e93e3d918701cfd66df34</anchor>
      <arglist>(std::string name, char def, char &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a6b86c935ed2a814408979969bba9a484</anchor>
      <arglist>(std::string name, double def, double &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getf_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7469ed2c91495140b7f932758898e412</anchor>
      <arglist>(std::string name, float def, float &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae9f7a8e932fe237d89212ea31a2089be</anchor>
      <arglist>(std::string name, int def, int &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_szt_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7aa4963a69c2b589e2fdcb4f32812b3b</anchor>
      <arglist>(std::string name, size_t def, size_t &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gets_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aeb42c52a4cac1ff259116eed5c347106</anchor>
      <arglist>(std::string name, std::string def, std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_vec_prealloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a0e741b925b70a41f36fb53e9c8d1bc5f</anchor>
      <arglist>(std::string name, size_t n, double *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_vec_prealloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a84f3a35e4db03c856ed076c4effb47f7</anchor>
      <arglist>(std::string name, size_t n, int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_mat_prealloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ac9a16ea8b36ed1072dd2453c7dd5ab2e</anchor>
      <arglist>(std::string name, size_t n, size_t m, double *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_mat_prealloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a249ccbdeeba627c3100c7821d8568e10</anchor>
      <arglist>(std::string name, size_t n, size_t m, int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>find_group_by_type</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a77d127c8a7413c72774445090915d65f</anchor>
      <arglist>(std::string type, std::string &amp;group_name, int verbose=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>find_group_by_name</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aad5830d9137b8daa7117cb78fd3aeb40</anchor>
      <arglist>(std::string name, std::string &amp;type, int verbose=0)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>compr_type</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>afd9d2559634c8d1662cbd06f61cc2d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual hsize_t</type>
      <name>def_chunk</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aaf2190103c1e1784aa5e327c0b0a067c</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>hid_t</type>
      <name>file</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>abe03b51c2b05378e1dda01d95ef15d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>file_open</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a57cc75698ccf9269a351f0f1b0a7267b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>hid_t</type>
      <name>current</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a0ca658087598c9f2f4153c3857d0751d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>write_access</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>acd9be8fd6fa7a76771eba836060e10d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>open</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a1e4788ef88411fec49203615de658825</anchor>
      <arglist>(std::string fname, bool write_access=false, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open_or_create</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae1a2c5b864321a81adf1561e749e85e8</anchor>
      <arglist>(std::string fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>af3ea8c47772debec157ab6643eb11626</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>get_file_id</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7bdb96679c154cd19f79f7f5945bca7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_id</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ab180130e0aec6a804463a42630113866</anchor>
      <arglist>(hid_t cur)</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>get_current_id</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a655bd9c1f7fc0fb5958dead4b5e7a36e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aee9eb4fe1f026fbad263c1f9a6832cf9</anchor>
      <arglist>(std::string name, char &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae3273931eae7a104f3def6f01ad89b5a</anchor>
      <arglist>(std::string name, double &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getf</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a1da582007d532ba618dc364123cca465</anchor>
      <arglist>(std::string name, float &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>acf35b307145419c6b7ff14abed37ed51</anchor>
      <arglist>(std::string name, int &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_szt</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a14addd98d8cec8c498436528df3b3b4c</anchor>
      <arglist>(std::string name, size_t &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gets</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a866165db74ecbf863a1158312219e0c0</anchor>
      <arglist>(std::string name, std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gets_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a1a7c5adde07dba8b3ec77ffa9a081c34</anchor>
      <arglist>(std::string name, std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gets_def_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7390bfe8ac8e5f08292fa6efc8769c61</anchor>
      <arglist>(std::string name, std::string def, std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aeb827987153f8c324bce4fbdfd812676</anchor>
      <arglist>(std::string name, char c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setd</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aca41594e907424ad0765170793e16ba6</anchor>
      <arglist>(std::string name, double d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setf</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a6f1bcde2fc1fddf9284dc77ed1d54f3c</anchor>
      <arglist>(std::string name, float f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seti</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a043f7b483941ab41ad581f26e75217ab</anchor>
      <arglist>(std::string name, int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_szt</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a50d3fc8072cab79193e925a7bc530fba</anchor>
      <arglist>(std::string name, size_t u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sets</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a3a870203baa9353d3477e5f755d7344f</anchor>
      <arglist>(std::string name, std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sets_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>add91abfb5549cef56dfe339895300489</anchor>
      <arglist>(std::string name, std::string s)</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>open_group</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a8ba6bf2ca34f0ed519c8516c0a5eb913</anchor>
      <arglist>(hid_t init_id, std::string path)</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>open_group</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae6dbaa30dd36c7a77adf1b6a01d96e15</anchor>
      <arglist>(std::string path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>close_group</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a0bf98177f4c5fe4702ba68587d54df56</anchor>
      <arglist>(hid_t group)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a977e228a21b2fa84d07b4438c8d0bff0</anchor>
      <arglist>(std::string name, std::vector&lt; double &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a88216aeed6bfdbdf2b4c59f72d561c67</anchor>
      <arglist>(std::string name, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ad92d41104ca5a236ba8723d514de93b2</anchor>
      <arglist>(std::string name, std::vector&lt; int &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a94a100e432250f07db98612e68a69205</anchor>
      <arglist>(std::string name, vec_int_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_szt_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a41310349ccd6a38be324e08c43329ac8</anchor>
      <arglist>(std::string name, std::vector&lt; size_t &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_szt_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a590dbf51a576795ec17dc175a98d7132</anchor>
      <arglist>(std::string name, vec_size_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gets_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aff1623edbee8796b1104b0c0dd1c1db7</anchor>
      <arglist>(std::string name, std::vector&lt; std::string &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ab61441da10626de11204fb66c9a46dcb</anchor>
      <arglist>(std::string name, const std::vector&lt; double &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aa9f0510970eb66c8c5df37db71f52348</anchor>
      <arglist>(std::string name, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a4b7476072977b2db348071b37b10ba66</anchor>
      <arglist>(std::string name, const std::vector&lt; int &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>afa41a7c1add9e5d07b24687d2278ba05</anchor>
      <arglist>(std::string name, vec_int_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_szt_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae3e47537cd8b95691eda20f25f831be7</anchor>
      <arglist>(std::string name, const std::vector&lt; size_t &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_szt_vec_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aeec1b7b71418a1cb28c02e145ec090a0</anchor>
      <arglist>(std::string name, vec_size_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sets_vec</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a930e38c8e9e709447e6043a0358929e2</anchor>
      <arglist>(std::string name, std::vector&lt; std::string &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_mat_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aea1eb8f209a15019e49eb16b3d11063c</anchor>
      <arglist>(std::string name, ubmatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_mat_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ab9172bd4f5d2a756f510f9d8297992a7</anchor>
      <arglist>(std::string name, ubmatrix_int &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_mat_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a8ff65cd8cdac2b9202d28eca30bb1005</anchor>
      <arglist>(std::string name, const ubmatrix &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_mat_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a547cd36f80b6742cef55258a65f04884</anchor>
      <arglist>(std::string name, const ubmatrix_int &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_arr2d_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a04d69f78a12ab9b3ec585a68a523d850</anchor>
      <arglist>(std::string name, size_t r, size_t c, const arr2d_t &amp;a2d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_arr2d_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae8a6438010722d5d2c2c01b00db4ff0e</anchor>
      <arglist>(std::string name, size_t r, size_t c, const arr2d_t &amp;a2d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_szt_arr2d_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a21d70cd3bb14c517f56f31fba3615307</anchor>
      <arglist>(std::string name, size_t r, size_t c, const arr2d_t &amp;a2d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_ten</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7000b31e92eb52f7999a4d458374c4c8</anchor>
      <arglist>(std::string name, o2scl::tensor&lt; std::vector&lt; double &gt;, std::vector&lt; size_t &gt; &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_ten_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a2a1c2483d5759e5065428b5bb336bfd3</anchor>
      <arglist>(std::string name, o2scl::tensor&lt; vec_t, vec_size_t &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_ten</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a9f438e3b1a363b0993ec8ba35ceba424</anchor>
      <arglist>(std::string name, const o2scl::tensor&lt; std::vector&lt; double &gt;, std::vector&lt; size_t &gt; &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_ten_copy</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aeb36b48755352c59e063e05d0f03909e</anchor>
      <arglist>(std::string name, const o2scl::tensor&lt; std::vector&lt; double &gt;, std::vector&lt; size_t &gt; &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getc_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aa0aa88aff2a2e547de3fa62b903716e6</anchor>
      <arglist>(std::string name, size_t n, char *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a22e370990fe7ded68eaa8f9cc88482f1</anchor>
      <arglist>(std::string name, size_t n, double *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getf_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ac569b8fd240269617ba7aabc95b619c0</anchor>
      <arglist>(std::string name, size_t n, float *f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a6712ea444796967e8f245f0350abb8d5</anchor>
      <arglist>(std::string name, size_t n, int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getc_arr_alloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a08fb72a2578cb87bcb1a1cb3675aeaab</anchor>
      <arglist>(std::string name, size_t &amp;n, char *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_arr_alloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ad1d29fc859b760de43076437a87468fa</anchor>
      <arglist>(std::string name, size_t &amp;n, double *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getf_arr_alloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ad57bfb0f4c7aed9181beb79cc50b2375</anchor>
      <arglist>(std::string name, size_t &amp;n, float *f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_arr_alloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a15def0715d81b9b06d0df7749c726282</anchor>
      <arglist>(std::string name, size_t &amp;n, int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setc_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7c836fafeb4b915392996bef4740be69</anchor>
      <arglist>(std::string name, size_t n, const char *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a8b6ca87e5b8e520964312a32b7fc899c</anchor>
      <arglist>(std::string name, size_t n, const double *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setf_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a5942696ee42f0e61b5246750fd4431bc</anchor>
      <arglist>(std::string name, size_t n, const float *f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a3920832cbeb535a0a0040d2997887544</anchor>
      <arglist>(std::string name, size_t n, const int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_szt_arr</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a1077ed5d3531a4daffa6bb1a39f65031</anchor>
      <arglist>(std::string name, size_t n, const size_t *u)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setc_arr_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ab12374f6f5e7cffe9a4a652fe7ea1863</anchor>
      <arglist>(std::string name, size_t n, const char *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setd_arr_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a4b39f108868a6549242ad6ea94063815</anchor>
      <arglist>(std::string name, size_t n, const double *c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setf_arr_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a982adf910fb27ae6cc5ac61ec57065d7</anchor>
      <arglist>(std::string name, size_t n, const float *f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>seti_arr_fixed</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a8a793e5d2ffdf2c195e212bc2d363cab</anchor>
      <arglist>(std::string name, size_t n, const int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getc_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a6651c684f57e93e3d918701cfd66df34</anchor>
      <arglist>(std::string name, char def, char &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a6b86c935ed2a814408979969bba9a484</anchor>
      <arglist>(std::string name, double def, double &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getf_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7469ed2c91495140b7f932758898e412</anchor>
      <arglist>(std::string name, float def, float &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ae9f7a8e932fe237d89212ea31a2089be</anchor>
      <arglist>(std::string name, int def, int &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_szt_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a7aa4963a69c2b589e2fdcb4f32812b3b</anchor>
      <arglist>(std::string name, size_t def, size_t &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gets_def</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aeb42c52a4cac1ff259116eed5c347106</anchor>
      <arglist>(std::string name, std::string def, std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_vec_prealloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a0e741b925b70a41f36fb53e9c8d1bc5f</anchor>
      <arglist>(std::string name, size_t n, double *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_vec_prealloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a84f3a35e4db03c856ed076c4effb47f7</anchor>
      <arglist>(std::string name, size_t n, int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getd_mat_prealloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>ac9a16ea8b36ed1072dd2453c7dd5ab2e</anchor>
      <arglist>(std::string name, size_t n, size_t m, double *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geti_mat_prealloc</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a249ccbdeeba627c3100c7821d8568e10</anchor>
      <arglist>(std::string name, size_t n, size_t m, int *i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>find_group_by_type</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>a77d127c8a7413c72774445090915d65f</anchor>
      <arglist>(std::string type, std::string &amp;group_name, int verbose=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>find_group_by_name</name>
      <anchorfile>classo2scl__hdf_1_1hdf__file.html</anchorfile>
      <anchor>aad5830d9137b8daa7117cb78fd3aeb40</anchor>
      <arglist>(std::string name, std::string &amp;type, int verbose=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_hcubature::heap</name>
    <filename>classo2scl_1_1inte__hcubature_1_1heap.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1heap.html</anchorfile>
      <anchor>a7820f79d8ab9ed6517d073f25715c8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nalloc</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1heap.html</anchorfile>
      <anchor>a86fe0dcf4015388857ea7465875f4604</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; heap_item &gt;</type>
      <name>items</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1heap.html</anchorfile>
      <anchor>a3611d8bf6d25924d47ed125196c4b083</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>fdim</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1heap.html</anchorfile>
      <anchor>ac1dffd1f7648d869863025eead07b849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; esterr &gt;</type>
      <name>ee</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1heap.html</anchorfile>
      <anchor>a66590e50940707cd2aa7c26fdbacdd22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::hist</name>
    <filename>classo2scl_1_1hist.html</filename>
    <member kind="function">
      <type></type>
      <name>hist</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a177db1586b0e1b65e2537dd5ac6b74cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hist</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ad8250ffecfb93dd43fa79c76fbfbe92b</anchor>
      <arglist>(const hist &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>hist &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aba65802c3da88a8ec579cd81d63273d9</anchor>
      <arglist>(const hist &amp;h)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hist</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ab94c373acc8895719cb6254eb6db8e81</anchor>
      <arglist>(size_t nv, const vec_t &amp;v, size_t n_bins)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hist</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a75229ef6a29ffb772b7092d5d6544bbe</anchor>
      <arglist>(size_t nv, const vec_t &amp;v, const vec2_t &amp;v2, size_t n_bins)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hist</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a7733067fd32c97dbafd165111984fb71</anchor>
      <arglist>(const vec_t &amp;v, size_t n_bins)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hist</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a85696d2b314cbbeeb2e66c23cd85d108</anchor>
      <arglist>(const vec_t &amp;v, const vec2_t &amp;v2, size_t n_bins)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a0bc8daa9920aab8f6038b104a3f40208</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bin_edges</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a124a37f32b9851879c1341da780f1746</anchor>
      <arglist>(uniform_grid&lt; double &gt; g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bin_edges</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>abb132764505fba52e6746cb3bbbb759f</anchor>
      <arglist>(size_t n, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>acc09a84baa59cec0ca2ab571e997e125</anchor>
      <arglist>(double x, double val=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a5ae303e574cf29ea207d58d4f25bcce7</anchor>
      <arglist>(size_t i, double val=1.0)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_wgt_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a5bb641aba37a790ba1097337fe9404b3</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_wgt_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>adf02e0118149254f67cc2d62848eb302</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_wgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ace5e66bbfd1452c5d731b8ddf49cb12b</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_wgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a47c87f7c16140c2a82f054370d5feb10</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wgt_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ac67c2c2ad5443d07934c4fc22dfecd3d</anchor>
      <arglist>(size_t i, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a31922b0b184c05c81eaf0afd0f81ff16</anchor>
      <arglist>(double x, double val)</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_wgts</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a4528769e661b88171d5534c8eeb886f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aa1f471bddb578a3f28b0e7194f321def</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a20b28321b6fb39bbc75f2008438c5e9c</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_bin_index</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a98417b0205cfa5464dbfb4a43bf40b4b</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_bin_low_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a634d17ef7a9b6949b5e00e3c03eafc45</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_bin_low_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ac576c37ccb377900ab38a90127a81ba5</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_bin_high_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aeda95415f9884fbf999aa2fbc03f7905</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_bin_high_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ad63b7dd2fbcc3bbf4950a56e3588bc83</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_bin_low</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ac05eb37c3bfb96e5c936e77c02eb26ad</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_bin_low</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ab8faa3e7094a458b6610be20046d5c96</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_bin_high</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a96844165150edaf98c37b1d58bcf25ce</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_bin_high</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ae3fc6e6f2f117ba7dec13af6c7ca5631</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_bins</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a555a54fa68ed85b7976bffc986f7f77d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_max_wgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a79db4e30f4f3c8b5e6886152c86e7fe5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_max_index</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a4695585eb6db9105b60c1569cb985846</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_max_rep</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ad26f9df7e4cf4d700b1e57adac08aa7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_min_wgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a482e18312cf1f42b55fadcd1328500fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_min_index</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a66ffcd0f4db7a189c28f680994f2979c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_min_rep</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ad563ea8349a11c8e6e7a8ab3262058f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_wgts</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a7a5226be6813ee7e008ffaeebdd4fc13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a4e562708b334ce9fecf9c2a645b2f44a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reps</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a5eacb0fb05d850fa184f399b6c40fb95</anchor>
      <arglist>(size_t n, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rep_mode</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a481543dbf81b98cf800e822c0d90a19c</anchor>
      <arglist>(size_t mode)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_rep_mode</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a30f199bd25c836f7b4cec1b3c35ef262</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_rep_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>adb7c3152ee3ca4f24f90daa89e810ea9</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_rep</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a93cf48d8881bd05d307dafc6eda2c09a</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_rep_vec</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aa8dd516afb4da71942dbb0c82c87fd51</anchor>
      <arglist>(resize_vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a58c4a175a78fe539ada112eaacb36555</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aba8c4819ebed8832915bc3cf9d2e1f1c</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a144333fb55a56da06c5c823bf8cf9685</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>adece08308273de0532abb87801b50d79</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a0451ae7697e385d9a4d291c13ee4a520</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interp_type</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a09ccaaa91c6aef30318cb703ad565a07</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sum_wgts</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ae86bfb4e56fdf11a3bc314db2d398ace</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_wgts</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aa9e2138260666f8a9309811507897ae1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_reps</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a97d00a864b4706bd2d4fef1f689fe84a</anchor>
      <arglist>(vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap_reps</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>afc8e52a478becfef959418681963f297</anchor>
      <arglist>(ubvector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ac076401d809a8bb7821b3f2d5627e435</anchor>
      <arglist>(double new_sum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>is_valid</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a6975d2c1a39012cc5692fe8a42464707</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_to_table</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ad2179cf1bea1f7fa9b28d8f38345ff5e</anchor>
      <arglist>(table&lt;&gt; &amp;t, std::string reps, std::string lower_edges, std::string upper_edges, std::string weights)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>extend_rhs</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a6ccc3cc755faea043061ad7531ccb2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>extend_lhs</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a9a54ec0a174d85533b1b3bec1f358114</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>rmode_avg</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ae3570e74b08c7475d04f4bcde2cf0d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>rmode_user</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aed5783692256ce9dd235d26bfdb146df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>rmode_low</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a4d9b694352a2f88f67d23e724d1e1159</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>rmode_high</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a10e7d8f2b2c182c291f82a0d7d2de294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>rmode_gmean</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a6885ffb86f779ebbc9473f1fa1bcd346</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>interp_vec&lt; ubvector &gt;</type>
      <name>interp_t</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ae18a94aeb30f95ed515eaa799d983cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_reps_auto</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a160088cfc1c0f6f4613208ab2043025d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a053a886613cb587383290c150305ce24</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>ubin</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>af28b974e29c082efe23152be9e7f2258</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>uwgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a20d55c819ed87f7bd4dfef48941af88a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>urep</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a5fc8ef9e59588e91c0192549b8140e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>user_rep</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a0346f2a022779e0c1ad7cd3aa4bbe671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>hsize</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a0235793174c7444fce19cb41f1962022</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>rmode</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a00b2dd383579606b3c1d998f27712897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>itype</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a110175ba1f45e743a81ae8fd8704cbf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bin_edges</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a124a37f32b9851879c1341da780f1746</anchor>
      <arglist>(uniform_grid&lt; double &gt; g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bin_edges</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>abb132764505fba52e6746cb3bbbb759f</anchor>
      <arglist>(size_t n, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>acc09a84baa59cec0ca2ab571e997e125</anchor>
      <arglist>(double x, double val=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a5ae303e574cf29ea207d58d4f25bcce7</anchor>
      <arglist>(size_t i, double val=1.0)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_wgt_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a5bb641aba37a790ba1097337fe9404b3</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_wgt_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>adf02e0118149254f67cc2d62848eb302</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_wgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ace5e66bbfd1452c5d731b8ddf49cb12b</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_wgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a47c87f7c16140c2a82f054370d5feb10</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wgt_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ac67c2c2ad5443d07934c4fc22dfecd3d</anchor>
      <arglist>(size_t i, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a31922b0b184c05c81eaf0afd0f81ff16</anchor>
      <arglist>(double x, double val)</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_wgts</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a4528769e661b88171d5534c8eeb886f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aa1f471bddb578a3f28b0e7194f321def</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a20b28321b6fb39bbc75f2008438c5e9c</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_bin_index</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a98417b0205cfa5464dbfb4a43bf40b4b</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_bin_low_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a634d17ef7a9b6949b5e00e3c03eafc45</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_bin_low_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ac576c37ccb377900ab38a90127a81ba5</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_bin_high_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aeda95415f9884fbf999aa2fbc03f7905</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_bin_high_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ad63b7dd2fbcc3bbf4950a56e3588bc83</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_bin_low</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ac05eb37c3bfb96e5c936e77c02eb26ad</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_bin_low</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ab8faa3e7094a458b6610be20046d5c96</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_bin_high</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a96844165150edaf98c37b1d58bcf25ce</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_bin_high</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ae3fc6e6f2f117ba7dec13af6c7ca5631</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_bins</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a555a54fa68ed85b7976bffc986f7f77d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_max_wgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a79db4e30f4f3c8b5e6886152c86e7fe5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_max_index</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a4695585eb6db9105b60c1569cb985846</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_max_rep</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ad26f9df7e4cf4d700b1e57adac08aa7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_min_wgt</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a482e18312cf1f42b55fadcd1328500fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_min_index</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a66ffcd0f4db7a189c28f680994f2979c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_min_rep</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ad563ea8349a11c8e6e7a8ab3262058f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_wgts</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a7a5226be6813ee7e008ffaeebdd4fc13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a4e562708b334ce9fecf9c2a645b2f44a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>rmode_avg</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ae3570e74b08c7475d04f4bcde2cf0d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>rmode_user</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aed5783692256ce9dd235d26bfdb146df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>rmode_low</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a4d9b694352a2f88f67d23e724d1e1159</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>rmode_high</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a10e7d8f2b2c182c291f82a0d7d2de294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>rmode_gmean</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a6885ffb86f779ebbc9473f1fa1bcd346</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reps</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a5eacb0fb05d850fa184f399b6c40fb95</anchor>
      <arglist>(size_t n, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rep_mode</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a481543dbf81b98cf800e822c0d90a19c</anchor>
      <arglist>(size_t mode)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_rep_mode</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a30f199bd25c836f7b4cec1b3c35ef262</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_rep_i</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>adb7c3152ee3ca4f24f90daa89e810ea9</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_rep</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a93cf48d8881bd05d307dafc6eda2c09a</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_rep_vec</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aa8dd516afb4da71942dbb0c82c87fd51</anchor>
      <arglist>(resize_vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a58c4a175a78fe539ada112eaacb36555</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aba8c4819ebed8832915bc3cf9d2e1f1c</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a144333fb55a56da06c5c823bf8cf9685</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>adece08308273de0532abb87801b50d79</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a0451ae7697e385d9a4d291c13ee4a520</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interp_type</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a09ccaaa91c6aef30318cb703ad565a07</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sum_wgts</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ae86bfb4e56fdf11a3bc314db2d398ace</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_wgts</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>aa9e2138260666f8a9309811507897ae1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_reps</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a97d00a864b4706bd2d4fef1f689fe84a</anchor>
      <arglist>(vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap_reps</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>afc8e52a478becfef959418681963f297</anchor>
      <arglist>(ubvector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ac076401d809a8bb7821b3f2d5627e435</anchor>
      <arglist>(double new_sum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>is_valid</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>a6975d2c1a39012cc5692fe8a42464707</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_to_table</name>
      <anchorfile>classo2scl_1_1hist.html</anchorfile>
      <anchor>ad2179cf1bea1f7fa9b28d8f38345ff5e</anchor>
      <arglist>(table&lt;&gt; &amp;t, std::string reps, std::string lower_edges, std::string upper_edges, std::string weights)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::hist_2d</name>
    <filename>classo2scl_1_1hist__2d.html</filename>
    <member kind="function">
      <type></type>
      <name>hist_2d</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a535967452883580c480365deffc0141e</anchor>
      <arglist>(const hist_2d &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>hist_2d &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>acb4454613ffbc0a903e1c77ae657605c</anchor>
      <arglist>(const hist_2d &amp;h)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hist_2d</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a7af8bfbe012c6ab26ec5a1fad47e4883</anchor>
      <arglist>(size_t nv, const vec_t &amp;v, const vec2_t &amp;v2, size_t n_bins_x, size_t n_bins_y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hist_2d</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a85f89d6651665b4f137663b66a5992b4</anchor>
      <arglist>(size_t nv, const vec_t &amp;v, const vec2_t &amp;v2, const vec3_t &amp;v3, size_t n_bins_x, size_t n_bins_y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hist_2d</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ad3a15b35f500097fae15ec37d36ae750</anchor>
      <arglist>(const vec_t &amp;v, const vec2_t &amp;v2, size_t n_bins_x, size_t n_bins_y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hist_2d</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ae0f6ac76b30776327610cdf89b8dfaa0</anchor>
      <arglist>(const vec_t &amp;v, const vec2_t &amp;v2, const vec3_t &amp;v3, size_t n_bins_x, size_t n_bins_y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sum_wgts</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a2087d794752fc66721aed8d918650b14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_wgts</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a06b4dbd3beea631019bd94ade03f4c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>is_valid</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>af9fd2983d423bbe8784cccc56a008c4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_to_table</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>acec2d34a23724414c4ef894fd7662db6</anchor>
      <arglist>(table3d &amp;t, std::string xreps_name, std::string yreps_name, std::string weights)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bin_edges</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ad883f7571ab7950546b5f3b717774c2b</anchor>
      <arglist>(uniform_grid&lt; double &gt; gx, uniform_grid&lt; double &gt; gy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bin_edges</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a665327653f13b3888a6fa78110eabad3</anchor>
      <arglist>(size_t nx, vec_t &amp;vx, size_t ny, vec_t &amp;vy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a8213863a32122375dc272edc2cd8c313</anchor>
      <arglist>(size_t i, size_t j, double val=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a8d9ad362d3295677d65ea35bcaaf8d44</anchor>
      <arglist>(double x, double y, double val=1.0)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_wgt_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a0c67ae360b959a9842432d89a68c030a</anchor>
      <arglist>(size_t i, size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_wgt</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ab907ab0e469c3a69ace1c84857cb3732</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_wgt_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aca970815f7f7e8350490a367167286ed</anchor>
      <arglist>(size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_wgt</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a1cdfefbcd93aba39936231fdd22af1b9</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wgt_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a128007c6ea5477adc434a2f4cb96797f</anchor>
      <arglist>(size_t i, size_t j, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wgt</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a8ee18055f0055d0be818e34393e4761b</anchor>
      <arglist>(double x, double y, double val)</arglist>
    </member>
    <member kind="function">
      <type>const ubmatrix &amp;</type>
      <name>get_wgts</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a2217005e215af99601ef226940cd253b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ubmatrix &amp;</type>
      <name>get_wgts</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a9d25e174f489d75dd310f4394cadcad8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_wgts</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a5a24e5bb1c47d91917d7a3a2276c349c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>afaf32516ca69ce710cdd1c2e5c23768d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_bin_indices</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>af192b3b1e04b04958a8f1101d2621723</anchor>
      <arglist>(double x, double y, size_t &amp;i, size_t &amp;j) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_x_bin_index</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ada6f85743c5cec16651f80029a450bf6</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_y_bin_index</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>af7a009b02201b3384c87369e465162ee</anchor>
      <arglist>(double y) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_x_low_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a79fbb8226c672277c0bf7575222d5d74</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_x_low_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a2d2317a115c0647e7cf82a6f6015d866</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_x_high_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a5be5e8e9b04e2aa241ec7f28431eca67</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_x_high_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>afe6c317462a17fd610369f640793ec3c</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_y_low_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a98e4856d4f4227181a2c24273f6ba0c7</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_y_low_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>abe01f7b0c574ab6c2769611ee4f0cdca</anchor>
      <arglist>(size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_y_high_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a5cb38cec6650dfb7c38a60f8226433dc</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_y_high_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a0d04f6eeeb7b6ab1126547f1e82a0a53</anchor>
      <arglist>(size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reps</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>abbeb96a2369b59995a0e97b432ab5a9f</anchor>
      <arglist>(size_t nx, vec_t &amp;vx, size_t ny, vec_t &amp;vy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x_reps</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a0d86d66a1be901dc4bb36dab04e06028</anchor>
      <arglist>(size_t nx, vec_t &amp;vx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_y_reps</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a22e066d43a4cb38d593a06ebd774d30b</anchor>
      <arglist>(size_t ny, vec_t &amp;vy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rep_mode</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>afcf63137435ff957f375b87d5b1abe61</anchor>
      <arglist>(size_t x_mode, size_t y_mode)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_x_rep_mode</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>abf98bca7c1eb0537771dae43e10339ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_y_rep_mode</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ace50a634f2f1c94b65d194f0efec83e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_x_bins</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a8974e36b121416a7193272501e353da7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_y_bins</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a49e2b136c019f42c49431995f0f52d0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size_x</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a2016f3e33b6fdc763d570981226605a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size_y</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aa4f82a05aeeda058052141aabc57e742</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_user_reps_x</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a4e6cbde9c332dc369c01d994ce2dceba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_user_reps_y</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aac4940a15aadcc657b261243c3761266</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_x_rep_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>af127f83b766f80ce29a541dab577972c</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_y_rep_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aa1dc42216d17824214a44d8b497b3b1c</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>extend_rhs</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aeef7e39e09cf1deb862e59c38d6f1178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>extend_lhs</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ada066970a223212f10401063e7bf210b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a4c3b1b260ff9c3655c0fa51b227400aa</anchor>
      <arglist>(size_t nx, size_t ny)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_reps_auto</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>abb148d6c8c07f70ec6262abfe6c745e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>xa</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aae38247914825e76bacfc614a883f2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>ya</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a7267177b58b0bab96c4d441e7201bc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix</type>
      <name>wgt</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>abc8fc753a7d3890e28dba5b4f1228148</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>xrep</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a05c53422b26b4b5c20b5e7486d2e2ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>yrep</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ae4bc9bcbb600785009eb37b7a3490ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>user_xrep</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a8920b034bb628403f10c1174127ab5bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>user_yrep</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aa769bc76fb1f2c753121e0acdc1e5004</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>hsize_x</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a46076bf6a96aa1f81978e412388a1d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>hsize_y</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a2c2c91df9d38ac2973c192437a9ffdaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>xrmode</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a8a32e8230d45b48e6f578b8db2551b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>yrmode</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>abe3a15384d6e0a91e29c0b7a8a8b76a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bin_edges</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ad883f7571ab7950546b5f3b717774c2b</anchor>
      <arglist>(uniform_grid&lt; double &gt; gx, uniform_grid&lt; double &gt; gy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bin_edges</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a665327653f13b3888a6fa78110eabad3</anchor>
      <arglist>(size_t nx, vec_t &amp;vx, size_t ny, vec_t &amp;vy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a8213863a32122375dc272edc2cd8c313</anchor>
      <arglist>(size_t i, size_t j, double val=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a8d9ad362d3295677d65ea35bcaaf8d44</anchor>
      <arglist>(double x, double y, double val=1.0)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_wgt_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a0c67ae360b959a9842432d89a68c030a</anchor>
      <arglist>(size_t i, size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_wgt</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ab907ab0e469c3a69ace1c84857cb3732</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_wgt_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aca970815f7f7e8350490a367167286ed</anchor>
      <arglist>(size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_wgt</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a1cdfefbcd93aba39936231fdd22af1b9</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wgt_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a128007c6ea5477adc434a2f4cb96797f</anchor>
      <arglist>(size_t i, size_t j, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wgt</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a8ee18055f0055d0be818e34393e4761b</anchor>
      <arglist>(double x, double y, double val)</arglist>
    </member>
    <member kind="function">
      <type>const ubmatrix &amp;</type>
      <name>get_wgts</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a2217005e215af99601ef226940cd253b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ubmatrix &amp;</type>
      <name>get_wgts</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a9d25e174f489d75dd310f4394cadcad8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_wgts</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a5a24e5bb1c47d91917d7a3a2276c349c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>afaf32516ca69ce710cdd1c2e5c23768d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_bin_indices</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>af192b3b1e04b04958a8f1101d2621723</anchor>
      <arglist>(double x, double y, size_t &amp;i, size_t &amp;j) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_x_bin_index</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ada6f85743c5cec16651f80029a450bf6</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_y_bin_index</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>af7a009b02201b3384c87369e465162ee</anchor>
      <arglist>(double y) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_x_low_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a79fbb8226c672277c0bf7575222d5d74</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_x_low_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a2d2317a115c0647e7cf82a6f6015d866</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_x_high_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a5be5e8e9b04e2aa241ec7f28431eca67</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_x_high_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>afe6c317462a17fd610369f640793ec3c</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_y_low_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a98e4856d4f4227181a2c24273f6ba0c7</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_y_low_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>abe01f7b0c574ab6c2769611ee4f0cdca</anchor>
      <arglist>(size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_y_high_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a5cb38cec6650dfb7c38a60f8226433dc</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_y_high_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a0d04f6eeeb7b6ab1126547f1e82a0a53</anchor>
      <arglist>(size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reps</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>abbeb96a2369b59995a0e97b432ab5a9f</anchor>
      <arglist>(size_t nx, vec_t &amp;vx, size_t ny, vec_t &amp;vy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x_reps</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a0d86d66a1be901dc4bb36dab04e06028</anchor>
      <arglist>(size_t nx, vec_t &amp;vx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_y_reps</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a22e066d43a4cb38d593a06ebd774d30b</anchor>
      <arglist>(size_t ny, vec_t &amp;vy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rep_mode</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>afcf63137435ff957f375b87d5b1abe61</anchor>
      <arglist>(size_t x_mode, size_t y_mode)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_x_rep_mode</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>abf98bca7c1eb0537771dae43e10339ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_y_rep_mode</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>ace50a634f2f1c94b65d194f0efec83e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_x_bins</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a8974e36b121416a7193272501e353da7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_y_bins</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a49e2b136c019f42c49431995f0f52d0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size_x</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a2016f3e33b6fdc763d570981226605a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size_y</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aa4f82a05aeeda058052141aabc57e742</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_user_reps_x</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>a4e6cbde9c332dc369c01d994ce2dceba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_user_reps_y</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aac4940a15aadcc657b261243c3761266</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_x_rep_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>af127f83b766f80ce29a541dab577972c</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_y_rep_i</name>
      <anchorfile>classo2scl_1_1hist__2d.html</anchorfile>
      <anchor>aa1dc42216d17824214a44d8b497b3b1c</anchor>
      <arglist>(size_t j)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_hcubature::hypercube</name>
    <filename>classo2scl_1_1inte__hcubature_1_1hypercube.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1hypercube.html</anchorfile>
      <anchor>aba6cfad8edbc0a64fd4fe79f5927e187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>data</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1hypercube.html</anchorfile>
      <anchor>abf3df53ef9219173d57b42d5f74918cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>vol</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1hypercube.html</anchorfile>
      <anchor>ae3b97de61abe83c660ed57f85d7b26d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte</name>
    <filename>classo2scl_1_1inte.html</filename>
    <templarg>func_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1inte.html</anchorfile>
      <anchor>acbf51fe4d31eea68459da2500a2661de</anchor>
      <arglist>(func_t &amp;func, double a, double b)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte.html</anchorfile>
      <anchor>aa85bab7cf9efd0b18c2aa2ec51441849</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)=0</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_error</name>
      <anchorfile>classo2scl_1_1inte.html</anchorfile>
      <anchor>a0b48074e00d53883c68aa4570c75bead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte.html</anchorfile>
      <anchor>a42b10d8d8b90b7e6f3afaba44b49d493</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1inte.html</anchorfile>
      <anchor>a32326c0afcff10e588e5f2570f2a4f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>last_iter</name>
      <anchorfile>classo2scl_1_1inte.html</anchorfile>
      <anchor>a278971365aae03569adde72f5b50794a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1inte.html</anchorfile>
      <anchor>ae1e57fa2c2fd1a2f6578f200e161e6ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1inte.html</anchorfile>
      <anchor>a834ccf8204ea6955c6ce6b5b452546a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1inte.html</anchorfile>
      <anchor>ae6031b0dd2c27e9cc2e32a3cd9f7a147</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>interror</name>
      <anchorfile>classo2scl_1_1inte.html</anchorfile>
      <anchor>a8fa872702e0826b20e084f4b8b9606f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_adapt_cern</name>
    <filename>classo2scl_1_1inte__adapt__cern.html</filename>
    <templarg>func_t</templarg>
    <templarg>nsub</templarg>
    <base>o2scl::inte</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>a196406ecc5b118cd2beab0be22089223</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xlo</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>a0d4448c82a3cf065c983c597a739ca56</anchor>
      <arglist>[nsub]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xhi</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>aec9745433fa4046cbc0eedd1c037b980</anchor>
      <arglist>[nsub]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tval</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>a100f473a1fcbdbeddfc091907b285346</anchor>
      <arglist>[nsub]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>ters</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>adc8ed025eb66cd510b75e0d1f8492c4a</anchor>
      <arglist>[nsub]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>prev_subdiv</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>a152443c049fcb77c7d2afee7dd11a184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>inte&lt; func_t &gt; *</type>
      <name>it</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>af56e15076153efdd2773b9b778038267</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>a196406ecc5b118cd2beab0be22089223</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="variable">
      <type>inte_gauss56_cern&lt; func_t &gt;</type>
      <name>def_inte</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>a0d4018fbfe056b5b8e0c8cec827e830f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_inte</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>a0adc81b3bff4f2af3a69cd923ddfc4a4</anchor>
      <arglist>(inte&lt; func_t &gt; &amp;i)</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nsubdiv</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>ab4cdab547959d477c637bd53e0f83a9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nsubdivisions</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>aa1a56eeccc65d1a45134c103d419d8b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_ith_subdivision</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>abae046ec035bdd557dbe81706787c2b2</anchor>
      <arglist>(size_t i, double &amp;xlow, double &amp;xhigh, double &amp;value, double &amp;errsq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_subdivisions</name>
      <anchorfile>classo2scl_1_1inte__adapt__cern.html</anchorfile>
      <anchor>aa1ba0b31f63f92faedf74cdaa0e287b7</anchor>
      <arglist>(vec_t &amp;xlow, vec_t &amp;xhigh, vec_t &amp;value, vec_t &amp;errsq)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_cauchy_cern</name>
    <filename>classo2scl_1_1inte__cauchy__cern.html</filename>
    <templarg></templarg>
    <base>o2scl::inte</base>
    <member kind="function">
      <type>int</type>
      <name>set_inte</name>
      <anchorfile>classo2scl_1_1inte__cauchy__cern.html</anchorfile>
      <anchor>aaece7a75d6f5936393a291d445b07213</anchor>
      <arglist>(inte&lt; func_t &gt; &amp;i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__cauchy__cern.html</anchorfile>
      <anchor>a083c07a301a98cd4fc25f7b33e3a5eef</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>s</name>
      <anchorfile>classo2scl_1_1inte__cauchy__cern.html</anchorfile>
      <anchor>a447c75c00475fedd542efa5be3d3f555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>inte_gauss_cern&lt; func_t &gt;</type>
      <name>def_inte</name>
      <anchorfile>classo2scl_1_1inte__cauchy__cern.html</anchorfile>
      <anchor>a696ca11db1481336d90503bfa44012df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>inte&lt; func_t &gt; *</type>
      <name>it</name>
      <anchorfile>classo2scl_1_1inte__cauchy__cern.html</anchorfile>
      <anchor>a8ce689c88ad023de3c019b4b913a08e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_cheb_gsl</name>
    <filename>classo2scl_1_1inte__cheb__gsl.html</filename>
    <templarg></templarg>
    <base>o2scl::inte_transform_gsl</base>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>compute_moments</name>
      <anchorfile>classo2scl_1_1inte__cheb__gsl.html</anchorfile>
      <anchor>a5333c88605541beee9ea2c7044a2f3fb</anchor>
      <arglist>(double cc, double *moment)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>inte_cheb_series</name>
      <anchorfile>classo2scl_1_1inte__cheb__gsl.html</anchorfile>
      <anchor>ac50876dc44f1083cb988d502bfb276b5</anchor>
      <arglist>(func2_t &amp;f, double a, double b, double *cheb12, double *cheb24)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_cubature_base</name>
    <filename>classo2scl_1_1inte__cubature__base.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>error_norm</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_INDIVIDUAL</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0a4d51688ff1ec6d21cba9d881d6cc753f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_PAIRED</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0a73f44e63d417d299a81bb2f8082b2719</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_L2</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0a7b1e433e093e94043eb3c058cb39e4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_L1</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0aa61d54847841bd7bbea11e46aaaaf3aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_LINF</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0a1cc1d3b59566f5dedc5d5454b4542d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_INDIVIDUAL</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0a4d51688ff1ec6d21cba9d881d6cc753f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_PAIRED</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0a73f44e63d417d299a81bb2f8082b2719</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_L2</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0a7b1e433e093e94043eb3c058cb39e4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_L1</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0aa61d54847841bd7bbea11e46aaaaf3aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_LINF</name>
      <anchorfile>classo2scl_1_1inte__cubature__base.html</anchorfile>
      <anchor>acacc6c39024fc1b8bd2bc630ccdca7b0a1cc1d3b59566f5dedc5d5454b4542d3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_gauss56_cern</name>
    <filename>classo2scl_1_1inte__gauss56__cern.html</filename>
    <templarg>func_t</templarg>
    <base>o2scl::inte</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__gauss56__cern.html</anchorfile>
      <anchor>aa043cb68680a1919c300b3eb25db0785</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_gauss_cern</name>
    <filename>classo2scl_1_1inte__gauss__cern.html</filename>
    <templarg>func_t</templarg>
    <base>o2scl::inte</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__gauss__cern.html</anchorfile>
      <anchor>ad2dd71ebe9a9859898ce02310a746cdd</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_gen</name>
    <filename>classo2scl_1_1inte__gen.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>ginteg</name>
      <anchorfile>classo2scl_1_1inte__gen.html</anchorfile>
      <anchor>a2ea4ca7ce29062278603c95b306ef9fe</anchor>
      <arglist>(func_t &amp;func, size_t ndim, lfunc_t &amp;a, ufunc_t &amp;b)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ginteg_err</name>
      <anchorfile>classo2scl_1_1inte__gen.html</anchorfile>
      <anchor>a9b2d69bb10af59d8e7184bb9124f9680</anchor>
      <arglist>(func_t &amp;func, size_t ndim, lfunc_t &amp;a, ufunc_t &amp;b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_error</name>
      <anchorfile>classo2scl_1_1inte__gen.html</anchorfile>
      <anchor>a4fb04a9bf866198f1ea2836166022f66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte__gen.html</anchorfile>
      <anchor>a80afcab48fc0cd4486fe1c28cf0ad43a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1inte__gen.html</anchorfile>
      <anchor>ae3d1a2e201b73e49133fa9ddb809fba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1inte__gen.html</anchorfile>
      <anchor>af53fe44c2aaea2bb50350e86a69f8d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1inte__gen.html</anchorfile>
      <anchor>a67ef7b6671454f3f678a61fdfcb95f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>interror</name>
      <anchorfile>classo2scl_1_1inte__gen.html</anchorfile>
      <anchor>a83ec6c7a3b4c07efb370cd6a81d5dfeb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_gsl</name>
    <filename>classo2scl_1_1inte__gsl.html</filename>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>rescale_error</name>
      <anchorfile>classo2scl_1_1inte__gsl.html</anchorfile>
      <anchor>af9dd791dd219514fb0fe0f1d0beea928</anchor>
      <arglist>(double err, const double result_abs, const double result_asc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_hcubature</name>
    <filename>classo2scl_1_1inte__hcubature.html</filename>
    <templarg>func_t</templarg>
    <base>o2scl::inte_cubature_base</base>
    <class kind="class">o2scl::inte_hcubature::esterr</class>
    <class kind="class">o2scl::inte_hcubature::heap</class>
    <class kind="class">o2scl::inte_hcubature::hypercube</class>
    <class kind="class">o2scl::inte_hcubature::region</class>
    <class kind="class">o2scl::inte_hcubature::rule</class>
    <class kind="class">o2scl::inte_hcubature::rule75genzmalik</class>
    <member kind="function">
      <type>int</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a015801b82a057a1fe3e3b8454f74d394</anchor>
      <arglist>(size_t fdim, func_t &amp;f, size_t dim, const vec_t &amp;xmin, const vec_t &amp;xmax, size_t maxEval, double reqAbsError, double reqRelError, error_norm norm, vec_t &amp;val, vec_t &amp;err)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>use_parallel</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a6312fce000babe3897aeb36ca9390fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>errMax</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>aad3cf4211d540a854497fcfca0149052</anchor>
      <arglist>(const std::vector&lt; esterr &gt; &amp;ee)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>compute_vol</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a040550c83a48c03656e610af000c356b</anchor>
      <arglist>(const hypercube &amp;h)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>make_hypercube</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>aeecfd5eb566cea24eb9025cf59418a7d</anchor>
      <arglist>(size_t dim, const vec_t &amp;center, const vec_t &amp;halfwidth, hypercube &amp;h)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>make_hypercube2</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>ab6502ff51efe2ea1af09d898d7daee72</anchor>
      <arglist>(size_t dim, const std::vector&lt; double &gt; &amp;dat, hypercube &amp;h)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>make_hypercube_range</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>ae142549023f0126da8b86c5edca54e71</anchor>
      <arglist>(size_t dim, const vec_t &amp;xmin, const vec_t &amp;xmax, hypercube &amp;h)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>destroy_hypercube</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>ac4127994da935f5ab3af2506a4ceb9f8</anchor>
      <arglist>(hypercube &amp;h)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>make_region</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a286b1e53011fb4dbac234a57e2a00f18</anchor>
      <arglist>(const hypercube &amp;h, size_t fdim, region &amp;R)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>cut_region</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a276db65d65ec0642e5b9e5cb733f439c</anchor>
      <arglist>(region &amp;R, region &amp;R2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>alloc_rule_pts</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>af04735a4a63f4b9791680df45b50f148</anchor>
      <arglist>(rule &amp;r, size_t num_regions)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>make_rule</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>af6d46b7d75cd4fa8ad1d7d04bbf4c04f</anchor>
      <arglist>(size_t dim, size_t fdim, size_t num_points, rule &amp;r)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>eval_regions</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>ab44c60efd93aa8cd79a85474315de1b2</anchor>
      <arglist>(size_t nR, std::vector&lt; region &gt; &amp;R, func_t &amp;f, rule &amp;r)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>ls0</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>af0a4747d67a13943a40754bf40edc011</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>evalR_Rfs2</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a30457d86a0b3ff641f6562bcf2dc2803</anchor>
      <arglist>(ubvector &amp;pts, size_t pts_ix, size_t dim, std::vector&lt; double &gt; &amp;p, size_t p_ix, const std::vector&lt; double &gt; &amp;c, size_t c_ix, const std::vector&lt; double &gt; &amp;r, size_t r_ix)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>evalRR0_0fs2</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a8e6b2a15e89d40630b856b25d2b6c1d4</anchor>
      <arglist>(ubvector &amp;pts, size_t pts_ix, size_t dim, std::vector&lt; double &gt; &amp;p, size_t p_ix, const std::vector&lt; double &gt; &amp;c, size_t c_ix, const std::vector&lt; double &gt; &amp;r, size_t r_ix)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>evalR0_0fs4d2</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a9564ac85d2a99e16197e0c42ecb36403</anchor>
      <arglist>(ubvector &amp;pts, size_t pts_ix, size_t dim, std::vector&lt; double &gt; &amp;p, size_t p_ix, const std::vector&lt; double &gt; &amp;c, size_t c_ix, const std::vector&lt; double &gt; &amp;r1, size_t r1_ix, const std::vector&lt; double &gt; &amp;r2, size_t r2_ix)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>num0_0</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a2816ea5490cb1c1d21e1ad8d9a7333b3</anchor>
      <arglist>(size_t dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>numR0_0fs</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>ad3ebb45451bc72ce309848687e507067</anchor>
      <arglist>(size_t dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>numRR0_0fs</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a7c97f58ecf37323464a50e7118c14aad</anchor>
      <arglist>(size_t dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>numR_Rfs</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a3aa5dc624f72040de824a9c0f0a46738</anchor>
      <arglist>(size_t dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>rule75genzmalik_evalError</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>afcba63a9567734d64d4c9e5af47afdfa</anchor>
      <arglist>(rule &amp;runder, size_t fdim, func_t &amp;f, size_t nR, std::vector&lt; region &gt; &amp;R)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>make_rule75genzmalik</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a9a56bb50d2a97996188667276d85d481</anchor>
      <arglist>(size_t dim, size_t fdim, rule75genzmalik &amp;r)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>rule15gauss_evalError</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>aa46b06fa86d3677fa91f6c7d2fc3fca9</anchor>
      <arglist>(rule &amp;r, size_t fdim, func_t &amp;f, size_t nR, std::vector&lt; region &gt; &amp;R)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>make_rule15gauss</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>aaa7be90d50d80ba4445a5a7992681be7</anchor>
      <arglist>(size_t dim, size_t fdim, rule &amp;r)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>converged</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a1ca16676793139e19b03d98c1215d228</anchor>
      <arglist>(size_t fdim, const std::vector&lt; esterr &gt; &amp;ee, double reqAbsError, double reqRelError, error_norm norm)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>rulecubature</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a611e5c2e7b84e511bcb255bd1d49b9b2</anchor>
      <arglist>(rule &amp;r, size_t fdim, func_t &amp;f, const hypercube &amp;h, size_t maxEval, double reqAbsError, double reqRelError, error_norm norm, vec_t &amp;val, vec_t &amp;err, int parallel)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>cubature</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a4f0ecb1f3b769def3ecc9b28b64ccc1c</anchor>
      <arglist>(size_t fdim, func_t &amp;f, size_t dim, const vec_t &amp;xmin, const vec_t &amp;xmax, size_t maxEval, double reqAbsError, double reqRelError, error_norm norm, vec_t &amp;val, vec_t &amp;err, int parallel)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>region</type>
      <name>heap_item</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>ac10d3c434d11ac6d04e9753a339a1220</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>heap_resize</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a53fb9ad5a04a45dc5469b5493192b97a</anchor>
      <arglist>(heap &amp;h, size_t nalloc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>heap</type>
      <name>heap_alloc</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a7c21826534d35cbd694df469d1f7fbaa</anchor>
      <arglist>(size_t nalloc, size_t fdim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>heap_free</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a4fab2e5c945a6a902751df3a3df7e3bc</anchor>
      <arglist>(heap &amp;h)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>heap_push</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>ad4fb820bd456d69e940d358deee95052</anchor>
      <arglist>(heap &amp;h, heap_item &amp;hi)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>heap_push_many</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a2e3256a0a14d528401b1f47cca94c3e2</anchor>
      <arglist>(heap &amp;h, size_t ni, heap_item *hi)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>heap_item</type>
      <name>heap_pop</name>
      <anchorfile>classo2scl_1_1inte__hcubature.html</anchorfile>
      <anchor>a7c1f2fe3c9997a78510be50e72744d77</anchor>
      <arglist>(heap &amp;h)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_kronrod_gsl</name>
    <filename>classo2scl_1_1inte__kronrod__gsl.html</filename>
    <templarg></templarg>
    <base>o2scl::inte_gsl</base>
    <base>o2scl::inte</base>
    <member kind="function">
      <type>int</type>
      <name>get_rule</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>a71c726477cd87ed1ebf8c258c68aa4ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rule</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>a84851160b4f7cc6260e1d524a2f9d159</anchor>
      <arglist>(int rule)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_limit</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>aea7fb2aacc1cf5b3908176d19feafae2</anchor>
      <arglist>(size_t lim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gauss_kronrod_base</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>a448d1d747b2e85aceb733d7556d716bb</anchor>
      <arglist>(func2_t &amp;func, double a, double b, double *result, double *abserr, double *resabs, double *resasc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>gauss_kronrod</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>afe87fb1f3e34c3f6e0d4a493e55e52c0</anchor>
      <arglist>(func_t &amp;func, double a, double b, double *result, double *abserr, double *resabs, double *resasc)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>inte_workspace_gsl *</type>
      <name>w</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>a127db604b8bede84c1a72bc26d3d919c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>n_gk</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>a5b0386a70767974a28b0e9050e6cfa41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const double *</type>
      <name>x_gk</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>a7ccb99a6d326a5023fef8165b21bc890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const double *</type>
      <name>w_g</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>a29cfac086f8c200b3dc9ac174773caf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const double *</type>
      <name>w_gk</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>aad6b11f96581493799577d5b5d1eb46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>f_v1</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>aa529d8f4e75afdcc635c002df59c82c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>f_v2</name>
      <anchorfile>classo2scl_1_1inte__kronrod__gsl.html</anchorfile>
      <anchor>abdf18b6748315ba25b6981dea3e1c24c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_multi</name>
    <filename>classo2scl_1_1inte__multi.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minteg</name>
      <anchorfile>classo2scl_1_1inte__multi.html</anchorfile>
      <anchor>ab21073aae894e1b247c320d92b526244</anchor>
      <arglist>(func_t &amp;func, size_t ndim, const vec_t &amp;a, const vec_t &amp;b)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>minteg_err</name>
      <anchorfile>classo2scl_1_1inte__multi.html</anchorfile>
      <anchor>af9972c2cd4fa3dbc6cca3b577966f897</anchor>
      <arglist>(func_t &amp;func, size_t ndim, const vec_t &amp;a, const vec_t &amp;b, double &amp;res, double &amp;err)=0</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_error</name>
      <anchorfile>classo2scl_1_1inte__multi.html</anchorfile>
      <anchor>a6c056bc6a67690725227329acf70980b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte__multi.html</anchorfile>
      <anchor>ab5847ad1e7534ec9b7ba424f1e26fb75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1inte__multi.html</anchorfile>
      <anchor>a183aa04004786df0e8f54f41b6f423f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1inte__multi.html</anchorfile>
      <anchor>a1ee73f62cf7bd9cad77bd138693064f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1inte__multi.html</anchorfile>
      <anchor>a3a66e0af6c2087b77135e2547a8d1daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>interror</name>
      <anchorfile>classo2scl_1_1inte__multi.html</anchorfile>
      <anchor>adba7331ba19daefefb3f88f7424bffa3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_pcubature</name>
    <filename>classo2scl_1_1inte__pcubature.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::inte_cubature_base</base>
    <class kind="class">o2scl::inte_pcubature::cache</class>
    <member kind="function">
      <type>int</type>
      <name>integ_v_buf</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>aea802cf43cd20c4065ca1415b0efe048</anchor>
      <arglist>(size_t fdim, func_t &amp;f, size_t dim, const vec_t &amp;xmin, const vec_t &amp;xmax, size_t maxEval, double reqAbsError, double reqRelError, error_norm norm, std::vector&lt; size_t &gt; &amp;m, vec_t &amp;buf, size_t &amp;nbuf, size_t max_nbuf, vec_t &amp;val, vec_t &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>a4f1f17a6dbfc1e0b838c5deae152519b</anchor>
      <arglist>(size_t fdim, func_t &amp;f, size_t dim, const vec_t &amp;xmin, const vec_t &amp;xmax, size_t maxEval, double reqAbsError, double reqRelError, error_norm norm, vec_t &amp;val, vec_t &amp;err)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>DEFAULT_MAX_NBUF</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>a320f1abd8710596a2a6982cf7341d5ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>compute_cacheval</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>ac8e5d82f809b6c7f40f0b22e892ba9b7</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;m, size_t mi, vec_t &amp;val, size_t &amp;vali, size_t fdim, func_t &amp;f, size_t dim, size_t id, std::vector&lt; double &gt; &amp;p, const vec_t &amp;xmin, const vec_t &amp;xmax, vec_t &amp;buf, size_t nbuf, size_t &amp;ibuf)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>num_cacheval</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>ac9324581e4eded5fac9c61daf7fe33f0</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;m, size_t mi, size_t dim, size_t i_shift)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>add_cacheval</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>aeea2c652327ee53b2ae491cb776d91d8</anchor>
      <arglist>(std::vector&lt; cache &gt; &amp;vc, const std::vector&lt; size_t &gt; &amp;m, size_t mi, size_t fdim, func_t &amp;f, size_t dim, const vec_t &amp;xmin, const vec_t &amp;xmax, vec_t &amp;buf, size_t nbuf)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>a9c81b78b49dba3517ce17836dceb55ea</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;cm, size_t cmi, vec_t &amp;cval, const std::vector&lt; size_t &gt; &amp;m, size_t md, size_t fdim, size_t dim, size_t id, double weight, vec_t &amp;val, size_t voff2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>evals</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>aa48be788bb080fa8179f68a3aeec0f1b</anchor>
      <arglist>(std::vector&lt; cache &gt; &amp;vc, const std::vector&lt; size_t &gt; &amp;m, size_t md, size_t fdim, size_t dim, double V, vec_t &amp;val)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>eval_integral</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>a551443fbe24c7ee45f20d9a0814c77f4</anchor>
      <arglist>(std::vector&lt; cache &gt; &amp;vc, const std::vector&lt; size_t &gt; &amp;m, size_t fdim, size_t dim, double V, size_t &amp;mi, vec_t &amp;val, vec_t &amp;err, vec_t &amp;val1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>converged</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>a28ac8b526ee13b1ae3165b484a564c98</anchor>
      <arglist>(size_t fdim, const vec2_t &amp;vals, const vec2_t &amp;errs, double reqAbsError, double reqRelError, error_norm norm)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const size_t</type>
      <name>MAXDIM</name>
      <anchorfile>classo2scl_1_1inte__pcubature.html</anchorfile>
      <anchor>a3d8798f7be92bf5747936d701618e310</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qag_gsl</name>
    <filename>classo2scl_1_1inte__qag__gsl.html</filename>
    <templarg>func_t</templarg>
    <base>o2scl::inte_kronrod_gsl</base>
    <member kind="function">
      <type></type>
      <name>inte_qag_gsl</name>
      <anchorfile>classo2scl_1_1inte__qag__gsl.html</anchorfile>
      <anchor>a4c186c6f5bf079a97691e7413416ccc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qag__gsl.html</anchorfile>
      <anchor>a25eb005a6ae84db89aa5870fb1f997b1</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte__qag__gsl.html</anchorfile>
      <anchor>a69d983f9e1859828df3c906bbfe0da6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>qag</name>
      <anchorfile>classo2scl_1_1inte__qag__gsl.html</anchorfile>
      <anchor>ad99deebd93c3c19728a3b0e0989b09ee</anchor>
      <arglist>(func_t &amp;func, const double a, const double b, const double l_epsabs, const double l_epsrel, double *result, double *abserr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qagi_gsl</name>
    <filename>classo2scl_1_1inte__qagi__gsl.html</filename>
    <templarg>func_t</templarg>
    <base>o2scl::inte_transform_gsl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qagi__gsl.html</anchorfile>
      <anchor>a2fc093965de3846fea20e3a472136473</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>transform</name>
      <anchorfile>classo2scl_1_1inte__qagi__gsl.html</anchorfile>
      <anchor>a753d5524027539e3f608711e439365fb</anchor>
      <arglist>(double t, func_t &amp;func)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qagil_gsl</name>
    <filename>classo2scl_1_1inte__qagil__gsl.html</filename>
    <templarg>func_t</templarg>
    <base>o2scl::inte_transform_gsl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qagil__gsl.html</anchorfile>
      <anchor>a9a34cf1d5a9f95347ae6d046e02255e9</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>transform</name>
      <anchorfile>classo2scl_1_1inte__qagil__gsl.html</anchorfile>
      <anchor>a3760af4c52e78db93e6867b33a4956a9</anchor>
      <arglist>(double t, func_t &amp;func)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>upper_limit</name>
      <anchorfile>classo2scl_1_1inte__qagil__gsl.html</anchorfile>
      <anchor>af230a66478eab7b1272f76434a6204d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qagiu_gsl</name>
    <filename>classo2scl_1_1inte__qagiu__gsl.html</filename>
    <templarg>func_t</templarg>
    <base>o2scl::inte_transform_gsl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qagiu__gsl.html</anchorfile>
      <anchor>adbdbc4f735e8798f2f79eb71d06bca08</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>transform</name>
      <anchorfile>classo2scl_1_1inte__qagiu__gsl.html</anchorfile>
      <anchor>a1aad5ce9639dc68c450cb5408ca6b5ea</anchor>
      <arglist>(double t, func_t &amp;func)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lower_limit</name>
      <anchorfile>classo2scl_1_1inte__qagiu__gsl.html</anchorfile>
      <anchor>a5a84dc825ba82f97c7ec201e45fa19df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qags_gsl</name>
    <filename>classo2scl_1_1inte__qags__gsl.html</filename>
    <templarg></templarg>
    <base>o2scl::inte_singular_gsl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qags__gsl.html</anchorfile>
      <anchor>a723827e44bc3e87fd72152059b67ae5c</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qawc_gsl</name>
    <filename>classo2scl_1_1inte__qawc__gsl.html</filename>
    <templarg></templarg>
    <base>o2scl::inte_cheb_gsl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qawc__gsl.html</anchorfile>
      <anchor>ac0cdd1b48e0f5801931549d72b775684</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>s</name>
      <anchorfile>classo2scl_1_1inte__qawc__gsl.html</anchorfile>
      <anchor>a5c7d6e1a82bbf9bb2c86588f83b2eadd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>qawc</name>
      <anchorfile>classo2scl_1_1inte__qawc__gsl.html</anchorfile>
      <anchor>a22a1481ff64f68df728ff16746386837</anchor>
      <arglist>(func_t &amp;func, const double a, const double b, const double c, const double epsabs, const double epsrel, double *result, double *abserr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>qc25c</name>
      <anchorfile>classo2scl_1_1inte__qawc__gsl.html</anchorfile>
      <anchor>a30b2761eb06d5d1fa3700ca3839dc445</anchor>
      <arglist>(func_t &amp;func, double a, double b, double c, double *result, double *abserr, int *err_reliable)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>transform</name>
      <anchorfile>classo2scl_1_1inte__qawc__gsl.html</anchorfile>
      <anchor>a006e76534b40da05c3b7152f0343f6b3</anchor>
      <arglist>(double t, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte__qawc__gsl.html</anchorfile>
      <anchor>a3146a50da0e2d7dafa766da424ac24a7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qawf_gsl_cos</name>
    <filename>classo2scl_1_1inte__qawf__gsl__cos.html</filename>
    <templarg></templarg>
    <base>o2scl::inte_qawf_gsl_sin</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qawf__gsl__cos.html</anchorfile>
      <anchor>a232e03f6dbbc93a44ee492df75090a8c</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>transform</name>
      <anchorfile>classo2scl_1_1inte__qawf__gsl__cos.html</anchorfile>
      <anchor>adacc28db25eeb6dbe6850a4bb877eeea</anchor>
      <arglist>(double t, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte__qawf__gsl__cos.html</anchorfile>
      <anchor>a26f0f028de7e917d26af08c3bb0a188e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qawf_gsl_sin</name>
    <filename>classo2scl_1_1inte__qawf__gsl__sin.html</filename>
    <templarg></templarg>
    <base>o2scl::inte_qawo_gsl_sin</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qawf__gsl__sin.html</anchorfile>
      <anchor>a032dda2fc34f3040a252486d99fe64b4</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>qawf</name>
      <anchorfile>classo2scl_1_1inte__qawf__gsl__sin.html</anchorfile>
      <anchor>abfdd15bc0a25e24dd3330fd8ba29492a</anchor>
      <arglist>(func_t &amp;func, const double a, const double epsabs, double *result, double *abserr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>transform</name>
      <anchorfile>classo2scl_1_1inte__qawf__gsl__sin.html</anchorfile>
      <anchor>a409d6dced949a8ecaf24d319cae62dce</anchor>
      <arglist>(double t, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte__qawf__gsl__sin.html</anchorfile>
      <anchor>ad3c656872fb8e29748b530c427cc19fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>inte_workspace_gsl *</type>
      <name>cyclew</name>
      <anchorfile>classo2scl_1_1inte__qawf__gsl__sin.html</anchorfile>
      <anchor>ad668204eef4dbe36f8ff3cddfe0a60ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qawo_gsl_cos</name>
    <filename>classo2scl_1_1inte__qawo__gsl__cos.html</filename>
    <templarg></templarg>
    <base>o2scl::inte_qawo_gsl_sin</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__cos.html</anchorfile>
      <anchor>afc90013499b9eb9a4bc108eac7aa0bc1</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>transform</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__cos.html</anchorfile>
      <anchor>a6df9401ef86b85c8ede45565b857b5bb</anchor>
      <arglist>(double t, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__cos.html</anchorfile>
      <anchor>af17e003f2e35dea5b69821f914e3f347</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qawo_gsl_sin</name>
    <filename>classo2scl_1_1inte__qawo__gsl__sin.html</filename>
    <templarg></templarg>
    <base>o2scl::inte_cheb_gsl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__sin.html</anchorfile>
      <anchor>a407463f0fc47d01f776250e9fa8f3575</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>omega</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__sin.html</anchorfile>
      <anchor>a323c26179444d9367614944f4d6dc753</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_levels</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__sin.html</anchorfile>
      <anchor>aa34c3a163676dc71288ec6e735b0031a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>qawo</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__sin.html</anchorfile>
      <anchor>a4c0b33a7c717ff873923b8c8d2aa0723</anchor>
      <arglist>(func_t &amp;func, const double a, const double epsabs, const double epsrel, inte_workspace_gsl *loc_w, gsl_integration_qawo_table *wf, double *result, double *abserr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>qc25f</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__sin.html</anchorfile>
      <anchor>a73a8822b36692890da61c9c0930629dd</anchor>
      <arglist>(func_t &amp;func, double a, double b, gsl_integration_qawo_table *wf, size_t level, double *result, double *abserr, double *resabs, double *resasc)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>transform</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__sin.html</anchorfile>
      <anchor>a6f4212ccb5f320a6663f1a26576f2f67</anchor>
      <arglist>(double t, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__sin.html</anchorfile>
      <anchor>a2fe5cbe184a442b8d10b85cc9e0b4f61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_integration_qawo_table *</type>
      <name>otable</name>
      <anchorfile>classo2scl_1_1inte__qawo__gsl__sin.html</anchorfile>
      <anchor>ad9ee7d78a8028780723659c8680a8e61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qaws_gsl</name>
    <filename>classo2scl_1_1inte__qaws__gsl.html</filename>
    <templarg></templarg>
    <base>o2scl::inte_cheb_gsl</base>
    <member kind="function">
      <type></type>
      <name>inte_qaws_gsl</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>a1ddead921d9604be1e369ce590cd1764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_weight</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>afe8b5bc82099f2ede48a4b1164c74732</anchor>
      <arglist>(double u_alpha, double u_beta, int u_mu, int u_nu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_weight</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>ac0b3ace9dfb1ea6c5fd0aa4fefc5ae0f</anchor>
      <arglist>(double &amp;u_alpha, double &amp;u_beta, int &amp;u_mu, int &amp;u_nu)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>ae56929e000895a053ec926ded33b40f3</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;result, double &amp;abserr)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>ac0c0493df13a4356080901ece9377c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialise_qaws_table</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>a3b5b0e491f76c0fe63c22e38c1590593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>transform</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>a061e45920118c505de8eba9809c4567a</anchor>
      <arglist>(double t, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>qc25s</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>a019d691619922499f04316938b9e2663</anchor>
      <arglist>(func_t &amp;func, double a, double b, double a1, double b1, double &amp;result, double &amp;abserr, int &amp;err_reliable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>compute_result</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>a1b0b054ab9706d5715c19d177299621c</anchor>
      <arglist>(double *r, double *cheb12, double *cheb24, double &amp;result12, double &amp;result24)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fn_qaws_R</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>af246eabeff52e646b6fdf57e386a25a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fn_qaws_L</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>a0b0cfcf96a4ebc4e33dc0b9479aad1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>left_endpoint</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>a5f309b2d158d24ead9df5ae5df74a346</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>right_endpoint</name>
      <anchorfile>classo2scl_1_1inte__qaws__gsl.html</anchorfile>
      <anchor>a96d4d5c38c2447473b8033f3afd2d48c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_qng_gsl</name>
    <filename>classo2scl_1_1inte__qng__gsl.html</filename>
    <templarg></templarg>
    <base>o2scl::inte</base>
    <base>o2scl::inte_gsl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>integ_err</name>
      <anchorfile>classo2scl_1_1inte__qng__gsl.html</anchorfile>
      <anchor>ab89e42aeb59b51f89f54f3592f1863c1</anchor>
      <arglist>(func_t &amp;func, double a, double b, double &amp;res, double &amp;err2)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1inte__qng__gsl.html</anchorfile>
      <anchor>af3eae1ae2a1d58a19bfcc1ed0ab8f3f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>feval</name>
      <anchorfile>classo2scl_1_1inte__qng__gsl.html</anchorfile>
      <anchor>a7999171a474030142675d521d026fd49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>min_rel_tol</name>
      <anchorfile>classo2scl_1_1inte__qng__gsl.html</anchorfile>
      <anchor>a7b2a2340b426b9ffb063b2b2538329f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_singular_gsl</name>
    <filename>classo2scl_1_1inte__singular__gsl.html</filename>
    <templarg>func_t</templarg>
    <base>o2scl::inte_kronrod_gsl</base>
    <class kind="struct">o2scl::inte_singular_gsl::extrapolation_table</class>
    <member kind="typedef">
      <type>struct o2scl::inte_singular_gsl::extrapolation_table</type>
      <name>extrap_table</name>
      <anchorfile>classo2scl_1_1inte__singular__gsl.html</anchorfile>
      <anchor>a484ba8a3da74e558caa8a8afd2830bc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialise_table</name>
      <anchorfile>classo2scl_1_1inte__singular__gsl.html</anchorfile>
      <anchor>a125721a158a32d245b5902bfce582689</anchor>
      <arglist>(struct extrapolation_table *table)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>append_table</name>
      <anchorfile>classo2scl_1_1inte__singular__gsl.html</anchorfile>
      <anchor>adebb185a08d70e15c1ee40fa8a418d54</anchor>
      <arglist>(struct extrapolation_table *table, double y)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>test_positivity</name>
      <anchorfile>classo2scl_1_1inte__singular__gsl.html</anchorfile>
      <anchor>a90113339d979525ba02f7351727d9cc8</anchor>
      <arglist>(double result, double resabs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>qelg</name>
      <anchorfile>classo2scl_1_1inte__singular__gsl.html</anchorfile>
      <anchor>aaf3b4a484071589b47ec8ab44fe76e6a</anchor>
      <arglist>(struct extrapolation_table *table, double *result, double *abserr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>large_interval</name>
      <anchorfile>classo2scl_1_1inte__singular__gsl.html</anchorfile>
      <anchor>a7a9b66eaa2e5ce19767af9c122f8f14d</anchor>
      <arglist>(inte_workspace_gsl *workspace)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset_nrmax</name>
      <anchorfile>classo2scl_1_1inte__singular__gsl.html</anchorfile>
      <anchor>a5828840ac0e7f1df44c17272008bcce2</anchor>
      <arglist>(inte_workspace_gsl *workspace)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>increase_nrmax</name>
      <anchorfile>classo2scl_1_1inte__singular__gsl.html</anchorfile>
      <anchor>a340f8cbef98ab5c61033248ed5842a57</anchor>
      <arglist>(inte_workspace_gsl *workspace)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>qags</name>
      <anchorfile>classo2scl_1_1inte__singular__gsl.html</anchorfile>
      <anchor>a1558ae69fdef27ccc86eedf413827e64</anchor>
      <arglist>(func_t &amp;func, const double a, const double b, const double l_epsabs, const double l_epsrel, double *result, double *abserr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_transform_gsl</name>
    <filename>classo2scl_1_1inte__transform__gsl.html</filename>
    <templarg></templarg>
    <base>o2scl::inte_singular_gsl</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>transform</name>
      <anchorfile>classo2scl_1_1inte__transform__gsl.html</anchorfile>
      <anchor>abf9c54a437b711b88b3d1debd43a376c</anchor>
      <arglist>(double t, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>gauss_kronrod</name>
      <anchorfile>classo2scl_1_1inte__transform__gsl.html</anchorfile>
      <anchor>aff22fd82b52a475703911d24bbbafb06</anchor>
      <arglist>(func_t &amp;func, double a, double b, double *result, double *abserr, double *resabs, double *resasc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_workspace_gsl</name>
    <filename>classo2scl_1_1inte__workspace__gsl.html</filename>
    <member kind="function">
      <type>int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>a03eb925268390abdd1164fd0197d4633</anchor>
      <arglist>(size_t sz)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>a169ec1785da2a70385bddddec26c94dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>initialise</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>ae3b303fef4bb0657b940662e24c1cff1</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_initial_result</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>acaa9a0cf407fded7fd7224d2e5282e1f</anchor>
      <arglist>(double result, double error)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>retrieve</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>a144318bac4d0e53c20b192a2e71ffa7c</anchor>
      <arglist>(double *a, double *b, double *r, double *e) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>qpsrt</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>a9a1017eaa87d2167263a6396aab912c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>ad518d375fc741876e1e424001f0e6b57</anchor>
      <arglist>(double a1, double b1, double area1, double error1, double a2, double b2, double area2, double error2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sum_results</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>af89b1a7819108d9ff01ea107fec7ebd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>subinterval_too_small</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>adfdc50432a1d8f34064b3559abc0f54b</anchor>
      <arglist>(double a1, double a2, double b2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_interval</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>aa2b49d8b51f752d6976658b28311f6c1</anchor>
      <arglist>(double a1, double b1, double area1, double error1)</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>limit</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>adbe3074c772a75f137e5a2c5063b26ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>a2dd92c1c000bea9923af1a4900a8ac8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nrmax</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>ae9302259fc97a8822c90fb67e9f8dc8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>i</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>a46ca71a4f08e25b192e271de12662e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maximum_level</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>aaccec096ad6c5ec1d97d1190dff31b26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>alist</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>a6273415c4e0754959d7d24735a5c221d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>blist</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>aac4ed456fe67ec50addf0d344ce8aecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>rlist</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>a19ea45e7c83c60fce7b956c51e4142db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>elist</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>a5a9978b90ffefa0160c923796f9e42c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t *</type>
      <name>order</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>ab1e0e8c520e0013329552f96f671d526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t *</type>
      <name>level</name>
      <anchorfile>classo2scl_1_1inte__workspace__gsl.html</anchorfile>
      <anchor>a5ad46d82687eceb6078a027ed8452ca8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp</name>
    <filename>classo2scl_1_1interp.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <member kind="function">
      <type></type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>ad3de0fa98c0557816bb67d40302e5463</anchor>
      <arglist>(size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>a389737c674ee6e741d0f0c8b4c3ab9a3</anchor>
      <arglist>(const double x0, size_t n, const vec_t &amp;x, const vec2_t &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>a2fa1731d75c46b21c24a1d0b268fae81</anchor>
      <arglist>(const double x0, size_t n, const vec_t &amp;x, const vec2_t &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>acf340ad272688f7dca7984e16de3e969</anchor>
      <arglist>(const double x0, size_t n, const vec_t &amp;x, const vec2_t &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>a6ffd9e5021f4620c52b5f881019356ca</anchor>
      <arglist>(const double x1, const double x2, size_t n, const vec_t &amp;x, const vec2_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>ac6c4d37f9c100843ae6ddb714c79aaa1</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interp_base&lt; vec_t, vec2_t &gt; *</type>
      <name>itp</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>abb324a8d7a4aa2a77efa1010d250baf1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp2_base</name>
    <filename>classo2scl_1_1interp2__base.html</filename>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>a9c55b134dc7b8a6fbaf852384e6610b9</anchor>
      <arglist>(double x, double y) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>aeb0de8ab2a09baa6c4ece874f4c23c81</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv_x</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>addf3ade0d2eb76105d4b2a09eb0babcd</anchor>
      <arglist>(double x, double y) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv_xx</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>a85dde5323d00cd25fc7bebd6c0d8ff6c</anchor>
      <arglist>(double x, double y) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>integ_x</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>a4331bd96e909d04c0957280690420855</anchor>
      <arglist>(double x0, double x1, double y) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv_y</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>aa3170c93f8ba65fe8ca7f099bbb99a81</anchor>
      <arglist>(double x, double y) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv_yy</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>a6002797a9eb4b5eebb979ac0218262ac</anchor>
      <arglist>(double x, double y) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>integ_y</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>a3ba704816c5b8bb22948dc12514b776f</anchor>
      <arglist>(double x, double y0, double y1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv_xy</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>aac2030d86d4d1ca73682321b95a4a1c8</anchor>
      <arglist>(double x, double y) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>eval_gen</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>a1f4491137b71d5b1a6359941dd7f105a</anchor>
      <arglist>(int ix, int iy, double x0, double x1, double y0, double y1) const =0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nx</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>ae7d656ab80dd9e92bf274f53377f5cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ny</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>a75a1d96edd2abaa42364702fee90c82b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>xfun</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>aae5ef0585f67053941b8998d8c6e99a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>yfun</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>ab6496fdc64e9f1076df68c1ca3126a00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t *</type>
      <name>datap</name>
      <anchorfile>classo2scl_1_1interp2__base.html</anchorfile>
      <anchor>a51b665b53168f3b80e1cc372742474a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp2_direct</name>
    <filename>classo2scl_1_1interp2__direct.html</filename>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <templarg>mat_row_t</templarg>
    <templarg>mat_column_t</templarg>
    <base>o2scl::interp2_base</base>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>ab0aa5ef98e76203d69ed9d490f20af44</anchor>
      <arglist>(size_t n_x, size_t n_y, vec_t &amp;x_grid, vec_t &amp;y_grid, mat_t &amp;data, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a6ad0d9161fd9dc8e4fa4d0da02e36f77</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv_x</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a487db1a4835d1616a073d26058945cb4</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv_xx</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a4d8aa41828af9a786fde97369b3f70b0</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv_y</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a7684d065390eb21ceacf6bad53f4ee64</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv_yy</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a3fe13f97a540f3802c0e5e7d52b1d198</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv_xy</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>aa0264720ad8f2529c5676b2c998b1aa5</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ_x</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>aedbad9444b151d7bafe44d6253a8bd5c</anchor>
      <arglist>(double x0, double x1, double y) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ_y</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>abb393561acbc7774a76e867d08417f16</anchor>
      <arglist>(double x, double y0, double y1) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval_gen</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>af3bb8cbc22578a67127e8dcc33c132e0</anchor>
      <arglist>(int ix, int iy, double x0, double x1, double y0, double y1) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>data_set</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a704c54fc3e42234abc2b144da11ae6d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>itype</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a89533fe362f84a73eaf5687740521ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix</type>
      <name>zx</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a12cde8b762f3e58946ac510bd4b04028</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix</type>
      <name>zy</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a8b3b53c68b12a6b65d84d3aa650d5cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix</type>
      <name>zxy</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a95adebef411d186e90523c11fa61e075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>search_vec&lt; vec_t &gt;</type>
      <name>svx</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a2bccd4fd6100dfa1bcc5dcaa6c061711</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>search_vec&lt; vec_t &gt;</type>
      <name>svy</name>
      <anchorfile>classo2scl_1_1interp2__direct.html</anchorfile>
      <anchor>a98e7af8c5d353be1124064825c1457ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp2_eqi</name>
    <filename>classo2scl_1_1interp2__eqi.html</filename>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1interp2__eqi.html</anchorfile>
      <anchor>a977ccb83750be54394da53bfe011257a</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_type</name>
      <anchorfile>classo2scl_1_1interp2__eqi.html</anchorfile>
      <anchor>a3e684d70834293d35a425f87d096b9cf</anchor>
      <arglist>(int type)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>xoff</name>
      <anchorfile>classo2scl_1_1interp2__eqi.html</anchorfile>
      <anchor>a880a2e1889334ac87305e3a8f85aafd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>yoff</name>
      <anchorfile>classo2scl_1_1interp2__eqi.html</anchorfile>
      <anchor>a4b39f31723c26f1a1d18c35a40ff82fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp2_neigh</name>
    <filename>classo2scl_1_1interp2__neigh.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>compute_scale</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>ad551cf69f3dd4df277709ec538c1c97d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>ab08c331e0283188fec0ca07265c4f21e</anchor>
      <arglist>(size_t n_points, vec_t &amp;x, vec_t &amp;y, vec_t &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>a14aa606f38db581b9abdcadcbc95ceb6</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>a8eb51cb31ca36839cd151dfe13c71650</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>a13869d19cf605ffd85a07c4fe2576e1a</anchor>
      <arglist>(vec2_t &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_point</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>a5436817f796d62fda78fe91b013bb906</anchor>
      <arglist>(double x, double y, double &amp;f, size_t &amp;i1, double &amp;x1, double &amp;y1) const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x_scale</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>a503a28a00c69c3ab4f9702aa4ad26c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y_scale</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>afd595fa188a696cf0fc06ff920d0e5ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>dx</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>a31c33c8a1b49a168aa019cbe879faf95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>dy</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>ab08579227a2ec98e3761cb6d2d2c2ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>np</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>adeb10ff0d009853d2b55389545c765e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>ux</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>a05e9b80e49a7600c5b85683b5e54afb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>uy</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>a2bedc7080c113f67c259d6e2a669094e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>uf</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>a7c87eac5e6957c9481233fdd0afc1955</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>data_set</name>
      <anchorfile>classo2scl_1_1interp2__neigh.html</anchorfile>
      <anchor>a0188755e63cb1618c7e1fa1522e37c83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp2_planar</name>
    <filename>classo2scl_1_1interp2__planar.html</filename>
    <templarg>vec_t</templarg>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>a9a2c75d4b61cd4ba49360e5269a08387</anchor>
      <arglist>(size_t n_points, vec_t &amp;x, vec_t &amp;y, vec_t &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_scale</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>a153ec3340b6d569ce2d5bb2dfb913219</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>acb33f87acc87ac0082dd62a68bd998be</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>a8431f5d2b79688e1bcc0f8eee64b25cf</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>afd7890f0f1f9e5a76a491efb8da97cea</anchor>
      <arglist>(vec2_t &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_points</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>ac56507a47a8b7401ca83a2d48cc3ede2</anchor>
      <arglist>(double x, double y, double &amp;f, size_t &amp;i1, double &amp;x1, double &amp;y1, size_t &amp;i2, double &amp;x2, double &amp;y2, size_t &amp;i3, double &amp;x3, double &amp;y3) const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>thresh</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>a4a5266a9a28e0c633ded6ec9b9e677fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x_scale</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>a742bee3f1c1ab21cb367c3d38dd3e807</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y_scale</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>a2fd0c325c5dbff1f132565246b1f4d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>swap</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>a5fa4afa4396d4c0e314cb9a29302825f</anchor>
      <arglist>(size_t &amp;index_1, double &amp;dist_1, size_t &amp;index_2, double &amp;dist_2) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>dx</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>ab045a0801adb632257ead3e94634e1f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>dy</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>ae4bd952735c5154d7154a1cc494d581f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>np</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>a9b91c1bbf4cf3d250b2873396806982f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>ux</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>ae0d2d3b88a0ac465fdc717c813d02e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>uy</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>a3d964ef8c7b39a8b563f37aa2534c11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>uf</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>ae3e16ad276939658078c248637efb09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>data_set</name>
      <anchorfile>classo2scl_1_1interp2__planar.html</anchorfile>
      <anchor>aac41158e0fecb91c1e75fb3d85396ffe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp2_seq</name>
    <filename>classo2scl_1_1interp2__seq.html</filename>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <templarg>mat_row_t</templarg>
    <base>o2scl::interp2_base</base>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>ae8ec7d1cafe3f95d84a9c310effd3f26</anchor>
      <arglist>(size_t n_x, size_t n_y, vec_t &amp;x_grid, vec_t &amp;y_grid, mat_t &amp;data, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_interp</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>af18e7e7dfc2cf18cb7a0cef50660468f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>ad1d824a2f1631200d141f63a37020da4</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>aaed9d4d410f8e5043bed3d63377fa30b</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_x</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>a4db41c66e555c9653b9d785eea183a77</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_xx</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>ae01996dac19c9348b032d1b3bf30c68e</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_x</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>abd81ec9bc7012f9a4d50ce266c9efcfb</anchor>
      <arglist>(double x0, double x1, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_y</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>a85dec943e3f071e97bdce976cf6ad151</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_yy</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>a3484c164193b4f62dc127cbd0af0721f</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_y</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>ad82ecc11ee48366ce61fba96cd64909f</anchor>
      <arglist>(double x, double y0, double y1) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_xy</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>a631a634727609c6b7e082a4f88e575a7</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval_gen</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>a5f4085027a17b5a50f011647d3cfabfd</anchor>
      <arglist>(int ix, int iy, double x0, double x1, double y0, double y1) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; interp_vec&lt; vec_t, mat_row_t &gt; * &gt;</type>
      <name>itps</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>aceacac017515ca150c84798fad25718e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; mat_row_t * &gt;</type>
      <name>vecs</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>a1b4904569154049fedf8135856dadcad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nx</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>a190168abae238fd06e637cd6ebe1c91e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ny</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>a2c1afff59642fc34f0c0921c796b5971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>data_set</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>af7deb2f1a0966d9087f86ed3a933080b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>xfun</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>ae5d89c26e2bbe012703207ba53fb3cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>yfun</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>a44d7054276fd1acc77ee2ad153fc97ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t *</type>
      <name>datap</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>ae2b53415099646adce09fb0fd7f96919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>itype</name>
      <anchorfile>classo2scl_1_1interp2__seq.html</anchorfile>
      <anchor>a73a215a710d294f5567d61bc8dabec1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>interp&lt; double[n]&gt;</name>
    <filename>classo2scl_1_1interp.html</filename>
    <member kind="function">
      <type></type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>ad3de0fa98c0557816bb67d40302e5463</anchor>
      <arglist>(size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>a389737c674ee6e741d0f0c8b4c3ab9a3</anchor>
      <arglist>(const double x0, size_t n, const double &amp;x, const double &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>a2fa1731d75c46b21c24a1d0b268fae81</anchor>
      <arglist>(const double x0, size_t n, const double &amp;x, const double &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>acf340ad272688f7dca7984e16de3e969</anchor>
      <arglist>(const double x0, size_t n, const double &amp;x, const double &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>a6ffd9e5021f4620c52b5f881019356ca</anchor>
      <arglist>(const double x1, const double x2, size_t n, const double &amp;x, const double &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>ac6c4d37f9c100843ae6ddb714c79aaa1</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interp_base&lt; double, double &gt; *</type>
      <name>itp</name>
      <anchorfile>classo2scl_1_1interp.html</anchorfile>
      <anchor>abb324a8d7a4aa2a77efa1010d250baf1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_akima</name>
    <filename>classo2scl_1_1interp__akima.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <base>o2scl::interp_base</base>
    <member kind="function">
      <type></type>
      <name>interp_akima</name>
      <anchorfile>classo2scl_1_1interp__akima.html</anchorfile>
      <anchor>a61ad54bdd83f549ccd04e574aa243da9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__akima.html</anchorfile>
      <anchor>a763d1652ce99cf9726a158f607978868</anchor>
      <arglist>(size_t size, const vec_t &amp;xa, const vec2_t &amp;ya)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__akima.html</anchorfile>
      <anchor>aa49a8dec3eacef8933bf3421278f6fef</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__akima.html</anchorfile>
      <anchor>aebed68a135fab0df2f376cac58b51efa</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__akima.html</anchorfile>
      <anchor>a4fb370f53ec555e3a3820eed1969d101</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__akima.html</anchorfile>
      <anchor>a7b43fea6af80a4ba28b1c5dc802cc8e1</anchor>
      <arglist>(double aa, double bb) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__akima.html</anchorfile>
      <anchor>a993a467a374939cda30b33e8792dedec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>akima_calc</name>
      <anchorfile>classo2scl_1_1interp__akima.html</anchorfile>
      <anchor>a0bf83a698fd4556156aed680cd34c1a4</anchor>
      <arglist>(const vec_t &amp;x_array, size_t size, ubvector &amp;umx)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_akima_peri</name>
    <filename>classo2scl_1_1interp__akima__peri.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <base>o2scl::interp_akima</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__akima__peri.html</anchorfile>
      <anchor>a5ed57a0c185d243ed17ba5099255766b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__akima__peri.html</anchorfile>
      <anchor>aba5a719161bcebd62e77d1142b557199</anchor>
      <arglist>(size_t size, const vec_t &amp;xa, const vec2_t &amp;ya)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_array</name>
    <filename>classo2scl_1_1interp__array.html</filename>
    <templarg>n</templarg>
    <base>interp&lt; double[n]&gt;</base>
    <member kind="function">
      <type></type>
      <name>interp_array</name>
      <anchorfile>classo2scl_1_1interp__array.html</anchorfile>
      <anchor>a7facad97e5bd0424ec13c681b073ec14</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>interp_array</name>
      <anchorfile>classo2scl_1_1interp__array.html</anchorfile>
      <anchor>a87800dede4a3557110bd20c9f45c61d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_array_vec</name>
    <filename>classo2scl_1_1interp__array__vec.html</filename>
    <templarg></templarg>
    <base>interp_vec&lt; arr_t &gt;</base>
    <member kind="function">
      <type></type>
      <name>interp_array_vec</name>
      <anchorfile>classo2scl_1_1interp__array__vec.html</anchorfile>
      <anchor>a8cd79a5ee9a3f113fe42eab037bec8cb</anchor>
      <arglist>(size_t nv, const arr_t &amp;x, const arr_t &amp;y, size_t interp_type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_base</name>
    <filename>classo2scl_1_1interp__base.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>ab0b97d212eb6875ddcfdf2b94c05a419</anchor>
      <arglist>(size_t size, const vec_t &amp;x, const vec2_t &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a9b28554f5c9cd9a2739391e6f7722e1b</anchor>
      <arglist>(double x0) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a96f6792da15af07bffdf1e24de3a6ef3</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aa0e1be4179229eb9d1e4f919f7df47ba</anchor>
      <arglist>(double x0) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aae6689633bad6974aa658cbafc2625f1</anchor>
      <arglist>(double x0) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a25d999ea5fe4332990e382b04b7aef3a</anchor>
      <arglist>(double a, double b) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a773bf1b598682147fe326beeb52b649f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_size</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a57e6a67baf49b6bf79ca3a0311808fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>integ_eval</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aa72dee5c50e30a44a9272010872286d6</anchor>
      <arglist>(double ai, double bi, double ci, double di, double xi, double a, double b) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>search_vec&lt; const vec_t &gt;</type>
      <name>svx</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>af25a6c7e05d525f2480dc19eec375a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const vec_t *</type>
      <name>px</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a33923cae2a7caae41c34d900a386d5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const vec2_t *</type>
      <name>py</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>af5def5ee0199a31275425aa0ebb2f589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>sz</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a02d8371a2c22d55e9b99f44d42259757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>interp_base&lt; arr_t, arr_t &gt;</name>
    <filename>classo2scl_1_1interp__base.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>ab0b97d212eb6875ddcfdf2b94c05a419</anchor>
      <arglist>(size_t size, const arr_t &amp;x, const arr_t &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a9b28554f5c9cd9a2739391e6f7722e1b</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a96f6792da15af07bffdf1e24de3a6ef3</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aa0e1be4179229eb9d1e4f919f7df47ba</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aae6689633bad6974aa658cbafc2625f1</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a25d999ea5fe4332990e382b04b7aef3a</anchor>
      <arglist>(double a, double b) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a773bf1b598682147fe326beeb52b649f</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_size</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a57e6a67baf49b6bf79ca3a0311808fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>integ_eval</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aa72dee5c50e30a44a9272010872286d6</anchor>
      <arglist>(double ai, double bi, double ci, double di, double xi, double a, double b) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>search_vec&lt; const arr_t &gt;</type>
      <name>svx</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>af25a6c7e05d525f2480dc19eec375a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const arr_t *</type>
      <name>px</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a33923cae2a7caae41c34d900a386d5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const arr_t *</type>
      <name>py</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>af5def5ee0199a31275425aa0ebb2f589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>sz</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a02d8371a2c22d55e9b99f44d42259757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>interp_base&lt; double, double &gt;</name>
    <filename>classo2scl_1_1interp__base.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>ab0b97d212eb6875ddcfdf2b94c05a419</anchor>
      <arglist>(size_t size, const double &amp;x, const double &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a9b28554f5c9cd9a2739391e6f7722e1b</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a96f6792da15af07bffdf1e24de3a6ef3</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aa0e1be4179229eb9d1e4f919f7df47ba</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aae6689633bad6974aa658cbafc2625f1</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a25d999ea5fe4332990e382b04b7aef3a</anchor>
      <arglist>(double a, double b) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a773bf1b598682147fe326beeb52b649f</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_size</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a57e6a67baf49b6bf79ca3a0311808fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>integ_eval</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aa72dee5c50e30a44a9272010872286d6</anchor>
      <arglist>(double ai, double bi, double ci, double di, double xi, double a, double b) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>search_vec&lt; const double &gt;</type>
      <name>svx</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>af25a6c7e05d525f2480dc19eec375a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const double *</type>
      <name>px</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a33923cae2a7caae41c34d900a386d5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const double *</type>
      <name>py</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>af5def5ee0199a31275425aa0ebb2f589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>sz</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a02d8371a2c22d55e9b99f44d42259757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>interp_base&lt; vec_t, vec_t &gt;</name>
    <filename>classo2scl_1_1interp__base.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>ab0b97d212eb6875ddcfdf2b94c05a419</anchor>
      <arglist>(size_t size, const vec_t &amp;x, const vec_t &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a9b28554f5c9cd9a2739391e6f7722e1b</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a96f6792da15af07bffdf1e24de3a6ef3</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aa0e1be4179229eb9d1e4f919f7df47ba</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aae6689633bad6974aa658cbafc2625f1</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a25d999ea5fe4332990e382b04b7aef3a</anchor>
      <arglist>(double a, double b) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a773bf1b598682147fe326beeb52b649f</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_size</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a57e6a67baf49b6bf79ca3a0311808fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>integ_eval</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aa72dee5c50e30a44a9272010872286d6</anchor>
      <arglist>(double ai, double bi, double ci, double di, double xi, double a, double b) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>search_vec&lt; const vec_t &gt;</type>
      <name>svx</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>af25a6c7e05d525f2480dc19eec375a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const vec_t *</type>
      <name>px</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a33923cae2a7caae41c34d900a386d5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const vec_t *</type>
      <name>py</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>af5def5ee0199a31275425aa0ebb2f589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>sz</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a02d8371a2c22d55e9b99f44d42259757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>interp_base&lt; vector&lt; double &gt;, vector&lt; double &gt; &gt;</name>
    <filename>classo2scl_1_1interp__base.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>ab0b97d212eb6875ddcfdf2b94c05a419</anchor>
      <arglist>(size_t size, const vector&lt; double &gt; &amp;x, const vector&lt; double &gt; &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a9b28554f5c9cd9a2739391e6f7722e1b</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a96f6792da15af07bffdf1e24de3a6ef3</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aa0e1be4179229eb9d1e4f919f7df47ba</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aae6689633bad6974aa658cbafc2625f1</anchor>
      <arglist>(double x0) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a25d999ea5fe4332990e382b04b7aef3a</anchor>
      <arglist>(double a, double b) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a773bf1b598682147fe326beeb52b649f</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_size</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a57e6a67baf49b6bf79ca3a0311808fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>integ_eval</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>aa72dee5c50e30a44a9272010872286d6</anchor>
      <arglist>(double ai, double bi, double ci, double di, double xi, double a, double b) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>search_vec&lt; const vector&lt; double &gt; &gt;</type>
      <name>svx</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>af25a6c7e05d525f2480dc19eec375a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const vector&lt; double &gt; *</type>
      <name>px</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a33923cae2a7caae41c34d900a386d5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const vector&lt; double &gt; *</type>
      <name>py</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>af5def5ee0199a31275425aa0ebb2f589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>sz</name>
      <anchorfile>classo2scl_1_1interp__base.html</anchorfile>
      <anchor>a02d8371a2c22d55e9b99f44d42259757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_cspline</name>
    <filename>classo2scl_1_1interp__cspline.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <base>o2scl::interp_base</base>
    <member kind="function">
      <type></type>
      <name>interp_cspline</name>
      <anchorfile>classo2scl_1_1interp__cspline.html</anchorfile>
      <anchor>a5c37d7ada86942955870a2e2e7c22755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__cspline.html</anchorfile>
      <anchor>acc35f04e9171d3044590f3ada51309f3</anchor>
      <arglist>(size_t size, const vec_t &amp;xa, const vec2_t &amp;ya)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__cspline.html</anchorfile>
      <anchor>a9c3edfd67d2c34c3d266bf076724af21</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__cspline.html</anchorfile>
      <anchor>a61069984dacf5c2d769a3959c2107ef3</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__cspline.html</anchorfile>
      <anchor>af889b2316515613b5d574037493ae266</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__cspline.html</anchorfile>
      <anchor>a57025142ae9f6ea356559a2ed9b83f86</anchor>
      <arglist>(double a, double b) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__cspline.html</anchorfile>
      <anchor>ae49f166d6fdce9e5ee03e05526362a1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>coeff_calc</name>
      <anchorfile>classo2scl_1_1interp__cspline.html</anchorfile>
      <anchor>a126dc4f8146a2f2f7f3b1e3030a12787</anchor>
      <arglist>(const ubvector &amp;c_array, double dy, double dx, size_t index, double &amp;b, double &amp;c2, double &amp;d) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl_linalg::ubvector_4_mem</type>
      <name>p4m</name>
      <anchorfile>classo2scl_1_1interp__cspline.html</anchorfile>
      <anchor>aa826280e6ffd9656ddddf95d179bb4d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_cspline_peri</name>
    <filename>classo2scl_1_1interp__cspline__peri.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <base>o2scl::interp_cspline</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__cspline__peri.html</anchorfile>
      <anchor>a6c00f3cbaefc1b30d4aaa06361f17e76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__cspline__peri.html</anchorfile>
      <anchor>a9c1e682789c505927ca9632f2afa6e3d</anchor>
      <arglist>(size_t size, const vec_t &amp;xa, const vec2_t &amp;ya)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl_linalg::ubvector_5_mem</type>
      <name>p5m</name>
      <anchorfile>classo2scl_1_1interp__cspline__peri.html</anchorfile>
      <anchor>a86cc3e91308e8fd3b5468b3fe1f5be45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_krige</name>
    <filename>classo2scl_1_1interp__krige.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <templarg>covar_func_t</templarg>
    <base>o2scl::interp_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__krige.html</anchorfile>
      <anchor>a62ba70c3f03f9e8fb64dcdad129c4062</anchor>
      <arglist>(size_t size, const vec_t &amp;x, const vec2_t &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__krige.html</anchorfile>
      <anchor>ab60847aeaefc63805bf78f19a604453b</anchor>
      <arglist>(size_t n_dim, const vec_t &amp;x, const vec_t &amp;y, covar_func_t &amp;fcovar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__krige.html</anchorfile>
      <anchor>a52add68f6cbb98d58aa258307dc406fc</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__krige.html</anchorfile>
      <anchor>afa4138ddc436946f68026830658c51ce</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__krige.html</anchorfile>
      <anchor>a234468da25f30a9c17441bf4a0da3285</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__krige.html</anchorfile>
      <anchor>a432655f03c7c440442f9bdd9822bf2fd</anchor>
      <arglist>(double a, double b) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__krige.html</anchorfile>
      <anchor>ad5625bada60ed9db7d57f6e80981818d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>Kinvf</name>
      <anchorfile>classo2scl_1_1interp__krige.html</anchorfile>
      <anchor>a99a879e10684d9b398603f037ed3ab38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>covar_func_t *</type>
      <name>f</name>
      <anchorfile>classo2scl_1_1interp__krige.html</anchorfile>
      <anchor>a803fa56bfc91b1d4de6db003a21df987</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_linear</name>
    <filename>classo2scl_1_1interp__linear.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <base>o2scl::interp_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__linear.html</anchorfile>
      <anchor>a6a790fa249ed85975b0e2356b5e8ca3a</anchor>
      <arglist>(size_t size, const vec_t &amp;x, const vec2_t &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__linear.html</anchorfile>
      <anchor>a8714fb5939dde04919c1c4ac6ed6d61e</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__linear.html</anchorfile>
      <anchor>ab2bf0105420a52fe120d913b47605c8e</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__linear.html</anchorfile>
      <anchor>a2142ee52b830ba369bf4af626ebd2449</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__linear.html</anchorfile>
      <anchor>a01334bcc656337b2fda79c644dc714fc</anchor>
      <arglist>(double a, double b) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__linear.html</anchorfile>
      <anchor>a74a05119f085875e5b460a05e4b4972b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_monotonic</name>
    <filename>classo2scl_1_1interp__monotonic.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <base>o2scl::interp_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__monotonic.html</anchorfile>
      <anchor>ab70788bcf6f5d3b23283b206d6ea81e3</anchor>
      <arglist>(size_t size, const vec_t &amp;x, const vec2_t &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__monotonic.html</anchorfile>
      <anchor>a7ed05f318418784ee1b6f4578a33c1ad</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__monotonic.html</anchorfile>
      <anchor>aeccda4eded5fd3815eae68d26744e633</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__monotonic.html</anchorfile>
      <anchor>a56637830426eb60985b7bb6b0ac0ce77</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__monotonic.html</anchorfile>
      <anchor>ab106186f5abe07cccfe844c0fda5c212</anchor>
      <arglist>(double a, double b) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__monotonic.html</anchorfile>
      <anchor>a14ea874df4deb6fe149ccd69b7067d62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>m</name>
      <anchorfile>classo2scl_1_1interp__monotonic.html</anchorfile>
      <anchor>a97969beea2a5947b37301d178965e61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>Delta</name>
      <anchorfile>classo2scl_1_1interp__monotonic.html</anchorfile>
      <anchor>ac5d1d0f5bb3fd840c891a2244dbd6a7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>alpha</name>
      <anchorfile>classo2scl_1_1interp__monotonic.html</anchorfile>
      <anchor>a44f1cd43062450237cf43690f709db0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>beta</name>
      <anchorfile>classo2scl_1_1interp__monotonic.html</anchorfile>
      <anchor>a01b935b36e955cbcfef3e7eea5318c89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_steffen</name>
    <filename>classo2scl_1_1interp__steffen.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <base>o2scl::interp_base</base>
    <member kind="function">
      <type></type>
      <name>interp_steffen</name>
      <anchorfile>classo2scl_1_1interp__steffen.html</anchorfile>
      <anchor>a0d6bf7872b8ec4808c66597dcaeb34db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__steffen.html</anchorfile>
      <anchor>a296e626d3c8d6e67b5b8b34302dc24c9</anchor>
      <arglist>(size_t size, const vec_t &amp;xa, const vec2_t &amp;ya)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__steffen.html</anchorfile>
      <anchor>aa9262534ac84da6baed6d4f6351e4f27</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__steffen.html</anchorfile>
      <anchor>a9cb54da3e4ac3fa0ca4b80ed4f2ea871</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__steffen.html</anchorfile>
      <anchor>a2738e60d9bf437d28b7bfeedd66f18f8</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__steffen.html</anchorfile>
      <anchor>a20a371f6137b3042f81b3568e8dc7942</anchor>
      <arglist>(double al, double bl) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__steffen.html</anchorfile>
      <anchor>ace6d761528fdd9db77832810c2e0f256</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>copysign</name>
      <anchorfile>classo2scl_1_1interp__steffen.html</anchorfile>
      <anchor>ae1cd52dcb37dcd68b3d3cd13aaa6a9f8</anchor>
      <arglist>(const double x, const double y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interp_vec</name>
    <filename>classo2scl_1_1interp__vec.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec2_t</templarg>
    <base>o2scl::interp_base</base>
    <member kind="function">
      <type></type>
      <name>interp_vec</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a2f2e5c55af614bd8ea2285ba08f81628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>interp_vec</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a2268662f5d54a9e267facf2468120ce4</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec2_t &amp;y, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>ac684932ba8250cab15eb186bb137e5c7</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec2_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a59770599554b8f6cab64ed7412376ed6</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec2_t &amp;y, size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>aedae2b9cff031a0051c53af3eb12fc09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a25ce7c7991adf6aa10eeb890b54bdfd0</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>ad04be75f6dbee47aeace94042206eba4</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>aec854f749950e55aad8d11b5cef838c4</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a6f0940002958681a1c3ac7d36653d89a</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a0934c6e360f5e00fec26137b0dc56b06</anchor>
      <arglist>(const double x1, const double x2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a45ffa00625eac5ad52d4a5f3b63b7060</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interp_base&lt; vec_t, vec2_t &gt; *</type>
      <name>itp</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a8462eb2c1fee1f2a4735cd9ebb9e932e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>itype</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a70e47e8774a8613d8df8aa5083ba476e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>interp_vec&lt; arr_t &gt;</name>
    <filename>classo2scl_1_1interp__vec.html</filename>
    <base>interp_base&lt; arr_t, arr_t &gt;</base>
    <member kind="function">
      <type></type>
      <name>interp_vec</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a2f2e5c55af614bd8ea2285ba08f81628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>interp_vec</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a2268662f5d54a9e267facf2468120ce4</anchor>
      <arglist>(size_t n, const arr_t &amp;x, const arr_t &amp;y, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>ac684932ba8250cab15eb186bb137e5c7</anchor>
      <arglist>(size_t n, const arr_t &amp;x, const arr_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a59770599554b8f6cab64ed7412376ed6</anchor>
      <arglist>(size_t n, const arr_t &amp;x, const arr_t &amp;y, size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>aedae2b9cff031a0051c53af3eb12fc09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a25ce7c7991adf6aa10eeb890b54bdfd0</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>ad04be75f6dbee47aeace94042206eba4</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>aec854f749950e55aad8d11b5cef838c4</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a6f0940002958681a1c3ac7d36653d89a</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a0934c6e360f5e00fec26137b0dc56b06</anchor>
      <arglist>(const double x1, const double x2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a45ffa00625eac5ad52d4a5f3b63b7060</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interp_base&lt; arr_t, arr_t &gt; *</type>
      <name>itp</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a8462eb2c1fee1f2a4735cd9ebb9e932e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>itype</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a70e47e8774a8613d8df8aa5083ba476e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>interp_vec&lt; vec_t &gt;</name>
    <filename>classo2scl_1_1interp__vec.html</filename>
    <base>interp_base&lt; vec_t, vec_t &gt;</base>
    <member kind="function">
      <type></type>
      <name>interp_vec</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a2f2e5c55af614bd8ea2285ba08f81628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>interp_vec</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a2268662f5d54a9e267facf2468120ce4</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>ac684932ba8250cab15eb186bb137e5c7</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a59770599554b8f6cab64ed7412376ed6</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y, size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>aedae2b9cff031a0051c53af3eb12fc09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a25ce7c7991adf6aa10eeb890b54bdfd0</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>ad04be75f6dbee47aeace94042206eba4</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>aec854f749950e55aad8d11b5cef838c4</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a6f0940002958681a1c3ac7d36653d89a</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a0934c6e360f5e00fec26137b0dc56b06</anchor>
      <arglist>(const double x1, const double x2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a45ffa00625eac5ad52d4a5f3b63b7060</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interp_base&lt; vec_t, vec_t &gt; *</type>
      <name>itp</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a8462eb2c1fee1f2a4735cd9ebb9e932e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>itype</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a70e47e8774a8613d8df8aa5083ba476e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>interp_vec&lt; vector&lt; double &gt; &gt;</name>
    <filename>classo2scl_1_1interp__vec.html</filename>
    <base>interp_base&lt; vector&lt; double &gt;, vector&lt; double &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>interp_vec</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a2f2e5c55af614bd8ea2285ba08f81628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>interp_vec</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a2268662f5d54a9e267facf2468120ce4</anchor>
      <arglist>(size_t n, const vector&lt; double &gt; &amp;x, const vector&lt; double &gt; &amp;y, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>ac684932ba8250cab15eb186bb137e5c7</anchor>
      <arglist>(size_t n, const vector&lt; double &gt; &amp;x, const vector&lt; double &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a59770599554b8f6cab64ed7412376ed6</anchor>
      <arglist>(size_t n, const vector&lt; double &gt; &amp;x, const vector&lt; double &gt; &amp;y, size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>aedae2b9cff031a0051c53af3eb12fc09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a25ce7c7991adf6aa10eeb890b54bdfd0</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>ad04be75f6dbee47aeace94042206eba4</anchor>
      <arglist>(double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>aec854f749950e55aad8d11b5cef838c4</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a6f0940002958681a1c3ac7d36653d89a</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a0934c6e360f5e00fec26137b0dc56b06</anchor>
      <arglist>(const double x1, const double x2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a45ffa00625eac5ad52d4a5f3b63b7060</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interp_base&lt; vector&lt; double &gt;, vector&lt; double &gt; &gt; *</type>
      <name>itp</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a8462eb2c1fee1f2a4735cd9ebb9e932e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>itype</name>
      <anchorfile>classo2scl_1_1interp__vec.html</anchorfile>
      <anchor>a70e47e8774a8613d8df8aa5083ba476e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interpm_idw</name>
    <filename>classo2scl_1_1interpm__idw.html</filename>
    <templarg>vec_t</templarg>
    <member kind="function">
      <type>void</type>
      <name>set_order</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>ab73a951e56917aa217f5210aa31da760</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scales</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a5d3841d062c01eb200e33be610eb2f38</anchor>
      <arglist>(size_t n, vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a3b8ed1594999745f8a4870caae431b14</anchor>
      <arglist>(size_t n_in, size_t n_out, size_t n_points, vec_vec_t &amp;vecs, bool auto_scale_flag=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a323fc59be06df69783c6588e726bb73f</anchor>
      <arglist>(size_t &amp;n_in, size_t &amp;n_out, size_t &amp;n_points, vec_vec_t &amp;vecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auto_scale</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>aa1d148e412f2b9b906616efca89dd0ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a249c79e7a830b234f9460b7d74f6345f</anchor>
      <arglist>(size_t n_in, size_t n_points, vec_vec_t &amp;vecs, bool auto_scale=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>ac1f185df975c6269c8b2565e8127f66d</anchor>
      <arglist>(const vec2_t &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a607108048fb7f93222bcb248aa7a1068</anchor>
      <arglist>(const vec2_t &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_err</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a6b21240c864edbdc06b94e06371ce0c6</anchor>
      <arglist>(const vec2_t &amp;x, double &amp;val, double &amp;err) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>ade2665872c0cea4841692f8e6303cca1</anchor>
      <arglist>(vec2_t &amp;x, vec3_t &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_err_index</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>addfdb56da7ba42c98e538bc2f6c5e643</anchor>
      <arglist>(const vec2_t &amp;x, vec3_t &amp;val, vec4_t &amp;err, std::vector&lt; size_t &gt; &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_err</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a3a2d1e7161eaa6ff7d232a0944125aad</anchor>
      <arglist>(const vec2_t &amp;x, vec3_t &amp;val, vec4_t &amp;err) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>derivs_err</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>aae02f01473311705fe55d4697680fdb9</anchor>
      <arglist>(size_t func_index, size_t point_index, vec3_t &amp;derivs, vec3_t &amp;errs) const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>afa20897a7d4117ab8b2d2c79f49fddc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>dist</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>adac85bdb186deaf848eab92d9ad9b9e1</anchor>
      <arglist>(size_t index, const vec2_t &amp;x) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>scales</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>ae8169610d571ba44b089df340ee71c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>np</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a1f732e0387a8bddd5b70531b41ab822e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nd_in</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a5ee09f5d269ab7e3be343b9ea6c95f6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nd_out</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a3e1037d3cef8d160b88784692ea96f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vec_t &gt;</type>
      <name>ptrs</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>ad07f0bca323993f5927a40a368d8464a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>data_set</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a8cda1472f6d6b63591975958cd854a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>order</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a62fd6c2cf2897fbb29fea3b12a332193</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>interpm_idw&lt; double *&gt;</name>
    <filename>classo2scl_1_1interpm__idw.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set_order</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>ab73a951e56917aa217f5210aa31da760</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scales</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a5d3841d062c01eb200e33be610eb2f38</anchor>
      <arglist>(size_t n, vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a3b8ed1594999745f8a4870caae431b14</anchor>
      <arglist>(size_t n_in, size_t n_out, size_t n_points, vec_vec_t &amp;vecs, bool auto_scale_flag=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a249c79e7a830b234f9460b7d74f6345f</anchor>
      <arglist>(size_t n_in, size_t n_points, vec_vec_t &amp;vecs, bool auto_scale=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a323fc59be06df69783c6588e726bb73f</anchor>
      <arglist>(size_t &amp;n_in, size_t &amp;n_out, size_t &amp;n_points, vec_vec_t &amp;vecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auto_scale</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>aa1d148e412f2b9b906616efca89dd0ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>ac1f185df975c6269c8b2565e8127f66d</anchor>
      <arglist>(const vec2_t &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a607108048fb7f93222bcb248aa7a1068</anchor>
      <arglist>(const vec2_t &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>ade2665872c0cea4841692f8e6303cca1</anchor>
      <arglist>(vec2_t &amp;x, vec3_t &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_err</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a6b21240c864edbdc06b94e06371ce0c6</anchor>
      <arglist>(const vec2_t &amp;x, double &amp;val, double &amp;err) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_err</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a3a2d1e7161eaa6ff7d232a0944125aad</anchor>
      <arglist>(const vec2_t &amp;x, vec3_t &amp;val, vec4_t &amp;err) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval_err_index</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>addfdb56da7ba42c98e538bc2f6c5e643</anchor>
      <arglist>(const vec2_t &amp;x, vec3_t &amp;val, vec4_t &amp;err, std::vector&lt; size_t &gt; &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>derivs_err</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>aae02f01473311705fe55d4697680fdb9</anchor>
      <arglist>(size_t func_index, size_t point_index, vec3_t &amp;derivs, vec3_t &amp;errs) const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>afa20897a7d4117ab8b2d2c79f49fddc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>dist</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>adac85bdb186deaf848eab92d9ad9b9e1</anchor>
      <arglist>(size_t index, const vec2_t &amp;x) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>scales</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>ae8169610d571ba44b089df340ee71c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>np</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a1f732e0387a8bddd5b70531b41ab822e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nd_in</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a5ee09f5d269ab7e3be343b9ea6c95f6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nd_out</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a3e1037d3cef8d160b88784692ea96f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double * &gt;</type>
      <name>ptrs</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>ad07f0bca323993f5927a40a368d8464a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>data_set</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a8cda1472f6d6b63591975958cd854a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>order</name>
      <anchorfile>classo2scl_1_1interpm__idw.html</anchorfile>
      <anchor>a62fd6c2cf2897fbb29fea3b12a332193</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interpm_krige</name>
    <filename>classo2scl_1_1interpm__krige.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1interpm__krige.html</anchorfile>
      <anchor>a5e1a9b168e2838e957d3e457283cbe33</anchor>
      <arglist>(size_t n_in, size_t n_out, size_t n_points, vec_vec_t &amp;x, vec_vec2_t &amp;y, std::vector&lt; covar_func_t &gt; &amp;fcovar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interpm__krige.html</anchorfile>
      <anchor>a25f499a71b3360c0831d9a5f1a6f8ccc</anchor>
      <arglist>(const vec2_t &amp;x, vec3_t &amp;y, std::vector&lt; covar_func_t &gt; &amp;fcovar) const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1interpm__krige.html</anchorfile>
      <anchor>ac6e5cc0a43054a90927cfbe154ba3306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ubvector &gt;</type>
      <name>Kinvf</name>
      <anchorfile>classo2scl_1_1interpm__krige.html</anchorfile>
      <anchor>ad709af8957ce0205705a06a96bceddbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>np</name>
      <anchorfile>classo2scl_1_1interpm__krige.html</anchorfile>
      <anchor>a3a5f20106340cb965b191a16cecbc192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nd_in</name>
      <anchorfile>classo2scl_1_1interpm__krige.html</anchorfile>
      <anchor>af8f1e7ff830de7a56ae162c7e7bcccc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nd_out</name>
      <anchorfile>classo2scl_1_1interpm__krige.html</anchorfile>
      <anchor>a1fcd25b8cbb19926fb7b9ce731431f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vec_t &gt;</type>
      <name>ptrs_x</name>
      <anchorfile>classo2scl_1_1interpm__krige.html</anchorfile>
      <anchor>ae430945a6338121a92545cce865dfefa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>data_set</name>
      <anchorfile>classo2scl_1_1interpm__krige.html</anchorfile>
      <anchor>a515e4103dba94c79409f1909466f6516</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>order</name>
      <anchorfile>classo2scl_1_1interpm__krige.html</anchorfile>
      <anchor>a4919a4b818328e9b15c2b5c4e68bba94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::interpm_krige_nn</name>
    <filename>classo2scl_1_1interpm__krige__nn.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>a4bbe42a402a698fa36db9accc5089a7a</anchor>
      <arglist>(size_t n_in, size_t n_out, size_t n_points, vec_vec_t &amp;x, vec_vec2_t &amp;y, std::vector&lt; covar_func_t &gt; &amp;fcovar, size_t order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>af11b7ee0828d845717e66a9149234004</anchor>
      <arglist>(const vec2_t &amp;x, vec3_t &amp;y, std::vector&lt; covar_func_t &gt; &amp;fcovar) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>a6fa197a9b142b34fa770eb67602941f6</anchor>
      <arglist>(const vec2_t &amp;x, size_t iout, std::vector&lt; covar_func_t &gt; &amp;fcovar) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>find_lin_indep</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>a5550431b4b089668bf397a34f8dd19f8</anchor>
      <arglist>(const vec2_t &amp;x, size_t iout, std::vector&lt; covar_func_t &gt; &amp;fcovar, ubvector_size_t &amp;index, ubvector_size_t &amp;indep) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval_jackknife</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>af284ce9a25f8471f092179d322b79036</anchor>
      <arglist>(const vec2_t &amp;x, size_t iout, std::vector&lt; covar_func_t &gt; &amp;fcovar) const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>a9209d61e8ca1f942f2bfa6aafa1e866f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>norder</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>a2b895af9120b0ddda66b6ec36e8f2bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>np</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>abeac6d7bfb5353741a11f3e8a2a18094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nd_in</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>a496879ca1e91241d1bfe157195b4bc19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nd_out</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>a3495d35c6776e568d9c0e05b9fe67e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vec_t &gt;</type>
      <name>ptrs_x</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>a5038ad0a81c21c65571296305b3ba110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vec_t &gt;</type>
      <name>ptrs_y</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>a8a08961400d1f1f5077cad87f9401a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>data_set</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>ade7ca39923e746487c07005468834666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>order</name>
      <anchorfile>classo2scl_1_1interpm__krige__nn.html</anchorfile>
      <anchor>aebd4fd404821c40231072da82cff786b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>o2scl_acol::acol_manager::iter_parms</name>
    <filename>structo2scl__acol_1_1acol__manager_1_1iter__parms.html</filename>
  </compound>
  <compound kind="struct">
    <name>o2scl_hdf::iterate_parms</name>
    <filename>structo2scl__hdf_1_1iterate__parms.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl::jacobian</name>
    <filename>classo2scl_1_1jacobian.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_function</name>
      <anchorfile>classo2scl_1_1jacobian.html</anchorfile>
      <anchor>ae8c9fb4608ae4d8ab9d7419854410754</anchor>
      <arglist>(func_t &amp;f)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1jacobian.html</anchorfile>
      <anchor>ac7543b7b6683b0dcd7f57915d845a943</anchor>
      <arglist>(size_t nx, vec_t &amp;x, size_t ny, vec_t &amp;y, mat_t &amp;j)=0</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1jacobian.html</anchorfile>
      <anchor>a21b96e374ac7fe4821fa2b0333fc1a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1jacobian.html</anchorfile>
      <anchor>a1231231593638b24c6f8f8c5f5e7c52f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>jacobian&lt; std::function&lt; int(size_t, const vec_t &amp;, vec_t &amp;)&gt;, vec_t, mat_t &gt;</name>
    <filename>classo2scl_1_1jacobian.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_function</name>
      <anchorfile>classo2scl_1_1jacobian.html</anchorfile>
      <anchor>ae8c9fb4608ae4d8ab9d7419854410754</anchor>
      <arglist>(std::function&lt; int(size_t, const vec_t &amp;, vec_t &amp;)&gt; &amp;f)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1jacobian.html</anchorfile>
      <anchor>ac7543b7b6683b0dcd7f57915d845a943</anchor>
      <arglist>(size_t nx, vec_t &amp;x, size_t ny, vec_t &amp;y, mat_t &amp;j)=0</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1jacobian.html</anchorfile>
      <anchor>a21b96e374ac7fe4821fa2b0333fc1a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::function&lt; int(size_t, const vec_t &amp;, vec_t &amp;)&gt;</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1jacobian.html</anchorfile>
      <anchor>a1231231593638b24c6f8f8c5f5e7c52f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::jacobian_exact</name>
    <filename>classo2scl_1_1jacobian__exact.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::jacobian</base>
    <class kind="struct">o2scl::jacobian_exact::ej_parms</class>
    <member kind="function">
      <type>int</type>
      <name>set_deriv</name>
      <anchorfile>classo2scl_1_1jacobian__exact.html</anchorfile>
      <anchor>a0b5ff9ff28079728dbd924c2a8f25ee5</anchor>
      <arglist>(deriv_base&lt;&gt; &amp;de)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1jacobian__exact.html</anchorfile>
      <anchor>a50405dd9c70db06cbc9111656741d35b</anchor>
      <arglist>(size_t nx, vec_t &amp;x, size_t ny, vec_t &amp;y, mat_t &amp;jac)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>jac_err</name>
      <anchorfile>classo2scl_1_1jacobian__exact.html</anchorfile>
      <anchor>a3da312502c6401c6e31ced662f7e0628</anchor>
      <arglist>(size_t nx, vec_t &amp;x, size_t ny, vec_t &amp;y, mat_t &amp;jac, mat_t &amp;err)</arglist>
    </member>
    <member kind="variable">
      <type>deriv_gsl</type>
      <name>def_deriv</name>
      <anchorfile>classo2scl_1_1jacobian__exact.html</anchorfile>
      <anchor>a54b1c85f1ec5ed36c3e92f2284b4689d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>dfn</name>
      <anchorfile>classo2scl_1_1jacobian__exact.html</anchorfile>
      <anchor>a1de7021ffb8f272442c3cdd8875c2cac</anchor>
      <arglist>(double x, ej_parms &amp;ejp)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>deriv_base *</type>
      <name>dptr</name>
      <anchorfile>classo2scl_1_1jacobian__exact.html</anchorfile>
      <anchor>ae514cbb6e9b29df732d8fefcfe2db6c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::jacobian_gsl</name>
    <filename>classo2scl_1_1jacobian__gsl.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <base>o2scl::jacobian</base>
    <member kind="function">
      <type>double</type>
      <name>get_epsrel</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>ae57bcc1007a876d087165bffbd5bf479</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_epsmin</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a1934cb911e42b1e46751f55d0412b344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_epsrel</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a5cc5e2ac8cd8e6818797a0a6f99e1266</anchor>
      <arglist>(double l_epsrel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_epsmin</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a6835d08111792a7c291029c4929792c9</anchor>
      <arglist>(double l_epsmin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shrink_fact</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>acb33fd9edd1bebf618fbedd54fd4fcf0</anchor>
      <arglist>(double l_shrink_fact)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_shrink_iters</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a79e2bc7aecd8f8f7bc9c5cf5e55dcad2</anchor>
      <arglist>(size_t it)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a9ab44252c89bebe2f0bead11c3c003d0</anchor>
      <arglist>(size_t nx, vec_t &amp;x, size_t ny, vec_t &amp;y, mat_t &amp;jac)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>f</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a260b9027497d485419b350b371fc79ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>xx</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>adf30d9a6761dd739675dde4e3b37e84a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mem_size_x</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>ab6801387365495dabe48275630874372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mem_size_y</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a22c9fdadd0700996e69482c1ebd10532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>epsrel</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a9fc1c74c832e399110029de0077fbce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>epsmin</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a9155b7aa813965f8a31d484150f8c691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>max_shrink_iters</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a329d56461a9eba05d8c3d5d4849990c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>shrink_fact</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a2e7ba4c7e9d4871825686b96712d103e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>jacobian_gsl&lt; std::function&lt; int(size_t, const vec_t &amp;, vec_t &amp;)&gt;, vec_t, mat_t &gt;</name>
    <filename>classo2scl_1_1jacobian__gsl.html</filename>
    <base>jacobian&lt; std::function&lt; int(size_t, const vec_t &amp;, vec_t &amp;)&gt;, vec_t, mat_t &gt;</base>
    <member kind="function">
      <type>double</type>
      <name>get_epsrel</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>ae57bcc1007a876d087165bffbd5bf479</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_epsmin</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a1934cb911e42b1e46751f55d0412b344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_epsrel</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a5cc5e2ac8cd8e6818797a0a6f99e1266</anchor>
      <arglist>(double l_epsrel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_epsmin</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a6835d08111792a7c291029c4929792c9</anchor>
      <arglist>(double l_epsmin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shrink_fact</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>acb33fd9edd1bebf618fbedd54fd4fcf0</anchor>
      <arglist>(double l_shrink_fact)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_shrink_iters</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a79e2bc7aecd8f8f7bc9c5cf5e55dcad2</anchor>
      <arglist>(size_t it)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a9ab44252c89bebe2f0bead11c3c003d0</anchor>
      <arglist>(size_t nx, vec_t &amp;x, size_t ny, vec_t &amp;y, mat_t &amp;jac)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>f</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a260b9027497d485419b350b371fc79ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>xx</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>adf30d9a6761dd739675dde4e3b37e84a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mem_size_x</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>ab6801387365495dabe48275630874372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mem_size_y</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a22c9fdadd0700996e69482c1ebd10532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>epsrel</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a9fc1c74c832e399110029de0077fbce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>epsmin</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a9155b7aa813965f8a31d484150f8c691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>max_shrink_iters</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a329d56461a9eba05d8c3d5d4849990c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>shrink_fact</name>
      <anchorfile>classo2scl_1_1jacobian__gsl.html</anchorfile>
      <anchor>a2e7ba4c7e9d4871825686b96712d103e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::lanczos</name>
    <filename>classo2scl__linalg_1_1lanczos.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>int</type>
      <name>eigenvalues</name>
      <anchorfile>classo2scl__linalg_1_1lanczos.html</anchorfile>
      <anchor>a2fb84e159d208c2c4c77933550d6618b</anchor>
      <arglist>(size_t size, mat_t &amp;mat, size_t n_iter, vec_t &amp;eigen, vec_t &amp;diag, vec_t &amp;off_diag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>eigen_tdiag</name>
      <anchorfile>classo2scl__linalg_1_1lanczos.html</anchorfile>
      <anchor>a0ead45941f49991f22c8783152ceae6b</anchor>
      <arglist>(size_t n, vec_t &amp;diag, vec_t &amp;off_diag)</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>td_iter</name>
      <anchorfile>classo2scl__linalg_1_1lanczos.html</anchorfile>
      <anchor>a15f3ce2e81ab136b9c29e5d067f4915a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>td_lasteval</name>
      <anchorfile>classo2scl__linalg_1_1lanczos.html</anchorfile>
      <anchor>a0b6eb9354660bcda0fbfead9b843646e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>product</name>
      <anchorfile>classo2scl__linalg_1_1lanczos.html</anchorfile>
      <anchor>a232634d3d7b9615294efbdae60deffe2</anchor>
      <arglist>(size_t n, mat_t &amp;a, vec_t &amp;w, vec_t &amp;prod)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::lib_settings_class</name>
    <filename>classo2scl_1_1lib__settings__class.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>get_data_dir</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a7a1cbf75f3d662773f2bd6d499c19feb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_data_dir</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a66ec30169f757871212548f5769b1630</anchor>
      <arglist>(std::string dir)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eos_installed</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a46ffe680c8843a9b44b5eb44b3c46992</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>part_installed</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>ac15ff8c0e216b53193b9f37ce154af27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hdf_support</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>af729f28eb31e20f8090610d74f67ecfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openmp_support</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a2f77083391ced28c3753c3fdd1e5dbbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gsl2_support</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a31e18838ef740546da64b9be2a4d20d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>armadillo_support</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a8ae17d6475f4b0115fcaafa93ef83a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eigen_support</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a76921fe7f5861e74def284148f7ad981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>range_check</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>aae33fd663f0b1e91a15f7e363271f086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>time_compiled</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a7c2c0bcbb5139cada26460f9fc8ea640</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>date_compiled</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a8a0b604b1f03789600316166cdc0d7bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>o2scl_version</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>add75bf51a90bee0be108675ea40e18df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>config_h_report</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a12294036cf7a15672ced55cee3c1fdae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>convert_units &amp;</type>
      <name>get_convert_units</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a1a3606145ab0c6a11875fff20969ad1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_convert_units</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>ab5a30337d762d7bdfb2eed07f97ad137</anchor>
      <arglist>(convert_units &amp;cu)</arglist>
    </member>
    <member kind="variable">
      <type>convert_units</type>
      <name>def_cu</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a8b6f6a0e1f7dad9a0ab81e718c8c2577</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>data_dir</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a52e2c7be2f4ec8ea0ec7ef79e83ebe1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>convert_units *</type>
      <name>cup</name>
      <anchorfile>classo2scl_1_1lib__settings__class.html</anchorfile>
      <anchor>a46d4b503cfa8b5762e7cdbf09f04c7d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>o2scl::pinside::line</name>
    <filename>structo2scl_1_1pinside_1_1line.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver</name>
    <filename>classo2scl__linalg_1_1linear__solver.html</filename>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver.html</anchorfile>
      <anchor>a2e25a207f54d96676ff583d16aa5401d</anchor>
      <arglist>(size_t n, mat_t &amp;a, vec_t &amp;b, vec_t &amp;x)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>linear_solver&lt; arma_vec_t, arma_mat_t &gt;</name>
    <filename>classo2scl__linalg_1_1linear__solver.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver.html</anchorfile>
      <anchor>a2e25a207f54d96676ff583d16aa5401d</anchor>
      <arglist>(size_t n, arma_mat_t &amp;a, arma_vec_t &amp;b, arma_vec_t &amp;x)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>linear_solver&lt; eigen_vec_t, eigen_mat_t &gt;</name>
    <filename>classo2scl__linalg_1_1linear__solver.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver.html</anchorfile>
      <anchor>a2e25a207f54d96676ff583d16aa5401d</anchor>
      <arglist>(size_t n, eigen_mat_t &amp;a, eigen_vec_t &amp;b, eigen_vec_t &amp;x)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>linear_solver&lt; solver_vec_t, solver_mat_t &gt;</name>
    <filename>classo2scl__linalg_1_1linear__solver.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver.html</anchorfile>
      <anchor>a2e25a207f54d96676ff583d16aa5401d</anchor>
      <arglist>(size_t n, solver_mat_t &amp;a, solver_vec_t &amp;b, solver_vec_t &amp;x)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_arma</name>
    <filename>classo2scl__linalg_1_1linear__solver__arma.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>linear_solver&lt; arma_vec_t, arma_mat_t &gt;</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__arma.html</anchorfile>
      <anchor>a56460c03ae5f1a82deed2602f1f900ca</anchor>
      <arglist>(size_t n, arma_mat_t &amp;A, arma_vec_t &amp;b, arma_vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_eigen_colQR</name>
    <filename>classo2scl__linalg_1_1linear__solver__eigen__colQR.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>linear_solver&lt; eigen_vec_t, eigen_mat_t &gt;</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__eigen__colQR.html</anchorfile>
      <anchor>ae842ed3abb8dfcb9c95a9881b2046047</anchor>
      <arglist>(size_t n, eigen_mat_t &amp;A, eigen_vec_t &amp;b, eigen_vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_eigen_fullLU</name>
    <filename>classo2scl__linalg_1_1linear__solver__eigen__fullLU.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>linear_solver&lt; eigen_vec_t, eigen_mat_t &gt;</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__eigen__fullLU.html</anchorfile>
      <anchor>ab814b1d93c8c17eee345cb6b770d5a88</anchor>
      <arglist>(size_t n, eigen_mat_t &amp;A, eigen_vec_t &amp;b, eigen_vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_eigen_fullQR</name>
    <filename>classo2scl__linalg_1_1linear__solver__eigen__fullQR.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>linear_solver&lt; eigen_vec_t, eigen_mat_t &gt;</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__eigen__fullQR.html</anchorfile>
      <anchor>a100ee11a037a486127118573a431b9a5</anchor>
      <arglist>(size_t n, eigen_mat_t &amp;A, eigen_vec_t &amp;b, eigen_vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_eigen_houseQR</name>
    <filename>classo2scl__linalg_1_1linear__solver__eigen__houseQR.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>linear_solver&lt; eigen_vec_t, eigen_mat_t &gt;</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__eigen__houseQR.html</anchorfile>
      <anchor>af44eccd82c851d1f9d399087f2c81c60</anchor>
      <arglist>(size_t n, eigen_mat_t &amp;A, eigen_vec_t &amp;b, eigen_vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_eigen_LDLT</name>
    <filename>classo2scl__linalg_1_1linear__solver__eigen__LDLT.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>linear_solver&lt; eigen_vec_t, eigen_mat_t &gt;</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__eigen__LDLT.html</anchorfile>
      <anchor>afdc6bb9870890271ff3d74322cc622ba</anchor>
      <arglist>(size_t n, eigen_mat_t &amp;A, eigen_vec_t &amp;b, eigen_vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_eigen_LLT</name>
    <filename>classo2scl__linalg_1_1linear__solver__eigen__LLT.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>linear_solver&lt; eigen_vec_t, eigen_mat_t &gt;</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__eigen__LLT.html</anchorfile>
      <anchor>a22fae27e02efdcb024a94f0aff23d3ba</anchor>
      <arglist>(size_t n, eigen_mat_t &amp;A, eigen_vec_t &amp;b, eigen_vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_eigen_partLU</name>
    <filename>classo2scl__linalg_1_1linear__solver__eigen__partLU.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>linear_solver&lt; eigen_vec_t, eigen_mat_t &gt;</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__eigen__partLU.html</anchorfile>
      <anchor>a69c7e38329d6874ab86ca93fcd6f107a</anchor>
      <arglist>(size_t n, eigen_mat_t &amp;A, eigen_vec_t &amp;b, eigen_vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_HH</name>
    <filename>classo2scl__linalg_1_1linear__solver__HH.html</filename>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <base>o2scl_linalg::linear_solver</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__HH.html</anchorfile>
      <anchor>aa0c74894a4fb59d7726fdece4d92bda2</anchor>
      <arglist>(size_t n, mat_t &amp;A, vec_t &amp;b, vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>linear_solver_HH&lt; solver_vec_t, solver_mat_t &gt;</name>
    <filename>classo2scl__linalg_1_1linear__solver__HH.html</filename>
    <base>linear_solver&lt; solver_vec_t, solver_mat_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__HH.html</anchorfile>
      <anchor>aa0c74894a4fb59d7726fdece4d92bda2</anchor>
      <arglist>(size_t n, solver_mat_t &amp;A, solver_vec_t &amp;b, solver_vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_LU</name>
    <filename>classo2scl__linalg_1_1linear__solver__LU.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl_linalg::linear_solver</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__LU.html</anchorfile>
      <anchor>a54939f5e7a3f41b4588b12c75ea44165</anchor>
      <arglist>(size_t n, mat_t &amp;A, vec_t &amp;b, vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::linear_solver_QR</name>
    <filename>classo2scl__linalg_1_1linear__solver__QR.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl_linalg::linear_solver</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classo2scl__linalg_1_1linear__solver__QR.html</anchorfile>
      <anchor>ad25be435fbf8a1607ccdee9085c81886</anchor>
      <arglist>(size_t n, mat_t &amp;A, vec_t &amp;b, vec_t &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::numeric::ublas::matrix</name>
    <filename>classboost_1_1numeric_1_1ublas_1_1matrix.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>matrix&lt; double &gt;</name>
    <filename>classboost_1_1numeric_1_1ublas_1_1matrix.html</filename>
  </compound>
  <compound kind="class">
    <name>matrix&lt; int &gt;</name>
    <filename>classboost_1_1numeric_1_1ublas_1_1matrix.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl::matrix_column_gen</name>
    <filename>classo2scl_1_1matrix__column__gen.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>o2scl::matrix_row_gen</name>
    <filename>classo2scl_1_1matrix__row__gen.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>matrix_row_gen</name>
      <anchorfile>classo2scl_1_1matrix__row__gen.html</anchorfile>
      <anchor>aeadf88dc8c18a448b780698e2bf44c4c</anchor>
      <arglist>(mat_t &amp;m, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1matrix__row__gen.html</anchorfile>
      <anchor>ae35535d6dad1a272c6700c24bdcd1789</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1matrix__row__gen.html</anchorfile>
      <anchor>a5e8ded182422fd6b3eca893e85c6289e</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mcarlo</name>
    <filename>classo2scl_1_1mcarlo.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::inte_multi</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mcarlo.html</anchorfile>
      <anchor>a1996f850f90b7c55692a0eb82445a243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>n_points</name>
      <anchorfile>classo2scl_1_1mcarlo.html</anchorfile>
      <anchor>a5298f0c98ad21d450536f3bebccdee78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rng_gsl_uniform_real</type>
      <name>rng_dist</name>
      <anchorfile>classo2scl_1_1mcarlo.html</anchorfile>
      <anchor>a4ca3b4140f2ec368ff124c8053255c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rng_t</type>
      <name>rng</name>
      <anchorfile>classo2scl_1_1mcarlo.html</anchorfile>
      <anchor>a0368ffd11ff8d190f75bfeb0fda269cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mcarlo_miser</name>
    <filename>classo2scl_1_1mcarlo__miser.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::mcarlo</base>
    <member kind="function">
      <type>int</type>
      <name>set_min_calls</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a8d44ad0b7ca76fccbb19bd341247316e</anchor>
      <arglist>(size_t &amp;mc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_min_calls_per_bisection</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>abb49b767ec4efb387ff89795bd5017ef</anchor>
      <arglist>(size_t &amp;mcb)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>ae77793324199e3411a1b691699975e51</anchor>
      <arglist>(size_t ldim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>miser_minteg_err</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a7dbaa2baef932ea0069f635eec96134f</anchor>
      <arglist>(func_t &amp;func, size_t ndim, const vec_t &amp;xl, const vec_t &amp;xu, size_t calls, size_t level, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>minteg_err</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>aeb6de3c2f707969df23508e7702c4c66</anchor>
      <arglist>(func_t &amp;func, size_t ndim, const vec_t &amp;a, const vec_t &amp;b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minteg</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a610c08c25adaf8f33c2d49c9591a5d72</anchor>
      <arglist>(func_t &amp;func, size_t ndim, const vec_t &amp;a, const vec_t &amp;b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a499ed06c1244ce35e335ccd2ca46a6df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>calls_per_dim</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>ab07b298cfcd4bde1db07af140abc3508</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bisection_ratio</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a9ef69c09ca5a031257e804658f5b39b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dither</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a0521947d71f2c88127b3cf82bb1c64de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>estimate_frac</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a97a996ea281508c5c14e030b10887a17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a5ebf9529c54a64179eb40140aa89b778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_levels_out</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a1d67d4c7f2f56916c516d93499ad56ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>estimate_corrmc</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>ac79afb73cfa9c968ec543b096d2b91cd</anchor>
      <arglist>(func_t &amp;func, size_t ndim, const vec_t &amp;xl, const vec_t &amp;xu, size_t calls, double &amp;res, double &amp;err, const ubvector &amp;lxmid, ubvector &amp;lsigma_l, ubvector &amp;lsigma_r)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>min_calls</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>ab2b22c2de6767edef85f42de53143ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>min_calls_per_bisection</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a2c1769acead34f81f930fdba5e973391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a05592e3cf9f7af13627bdb0408a21d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>aac46daee18988c806e71bf82e31e1fa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>xmid</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a6a90dabc2232ab901f29c96835e5be30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>sigma_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a8f6d65b8b78126e7fa61c53ff2b3f5f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>sigma_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a8a9d85e6be7f2ce7eb4111b71a16792f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fmax_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>aab294696efce518c7a009a3dca823aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fmax_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a5ad0df171432f8465457d2c83d263c97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fmin_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a3868320ba13dc64c28762be480a62c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fmin_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>ae8add73712a4002513b25618a8a12a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fsum_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a4b50c9e51772129b9c72ac5e76d6ac0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fsum_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>aa1253cd47aa84b824ce5bd8fbdb8df65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fsum2_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a3e279778ee057aa9b46f436f4d7a14b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fsum2_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a53853b8c1cd656fdb6a78e04244cae3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector_size_t</type>
      <name>hits_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>abed48857fbe143958173bc6a565cf64a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector_size_t</type>
      <name>hits_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>aa2d8c06730a170126cdab004744370d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>xmid</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a6a90dabc2232ab901f29c96835e5be30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>sigma_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a8f6d65b8b78126e7fa61c53ff2b3f5f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>sigma_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a8a9d85e6be7f2ce7eb4111b71a16792f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fmax_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>aab294696efce518c7a009a3dca823aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fmax_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a5ad0df171432f8465457d2c83d263c97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fmin_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a3868320ba13dc64c28762be480a62c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fmin_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>ae8add73712a4002513b25618a8a12a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fsum_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a4b50c9e51772129b9c72ac5e76d6ac0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fsum_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>aa1253cd47aa84b824ce5bd8fbdb8df65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fsum2_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a3e279778ee057aa9b46f436f4d7a14b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fsum2_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>a53853b8c1cd656fdb6a78e04244cae3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector_size_t</type>
      <name>hits_l</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>abed48857fbe143958173bc6a565cf64a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector_size_t</type>
      <name>hits_r</name>
      <anchorfile>classo2scl_1_1mcarlo__miser.html</anchorfile>
      <anchor>aa2d8c06730a170126cdab004744370d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mcarlo_plain</name>
    <filename>classo2scl_1_1mcarlo__plain.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::mcarlo</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>minteg_err</name>
      <anchorfile>classo2scl_1_1mcarlo__plain.html</anchorfile>
      <anchor>a72c037d8dc8a09d0307a05a12a9fc3f1</anchor>
      <arglist>(func_t &amp;func, size_t ndim, const vec_t &amp;a, const vec_t &amp;b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minteg</name>
      <anchorfile>classo2scl_1_1mcarlo__plain.html</anchorfile>
      <anchor>aa5f4426f264ada40d130a9fff00b51c1</anchor>
      <arglist>(func_t &amp;func, size_t ndim, const vec_t &amp;a, const vec_t &amp;b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mcarlo__plain.html</anchorfile>
      <anchor>a99eef0d7dd1add10cbf3e969ef4e5f5d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mcarlo_vegas</name>
    <filename>classo2scl_1_1mcarlo__vegas.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>rng_t</templarg>
    <base>o2scl::mcarlo</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>acd9fce5a7ca80ead28623b6127b5f2e7</anchor>
      <arglist>(size_t ldim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>vegas_minteg_err</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ac9a9d776eaf15b6e36984fc9bb0ddf6b</anchor>
      <arglist>(int stage, func_t &amp;func, size_t ndim, const vec_t &amp;xl, const vec_t &amp;xu, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>minteg_err</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a2c893704f7bf8ae8cf9cbcaad093198c</anchor>
      <arglist>(func_t &amp;func, size_t ndim, const vec_t &amp;a, const vec_t &amp;b, double &amp;res, double &amp;err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minteg</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a79718b34e6f4cf33b75779866ce585d6</anchor>
      <arglist>(func_t &amp;func, size_t ndim, const vec_t &amp;a, const vec_t &amp;b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a5a27a08ee698c1c8a4cf57f28649c65d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>result</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a818052ea6c6030e9cf0c468f1fb59a2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sigma</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a521fc2668bf6c6172a19debbbd19db09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ae8ca054a188f4daa2adb834951d859dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>iterations</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a6e538c40425e01d9a514a4781cf9b56f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>chisq</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ab269925ea00cfc1ebb3c6a385dbf2048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream *</type>
      <name>outs</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ad1c8ec9b925bd7cb03dddb8af0c2fe83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init_box_coord</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a03b06519e9dfabc6efd9531de4118519</anchor>
      <arglist>(ubvector_int &amp;boxt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>change_box_coord</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ad83413e78eb6ed5c9fc1a12371dfdf74</anchor>
      <arglist>(ubvector_int &amp;boxt)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init_grid</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ae88647fe6721291a89cb2c52707e9bcd</anchor>
      <arglist>(const vec_t &amp;xl, const vec_t &amp;xu, size_t ldim)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>reset_grid_values</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>aeb761fc59a5be7a0d664e1cecdb91d32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>accumulate_distribution</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ad783c69f3841c9791204d4877293371c</anchor>
      <arglist>(ubvector_int &amp;lbin, double y)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>random_point</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>aaf5497a32cd3a95b185ba79714581fa7</anchor>
      <arglist>(vec_t &amp;lx, ubvector_int &amp;lbin, double &amp;bin_vol, const ubvector_int &amp;lbox, const vec_t &amp;xl, const vec_t &amp;xu)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resize_grid</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a95a2c8242fa0039b6dad80875a2f1109</anchor>
      <arglist>(unsigned int lbins)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>refine_grid</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a5777348e7398ea45606ba78ab624d7a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>print_lim</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a3838adef78ea4b0f19755a189c1d33d9</anchor>
      <arglist>(const vec_t &amp;xl, const vec_t &amp;xu, unsigned long ldim)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>print_head</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ab70b76ab855f9bf48345b5b522abab32</anchor>
      <arglist>(unsigned long num_dim, unsigned long calls, unsigned int lit_num, unsigned int lbins, unsigned int lboxes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>print_res</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ac262e86b6a86646bac3661a116d1fdb3</anchor>
      <arglist>(unsigned int itr, double res, double err, double cum_res, double cum_err, double chi_sq)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>print_dist</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a86037beba999a3dc4396969b5fb2dfdf</anchor>
      <arglist>(unsigned long ldim)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>print_grid</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a2d9d8159c22dcfa7deaaf5785022a1aa</anchor>
      <arglist>(unsigned long ldim)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ac12ae1f9c6564d6845fc4a3241d31624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>bins</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a3f784596923e2952f60ec6aed559dc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>boxes</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a22da88c6d7e9b5055c7efea5377fe22a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>xi</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a1fafb0697f3b0e10a49feaa3a7c968b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>xin</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ac77bf8d15a36f9c9d6ac027f941c637f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>delx</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a739f4804ed18831e8117203a52d64c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>weight</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a985174803127dea0b999e76c1e5ac1fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>vol</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ab6e6e337f0b02eab3b55b231243bd45d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector_int</type>
      <name>bin</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a3ebafe21cc51d0996cac65840869ef1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector_int</type>
      <name>box</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>ad14576f06b81c1ceb708c53d1c26146e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>d</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a1cb5adb561952b3755dd9e7851c30fd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>it_start</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a90e133600804fe34440a9fef3ed4402b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>it_num</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a35a9890538795ab8b3f7b28381777282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>samples</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a8a1f427d73606dd413494382689dcb32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>calls_per_box</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>acbc330ccc746c2595071a29cc442ff3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>a0435216c87f1c77c2ca985f75f85efb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const size_t</type>
      <name>bins_max</name>
      <anchorfile>classo2scl_1_1mcarlo__vegas.html</anchorfile>
      <anchor>aaaa8bc67247e13628def1d3523f7c17b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mcmc_base</name>
    <filename>classo2scl_1_1mcmc__base.html</filename>
    <templarg>func_t</templarg>
    <templarg>measure_t</templarg>
    <templarg>data_t</templarg>
    <templarg>vec_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_seed</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ab4880e138f2aa1ad04953c08fc293660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ad379006a5fe7ae7be0a0b2cfa7905c47</anchor>
      <arglist>(size_t nparams, vec_t &amp;init, vec_t &amp;low, vec_t &amp;high, func_t &amp;func, measure_t &amp;meas)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a3d2eb6d5c52f0baf1b3b6a1198dbc88c</anchor>
      <arglist>(o2scl::prob_cond_mdim&lt; vec_t &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unset_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ad7bcbca6a23d4f493eaaac6404ef9669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_accept</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a25abf1fa3ce7f57b036cb9fcab1a0f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_reject</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>aedded6c81b1a9f2c8e67995b3c0b7967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>aff_inv</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>adf05a85f2d00232431cbd6c89e987c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_fac</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a51e4019958b991c42b53f6d30a4a0005</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a7cf8eb8bd2770034bf4b32a3eb5e632b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>user_seed</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a393be4e5674a23f615e63d9983989ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a694d6ea5af03f1bf704d9f235ccfe256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_bad_steps</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a00a8f3a9c0c190f2306eaa116a54c953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_walk</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>aa681a4cf6842f1df7fab6dd96439021b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a8b718e4011130f30e86da5c67c21bf39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>always_accept</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a8c0b07c29e129247ea70ff8444dd9d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ai_initial_step</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a17dbfa16cda17e5e32358ad1498d0fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>mcmc_done</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ac3c317c53a9de93b371c4128ac628ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>mcmc_skip</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ab24b47c00fd51b8c627b7dbf77defaac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a27062f36b49923054f999ccd16bf40c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mcmc_cleanup</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a57ba2ac7335c73191c76d0ec1b530b28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>best_point</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a37973a573a8c17bc05a6d9421789f8ab</anchor>
      <arglist>(vec_t &amp;best, double w_best, data_t &amp;dat)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>rng_gsl</type>
      <name>rg</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>adeac2a636ee2143b17fa2585fd62e80d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::prob_cond_mdim&lt; vec_t &gt; *</type>
      <name>prop_dist</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>aa78805e6d3acbb7e79b25ff7b5ec744e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>pd_mode</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a765e396ea30bbe190367467f8e057a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>abaa793e946d582e2472e506aad1ac533</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vec_t &gt;</type>
      <name>current</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a8479538b5e3c46a8413a6f88be1508c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; data_t &gt;</type>
      <name>data_arr</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a08f5a8219546784adea69f8218a2b876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>switch_arr</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ac153cef5f05fc2ea297ffdafb6a99a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>ret_value_counts</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a0e3423c4a3427cfafa70a2810cc86f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>curr_walker</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>af24dace773807c2a89a2fd63f38edc09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n_init_points</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>adff9bb8dc6038d6225a638d6d81b9f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a27062f36b49923054f999ccd16bf40c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mcmc_cleanup</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a57ba2ac7335c73191c76d0ec1b530b28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>best_point</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a37973a573a8c17bc05a6d9421789f8ab</anchor>
      <arglist>(vec_t &amp;best, double w_best, data_t &amp;dat)</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_accept</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a25abf1fa3ce7f57b036cb9fcab1a0f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_reject</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>aedded6c81b1a9f2c8e67995b3c0b7967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>aff_inv</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>adf05a85f2d00232431cbd6c89e987c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_fac</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a51e4019958b991c42b53f6d30a4a0005</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a7cf8eb8bd2770034bf4b32a3eb5e632b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>user_seed</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a393be4e5674a23f615e63d9983989ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a694d6ea5af03f1bf704d9f235ccfe256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_bad_steps</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a00a8f3a9c0c190f2306eaa116a54c953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_walk</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>aa681a4cf6842f1df7fab6dd96439021b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a8b718e4011130f30e86da5c67c21bf39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>always_accept</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a8c0b07c29e129247ea70ff8444dd9d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ai_initial_step</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a17dbfa16cda17e5e32358ad1498d0fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ad379006a5fe7ae7be0a0b2cfa7905c47</anchor>
      <arglist>(size_t nparams, vec_t &amp;init, vec_t &amp;low, vec_t &amp;high, func_t &amp;func, measure_t &amp;meas)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a3d2eb6d5c52f0baf1b3b6a1198dbc88c</anchor>
      <arglist>(o2scl::prob_cond_mdim&lt; vec_t &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unset_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ad7bcbca6a23d4f493eaaac6404ef9669</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mcmc_base&lt; func_t, std::function&lt; int(const vec_t &amp;, double, size_t, bool, data_t &amp;)&gt;, data_t, vec_t &gt;</name>
    <filename>classo2scl_1_1mcmc__base.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_seed</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ab4880e138f2aa1ad04953c08fc293660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ad379006a5fe7ae7be0a0b2cfa7905c47</anchor>
      <arglist>(size_t nparams, vec_t &amp;init, vec_t &amp;low, vec_t &amp;high, func_t &amp;func, std::function&lt; int(const vec_t &amp;, double, size_t, bool, data_t &amp;)&gt; &amp;meas)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a3d2eb6d5c52f0baf1b3b6a1198dbc88c</anchor>
      <arglist>(o2scl::prob_cond_mdim&lt; vec_t &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unset_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ad7bcbca6a23d4f493eaaac6404ef9669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_accept</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a25abf1fa3ce7f57b036cb9fcab1a0f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_reject</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>aedded6c81b1a9f2c8e67995b3c0b7967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>aff_inv</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>adf05a85f2d00232431cbd6c89e987c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_fac</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a51e4019958b991c42b53f6d30a4a0005</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a7cf8eb8bd2770034bf4b32a3eb5e632b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>user_seed</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a393be4e5674a23f615e63d9983989ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a694d6ea5af03f1bf704d9f235ccfe256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_bad_steps</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a00a8f3a9c0c190f2306eaa116a54c953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_walk</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>aa681a4cf6842f1df7fab6dd96439021b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a8b718e4011130f30e86da5c67c21bf39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>always_accept</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a8c0b07c29e129247ea70ff8444dd9d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ai_initial_step</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a17dbfa16cda17e5e32358ad1498d0fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>mcmc_done</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ac3c317c53a9de93b371c4128ac628ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>mcmc_skip</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ab24b47c00fd51b8c627b7dbf77defaac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a27062f36b49923054f999ccd16bf40c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mcmc_cleanup</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a57ba2ac7335c73191c76d0ec1b530b28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>best_point</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a37973a573a8c17bc05a6d9421789f8ab</anchor>
      <arglist>(vec_t &amp;best, double w_best, data_t &amp;dat)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>rng_gsl</type>
      <name>rg</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>adeac2a636ee2143b17fa2585fd62e80d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::prob_cond_mdim&lt; vec_t &gt; *</type>
      <name>prop_dist</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>aa78805e6d3acbb7e79b25ff7b5ec744e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>pd_mode</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a765e396ea30bbe190367467f8e057a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>abaa793e946d582e2472e506aad1ac533</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vec_t &gt;</type>
      <name>current</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a8479538b5e3c46a8413a6f88be1508c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; data_t &gt;</type>
      <name>data_arr</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a08f5a8219546784adea69f8218a2b876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>switch_arr</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ac153cef5f05fc2ea297ffdafb6a99a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>ret_value_counts</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a0e3423c4a3427cfafa70a2810cc86f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>curr_walker</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>af24dace773807c2a89a2fd63f38edc09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n_init_points</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>adff9bb8dc6038d6225a638d6d81b9f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_accept</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a25abf1fa3ce7f57b036cb9fcab1a0f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_reject</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>aedded6c81b1a9f2c8e67995b3c0b7967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>aff_inv</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>adf05a85f2d00232431cbd6c89e987c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_fac</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a51e4019958b991c42b53f6d30a4a0005</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a7cf8eb8bd2770034bf4b32a3eb5e632b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>user_seed</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a393be4e5674a23f615e63d9983989ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a694d6ea5af03f1bf704d9f235ccfe256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_bad_steps</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a00a8f3a9c0c190f2306eaa116a54c953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_walk</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>aa681a4cf6842f1df7fab6dd96439021b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a8b718e4011130f30e86da5c67c21bf39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>always_accept</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a8c0b07c29e129247ea70ff8444dd9d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ai_initial_step</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a17dbfa16cda17e5e32358ad1498d0fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a27062f36b49923054f999ccd16bf40c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mcmc_cleanup</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a57ba2ac7335c73191c76d0ec1b530b28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>best_point</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a37973a573a8c17bc05a6d9421789f8ab</anchor>
      <arglist>(vec_t &amp;best, double w_best, data_t &amp;dat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ad379006a5fe7ae7be0a0b2cfa7905c47</anchor>
      <arglist>(size_t nparams, vec_t &amp;init, vec_t &amp;low, vec_t &amp;high, func_t &amp;func, std::function&lt; int(const vec_t &amp;, double, size_t, bool, data_t &amp;)&gt; &amp;meas)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>a3d2eb6d5c52f0baf1b3b6a1198dbc88c</anchor>
      <arglist>(o2scl::prob_cond_mdim&lt; vec_t &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unset_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__base.html</anchorfile>
      <anchor>ad7bcbca6a23d4f493eaaac6404ef9669</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mcmc_cli</name>
    <filename>classo2scl_1_1mcmc__cli.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::mcmc_mpi</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>run</name>
      <anchorfile>classo2scl_1_1mcmc__cli.html</anchorfile>
      <anchor>a0fdf4c43cac4f9dbec0617bb7294c869</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setup_cli</name>
      <anchorfile>classo2scl_1_1mcmc__cli.html</anchorfile>
      <anchor>af8f6d2951df414a229f3c94830de489b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>first_update</name>
      <anchorfile>classo2scl_1_1mcmc__cli.html</anchorfile>
      <anchor>ac54f69478af6d99637cd183ce8bfbe1a</anchor>
      <arglist>(o2scl_hdf::hdf_file &amp;hf)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::cli</type>
      <name>cl</name>
      <anchorfile>classo2scl_1_1mcmc__cli.html</anchorfile>
      <anchor>a2fbce4eedb6b75d44eadb775cb16ec81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>cl_args</name>
      <anchorfile>classo2scl_1_1mcmc__cli.html</anchorfile>
      <anchor>a0fbcd1f515541ec1adcf93bf1cfbd828</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setup_cli</name>
      <anchorfile>classo2scl_1_1mcmc__cli.html</anchorfile>
      <anchor>af8f6d2951df414a229f3c94830de489b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mcmc_mpi</name>
    <filename>classo2scl_1_1mcmc__mpi.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::mcmc_table</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_seed</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a5186570025a156910fca4ad3b39b489c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ac269c5010aa43fd4423443d618a5ed77</anchor>
      <arglist>(size_t np, vec_t &amp;init, vec_t &amp;low, vec_t &amp;high, func_t &amp;func, fill_t &amp;fill)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_files</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>aa86940e6a68e6de69fb3eee78180f1b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>add_line</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a2de0efd7291443e7940d9ee1996b4d7e</anchor>
      <arglist>(const ubvector &amp;pars, double weight, size_t ix, bool new_meas, data_t &amp;dat, fill_t &amp;fill)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>af32d1be4159e80c37b271c33bdaaf4fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>best_point</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a5d3edaa044297f460ae8a87752d0015e</anchor>
      <arglist>(ubvector &amp;best, double w_best)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>first_update</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ac9feaceb34fdff9acfa2f278c114134c</anchor>
      <arglist>(o2scl_hdf::hdf_file &amp;hf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_initial_point</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a526fafe6c15bb27ee12b87e37fca3314</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mcmc_mpi</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>af592142770075a5402e1611b41de20c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::ofstream</type>
      <name>scr_out</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>acbd3fc7e7f4cb19ae323c42d30230103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>file_opened</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ac04f0d565058f0c1a2f776edda231e0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ubvector</type>
      <name>initial_point</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a4b5a383f42cbec4c0df5c0092ed73565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>initial_point_file</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a5b36ba2aca892b86b34044228dd28c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>first_file_update</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a63628c4a03791ce28d27c5ebbd5dbd9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>chain_index</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a49db5f6a392412e93b7a7609a081f90e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_iters</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a56312f9f9b91a17a0f4b76a21e8f8f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>max_time</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a7d982fb57cfdd2b47ebdc6215f70de4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>output_meas</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a3d709ee8d2969a13f3bb7a99920b292e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>prefix</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ae3dc57405ed08289e7034590fd8e1d9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>file_update_iters</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a0ca424149e276462e62f87095d428c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_chain_size</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ac84105cab22458c719d5652b805dc128</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::err_hnd_cpp</type>
      <name>error_handler</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a8251da888fcee7184079fded6838b4f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n_params</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>afce363cbaab641c023092afe6dcf3092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>low_copy</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a968986913a261fee59ae82b14a94ea01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>high_copy</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>af9f2c3f63e7939239519cea8a1b6e219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_rank</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ab1471899b7e7d37ea6bd20eeae77c122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_nprocs</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ab52a3ef45a1ce149c9f75d039182b32b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mpi_start_time</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>af49d3721c2ec21ef58f08e74bc6f921a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_rank</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ab1471899b7e7d37ea6bd20eeae77c122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_nprocs</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ab52a3ef45a1ce149c9f75d039182b32b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mpi_start_time</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>af49d3721c2ec21ef58f08e74bc6f921a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_iters</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a56312f9f9b91a17a0f4b76a21e8f8f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>max_time</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a7d982fb57cfdd2b47ebdc6215f70de4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>output_meas</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a3d709ee8d2969a13f3bb7a99920b292e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>prefix</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ae3dc57405ed08289e7034590fd8e1d9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>file_update_iters</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a0ca424149e276462e62f87095d428c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_chain_size</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ac84105cab22458c719d5652b805dc128</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>af32d1be4159e80c37b271c33bdaaf4fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>best_point</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a5d3edaa044297f460ae8a87752d0015e</anchor>
      <arglist>(ubvector &amp;best, double w_best)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>first_update</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>ac9feaceb34fdff9acfa2f278c114134c</anchor>
      <arglist>(o2scl_hdf::hdf_file &amp;hf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_initial_point</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>a526fafe6c15bb27ee12b87e37fca3314</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;sv, bool itive_com)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mcmc_mpi</name>
      <anchorfile>classo2scl_1_1mcmc__mpi.html</anchorfile>
      <anchor>af592142770075a5402e1611b41de20c4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mcmc_para_base</name>
    <filename>classo2scl_1_1mcmc__para__base.html</filename>
    <templarg>func_t</templarg>
    <templarg>measure_t</templarg>
    <templarg>data_t</templarg>
    <templarg>vec_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>aa75dbbf79a31fe7558afa44e064206b7</anchor>
      <arglist>(size_t nparams, vec_t &amp;low, vec_t &amp;high, std::vector&lt; func_t &gt; &amp;func, std::vector&lt; measure_t &gt; &amp;meas)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af288f9925992d01fe740a53c3f8c01a1</anchor>
      <arglist>(o2scl::prob_cond_mdim&lt; vec_t &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unset_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a56f4bf5b9ccfa71c0c54b7456964281a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_iters</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a73e5a1c02dd0ee77b6921d3cf9e76fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>prefix</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ad1f228144d5cd85636274f8b9214f4e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_threads</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a17b597e4b358aff9f5686a5863d592f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ubvector &gt;</type>
      <name>initial_points</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a34a41054f08775f612dbec7cf25ec1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>n_accept</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a1a5417ba7fe5922457bf00db808c8388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>n_reject</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a4802e2e52fee10b2931b2d2a79a299c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>aff_inv</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a20839fd457d65b7978516f3e7cadc498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_fac</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a8afce6529a68fa5b6d2c67b2bc9905bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a9a3bea32c08b0751e3b13e40676a686e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>user_seed</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ad4dd6d26239f01ea01f9f8ea8e94087d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a1cb0da730d4a58307e0ab70901c1cf64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_bad_steps</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a68a9377225f6693d445a4d31e331ed04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_walk</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ae170d1b6dfbf12066a7633e36b36fea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>acd650bb300dd77102dd09a7ba793b213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>always_accept</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af78d6d04edc17dcef8f2ff2eab524a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ai_initial_step</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a9ea86f46f9ef13adc74bd0d0674291dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>mcmc_done</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a2766dbbd72e85995d20f3220297b3d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>mcmc_skip</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a60811f3e025123ec408c1bce36c1d61d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af67e42e5735bf97abe97638d65e21909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mcmc_cleanup</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ade184f0137cd502ca5ff4307802fbd18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>best_point</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a52d166a762a9ff702d0a852f199b5a82</anchor>
      <arglist>(vec_t &amp;best, double w_best, data_t &amp;dat)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>max_time</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a88583a6df9ceda420dcbb97f509ceff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ofstream</type>
      <name>scr_out</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a8dba6053294f1aa8d2f0c83544e2bb15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; rng_gsl &gt;</type>
      <name>rg</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>accdc90b8c518c4cc02689fffcce233b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::prob_cond_mdim&lt; vec_t &gt; *</type>
      <name>prop_dist</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a69e6146168bc39ae28214bb482fa27b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>pd_mode</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ae69b847954d29b6339868ef6996a29b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ab84db1799afcb59e1ca92bec123c9f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vec_t &gt;</type>
      <name>current</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a5563bf8e51916f741ffdbf37404fd0e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; data_t &gt;</type>
      <name>data_arr</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a8a195bb8dbdd8e15a46a88dab67bcca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>switch_arr</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>aca8102cac2852f61059daedbe3ee80c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; size_t &gt; &gt;</type>
      <name>ret_value_counts</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a6e4792ef9308f759c19f3d58ad14fbad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>curr_walker</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a9abeead67600092aca8fd1be6122012d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_rank</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a267d06cea8168bf0f483788e2c8ea5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_nprocs</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ab87b3196442f65bd79c8c0ed8191466d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mpi_start_time</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a0979e83d5b57934d6e568af7fb740f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_rank</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a267d06cea8168bf0f483788e2c8ea5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_nprocs</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ab87b3196442f65bd79c8c0ed8191466d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mpi_start_time</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a0979e83d5b57934d6e568af7fb740f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af67e42e5735bf97abe97638d65e21909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mcmc_cleanup</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ade184f0137cd502ca5ff4307802fbd18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>best_point</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a52d166a762a9ff702d0a852f199b5a82</anchor>
      <arglist>(vec_t &amp;best, double w_best, data_t &amp;dat)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>n_accept</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a1a5417ba7fe5922457bf00db808c8388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>n_reject</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a4802e2e52fee10b2931b2d2a79a299c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>aff_inv</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a20839fd457d65b7978516f3e7cadc498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_fac</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a8afce6529a68fa5b6d2c67b2bc9905bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a9a3bea32c08b0751e3b13e40676a686e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>user_seed</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ad4dd6d26239f01ea01f9f8ea8e94087d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a1cb0da730d4a58307e0ab70901c1cf64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_bad_steps</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a68a9377225f6693d445a4d31e331ed04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_walk</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ae170d1b6dfbf12066a7633e36b36fea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>acd650bb300dd77102dd09a7ba793b213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>always_accept</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af78d6d04edc17dcef8f2ff2eab524a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ai_initial_step</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a9ea86f46f9ef13adc74bd0d0674291dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>aa75dbbf79a31fe7558afa44e064206b7</anchor>
      <arglist>(size_t nparams, vec_t &amp;low, vec_t &amp;high, std::vector&lt; func_t &gt; &amp;func, std::vector&lt; measure_t &gt; &amp;meas)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af288f9925992d01fe740a53c3f8c01a1</anchor>
      <arglist>(o2scl::prob_cond_mdim&lt; vec_t &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unset_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a56f4bf5b9ccfa71c0c54b7456964281a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mcmc_para_base&lt; func_t, std::function&lt; int(const vec_t &amp;, double, size_t, bool, data_t &amp;)&gt;, data_t, vec_t &gt;</name>
    <filename>classo2scl_1_1mcmc__para__base.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>aa75dbbf79a31fe7558afa44e064206b7</anchor>
      <arglist>(size_t nparams, vec_t &amp;low, vec_t &amp;high, std::vector&lt; func_t &gt; &amp;func, std::vector&lt; std::function&lt; int(const vec_t &amp;, double, size_t, bool, data_t &amp;)&gt; &gt; &amp;meas)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af288f9925992d01fe740a53c3f8c01a1</anchor>
      <arglist>(o2scl::prob_cond_mdim&lt; vec_t &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unset_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a56f4bf5b9ccfa71c0c54b7456964281a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_iters</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a73e5a1c02dd0ee77b6921d3cf9e76fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>prefix</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ad1f228144d5cd85636274f8b9214f4e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_threads</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a17b597e4b358aff9f5686a5863d592f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ubvector &gt;</type>
      <name>initial_points</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a34a41054f08775f612dbec7cf25ec1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>n_accept</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a1a5417ba7fe5922457bf00db808c8388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>n_reject</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a4802e2e52fee10b2931b2d2a79a299c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>aff_inv</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a20839fd457d65b7978516f3e7cadc498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_fac</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a8afce6529a68fa5b6d2c67b2bc9905bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a9a3bea32c08b0751e3b13e40676a686e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>user_seed</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ad4dd6d26239f01ea01f9f8ea8e94087d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a1cb0da730d4a58307e0ab70901c1cf64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_bad_steps</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a68a9377225f6693d445a4d31e331ed04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_walk</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ae170d1b6dfbf12066a7633e36b36fea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>acd650bb300dd77102dd09a7ba793b213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>always_accept</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af78d6d04edc17dcef8f2ff2eab524a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ai_initial_step</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a9ea86f46f9ef13adc74bd0d0674291dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>mcmc_done</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a2766dbbd72e85995d20f3220297b3d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>mcmc_skip</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a60811f3e025123ec408c1bce36c1d61d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af67e42e5735bf97abe97638d65e21909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mcmc_cleanup</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ade184f0137cd502ca5ff4307802fbd18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>best_point</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a52d166a762a9ff702d0a852f199b5a82</anchor>
      <arglist>(vec_t &amp;best, double w_best, data_t &amp;dat)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>max_time</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a88583a6df9ceda420dcbb97f509ceff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ofstream</type>
      <name>scr_out</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a8dba6053294f1aa8d2f0c83544e2bb15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; rng_gsl &gt;</type>
      <name>rg</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>accdc90b8c518c4cc02689fffcce233b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::prob_cond_mdim&lt; vec_t &gt; *</type>
      <name>prop_dist</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a69e6146168bc39ae28214bb482fa27b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>pd_mode</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ae69b847954d29b6339868ef6996a29b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ab84db1799afcb59e1ca92bec123c9f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vec_t &gt;</type>
      <name>current</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a5563bf8e51916f741ffdbf37404fd0e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; data_t &gt;</type>
      <name>data_arr</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a8a195bb8dbdd8e15a46a88dab67bcca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>switch_arr</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>aca8102cac2852f61059daedbe3ee80c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; size_t &gt; &gt;</type>
      <name>ret_value_counts</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a6e4792ef9308f759c19f3d58ad14fbad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>curr_walker</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a9abeead67600092aca8fd1be6122012d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_rank</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a267d06cea8168bf0f483788e2c8ea5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_nprocs</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ab87b3196442f65bd79c8c0ed8191466d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mpi_start_time</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a0979e83d5b57934d6e568af7fb740f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_rank</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a267d06cea8168bf0f483788e2c8ea5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpi_nprocs</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ab87b3196442f65bd79c8c0ed8191466d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mpi_start_time</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a0979e83d5b57934d6e568af7fb740f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>n_accept</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a1a5417ba7fe5922457bf00db808c8388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>n_reject</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a4802e2e52fee10b2931b2d2a79a299c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>aff_inv</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a20839fd457d65b7978516f3e7cadc498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_fac</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a8afce6529a68fa5b6d2c67b2bc9905bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_warm_up</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a9a3bea32c08b0751e3b13e40676a686e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>user_seed</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ad4dd6d26239f01ea01f9f8ea8e94087d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a1cb0da730d4a58307e0ab70901c1cf64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_bad_steps</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a68a9377225f6693d445a4d31e331ed04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>n_walk</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ae170d1b6dfbf12066a7633e36b36fea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>acd650bb300dd77102dd09a7ba793b213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>always_accept</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af78d6d04edc17dcef8f2ff2eab524a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ai_initial_step</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a9ea86f46f9ef13adc74bd0d0674291dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af67e42e5735bf97abe97638d65e21909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mcmc_cleanup</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>ade184f0137cd502ca5ff4307802fbd18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>best_point</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a52d166a762a9ff702d0a852f199b5a82</anchor>
      <arglist>(vec_t &amp;best, double w_best, data_t &amp;dat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>aa75dbbf79a31fe7558afa44e064206b7</anchor>
      <arglist>(size_t nparams, vec_t &amp;low, vec_t &amp;high, std::vector&lt; func_t &gt; &amp;func, std::vector&lt; std::function&lt; int(const vec_t &amp;, double, size_t, bool, data_t &amp;)&gt; &gt; &amp;meas)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>af288f9925992d01fe740a53c3f8c01a1</anchor>
      <arglist>(o2scl::prob_cond_mdim&lt; vec_t &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unset_proposal</name>
      <anchorfile>classo2scl_1_1mcmc__para__base.html</anchorfile>
      <anchor>a56f4bf5b9ccfa71c0c54b7456964281a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mcmc_para_table</name>
    <filename>classo2scl_1_1mcmc__para__table.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>mcmc_para_base&lt; func_t, std::function&lt; int(const vec_t &amp;, double, size_t, bool, data_t &amp;)&gt;, data_t, vec_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>write_files</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a6ead2638f1d0f427a355b99b437243ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>mcmc_cleanup</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a836c6146238cd95cf89fe2a6752184da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ac_coeffs</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a2382dbd8c720bee81d3b3313d136bedf</anchor>
      <arglist>(size_t ncols, ubmatrix &amp;ac_coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ac_lengths</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a9a760324c217167066c2e8e0105b6bac</anchor>
      <arglist>(size_t ncols, ubmatrix &amp;ac_coeffs_cols, ubvector &amp;ac_lengths)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reorder_table</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a0b1e2f0f106712b962454f40bad88241</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reblock</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a1e542d3d18762c07ba8b8f6dfbe9fb04</anchor>
      <arglist>(size_t n_blocks)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_names_units</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>adcc14beef6bde9c16568b6255562e2dd</anchor>
      <arglist>(std::vector&lt; std::string &gt; names, std::vector&lt; std::string &gt; units)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a68d4fb42991f4a89d34d2e682206c996</anchor>
      <arglist>(size_t nparams, vec_t &amp;low, vec_t &amp;high, std::vector&lt; func_t &gt; &amp;func, std::vector&lt; fill_t &gt; &amp;fill)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; o2scl::table_units&lt;&gt; &gt;</type>
      <name>get_table</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a0c13ef9c0b475744f5e1681902b9a6ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_table</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a36ac88469358ac27609d23c0f23780a9</anchor>
      <arglist>(std::shared_ptr&lt; o2scl::table_units&lt;&gt; &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_chain_sizes</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>aaba5f1d04c99521cfb0b1dd5e318ad49</anchor>
      <arglist>(std::vector&lt; size_t &gt; &amp;csizes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>add_line</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>ae9e2eea16ab07bdbdc7459068ba1e90c</anchor>
      <arglist>(const vec_t &amp;pars, double log_weight, size_t walker_ix, bool new_meas, data_t &amp;dat, size_t i_thread, fill_t &amp;fill)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allow_estimates</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a0f914d6bc4753c7cbd23d868a9481543</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::function&lt; int(const vec_t &amp;, double, size_t, bool, data_t &amp;)&gt;</type>
      <name>internal_measure_t</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a5c0279b02dc30f6cbad50199b3f1d9d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>mcmc_para_base&lt; func_t, internal_measure_t, data_t, vec_t &gt;</type>
      <name>parent_t</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>ae65b426955a1424ef9e0cc152c6c17ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a436c7f7cc217d22004bf5432abf219f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>fill_line</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>acea18e153e2a2653a5c4cc18048ae573</anchor>
      <arglist>(const vec_t &amp;pars, double log_weight, std::vector&lt; double &gt; &amp;line, data_t &amp;dat, size_t i_walker, fill_t &amp;fill)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>col_names</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>aa55a132d3fcc58e27e462b5a0d8c6a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>col_units</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a198f81998f685cf50eb050b879f23a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; o2scl::table_units&lt;&gt; &gt;</type>
      <name>table</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>aea04bcb479a3b2b3d45ce3019c7a34b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>walker_rows</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a15def555cfa018752989b9f539a93aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interpm_idw&lt; double * &gt;</type>
      <name>esti</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>ae1198fd41028987c831f616b56668e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_names_units</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>adcc14beef6bde9c16568b6255562e2dd</anchor>
      <arglist>(std::vector&lt; std::string &gt; names, std::vector&lt; std::string &gt; units)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a68d4fb42991f4a89d34d2e682206c996</anchor>
      <arglist>(size_t nparams, vec_t &amp;low, vec_t &amp;high, std::vector&lt; func_t &gt; &amp;func, std::vector&lt; fill_t &gt; &amp;fill)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; o2scl::table_units&lt;&gt; &gt;</type>
      <name>get_table</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a0c13ef9c0b475744f5e1681902b9a6ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_table</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>a36ac88469358ac27609d23c0f23780a9</anchor>
      <arglist>(std::shared_ptr&lt; o2scl::table_units&lt;&gt; &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_chain_sizes</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>aaba5f1d04c99521cfb0b1dd5e318ad49</anchor>
      <arglist>(std::vector&lt; size_t &gt; &amp;csizes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>add_line</name>
      <anchorfile>classo2scl_1_1mcmc__para__table.html</anchorfile>
      <anchor>ae9e2eea16ab07bdbdc7459068ba1e90c</anchor>
      <arglist>(const vec_t &amp;pars, double log_weight, size_t walker_ix, bool new_meas, data_t &amp;dat, size_t i_thread, fill_t &amp;fill)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mcmc_table</name>
    <filename>classo2scl_1_1mcmc__table.html</filename>
    <templarg>func_t</templarg>
    <templarg>fill_t</templarg>
    <templarg>data_t</templarg>
    <templarg>vec_t</templarg>
    <base>mcmc_base&lt; func_t, std::function&lt; int(const vec_t &amp;, double, size_t, bool, data_t &amp;)&gt;, data_t, vec_t &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reblock</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a08643977998d6090fcaaef254ace5204</anchor>
      <arglist>(size_t n_blocks)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_names_units</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a75b340e385d072cd46cd1d8ef589196f</anchor>
      <arglist>(std::vector&lt; std::string &gt; names, std::vector&lt; std::string &gt; units)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a9f9750f7f485a12a287b971d36eb8899</anchor>
      <arglist>(size_t nparams, vec_t &amp;init, vec_t &amp;low, vec_t &amp;high, func_t &amp;func, fill_t &amp;fill)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; o2scl::table_units&lt;&gt; &gt;</type>
      <name>get_table</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a416ca0c606370ae30bc1859d24524a30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_table</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a88831cda67fd525e2fa42d4dfb38778e</anchor>
      <arglist>(std::shared_ptr&lt; o2scl::table_units&lt;&gt; &gt; &amp;t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>add_line</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a5c5c8ab2b03a7aaa2056587b34e7cce7</anchor>
      <arglist>(const vec_t &amp;pars, double log_weight, size_t walker_ix, bool new_meas, data_t &amp;dat, fill_t &amp;fill)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::function&lt; int(const vec_t &amp;, double, size_t, bool, data_t &amp;)&gt;</type>
      <name>internal_measure_t</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a3ac68f3ce1ed93149e0ca9f5a73681dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>mcmc_base&lt; func_t, internal_measure_t, data_t, vec_t &gt;</type>
      <name>parent_t</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>acc69c0d443bf247f370afb3958216ae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc_init</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a6338fc59728edc831227408fb3638b66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>fill_line</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a851863c956fa5cd64b0e482dd377a792</anchor>
      <arglist>(const vec_t &amp;pars, double log_weight, std::vector&lt; double &gt; &amp;line, data_t &amp;dat, fill_t &amp;fill)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>col_names</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a33e04d32fc851681d8c24e97d976f3ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>col_units</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a9ed566bcbf51e526adcc83b8ea260fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; o2scl::table_units&lt;&gt; &gt;</type>
      <name>tab</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>aad9bc11420850aba642de28242491f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>walker_rows</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a2d72c4076cba9db56a10635122940ba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_names_units</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a75b340e385d072cd46cd1d8ef589196f</anchor>
      <arglist>(std::vector&lt; std::string &gt; names, std::vector&lt; std::string &gt; units)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mcmc</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a9f9750f7f485a12a287b971d36eb8899</anchor>
      <arglist>(size_t nparams, vec_t &amp;init, vec_t &amp;low, vec_t &amp;high, func_t &amp;func, fill_t &amp;fill)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; o2scl::table_units&lt;&gt; &gt;</type>
      <name>get_table</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a416ca0c606370ae30bc1859d24524a30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_table</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a88831cda67fd525e2fa42d4dfb38778e</anchor>
      <arglist>(std::shared_ptr&lt; o2scl::table_units&lt;&gt; &gt; &amp;t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>add_line</name>
      <anchorfile>classo2scl_1_1mcmc__table.html</anchorfile>
      <anchor>a5c5c8ab2b03a7aaa2056587b34e7cce7</anchor>
      <arglist>(const vec_t &amp;pars, double log_weight, size_t walker_ix, bool new_meas, data_t &amp;dat, fill_t &amp;fill)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::min_base</name>
    <filename>classo2scl_1_1min__base.html</filename>
    <templarg>func_t</templarg>
    <templarg>dfunc_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a21ff80abc1a67676fdefebc9c117e069</anchor>
      <arglist>(double x, double y, int iter, double value=0.0, double limit=0.0, std::string comment=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a967fd3d6ee110e3cd087e4f3dd20bd6a</anchor>
      <arglist>(double &amp;x, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min_bkt</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a5480c5cd3811253ab232224405ca798e</anchor>
      <arglist>(double &amp;x2, double x1, double x3, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min_de</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>ad17d9cabca0545ede2d9be1326d02b4b</anchor>
      <arglist>(double &amp;x, double &amp;fmin, func_t &amp;func, dfunc_t &amp;df)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>bracket</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>aab5fc71c5fd70c4cca1de4c7747f59e8</anchor>
      <arglist>(double &amp;ax, double &amp;bx, double &amp;cx, double &amp;fa, double &amp;fb, double &amp;fc, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a8f854321d691f76e56f72455b2f08a61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a50b580f0ca64b18fe8453b343a68a295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>af3a568d200ef380336f90c5965cbee52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a8a18c8d3e16a1f543bf11afad8c98e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a0f8d2f9aea86a576e114fb69b5640314</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>aee271348d94da7245b3bd6650e006464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bracket_iter</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>abb1e555de81811a7eb201b102b70c24d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a649f92a7a6783391da0b6057161c6ee0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>min_base&lt; func_t, func_t &gt;</name>
    <filename>classo2scl_1_1min__base.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a21ff80abc1a67676fdefebc9c117e069</anchor>
      <arglist>(double x, double y, int iter, double value=0.0, double limit=0.0, std::string comment=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a967fd3d6ee110e3cd087e4f3dd20bd6a</anchor>
      <arglist>(double &amp;x, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min_bkt</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a5480c5cd3811253ab232224405ca798e</anchor>
      <arglist>(double &amp;x2, double x1, double x3, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min_de</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>ad17d9cabca0545ede2d9be1326d02b4b</anchor>
      <arglist>(double &amp;x, double &amp;fmin, func_t &amp;func, func_t &amp;df)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>bracket</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>aab5fc71c5fd70c4cca1de4c7747f59e8</anchor>
      <arglist>(double &amp;ax, double &amp;bx, double &amp;cx, double &amp;fa, double &amp;fb, double &amp;fc, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a8f854321d691f76e56f72455b2f08a61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a50b580f0ca64b18fe8453b343a68a295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>af3a568d200ef380336f90c5965cbee52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a8a18c8d3e16a1f543bf11afad8c98e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a0f8d2f9aea86a576e114fb69b5640314</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>aee271348d94da7245b3bd6650e006464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bracket_iter</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>abb1e555de81811a7eb201b102b70c24d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1min__base.html</anchorfile>
      <anchor>a649f92a7a6783391da0b6057161c6ee0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::min_bkt_base</name>
    <filename>classo2scl_1_1min__bkt__base.html</filename>
    <templarg>func_t</templarg>
    <templarg>dfunc_t</templarg>
    <base>o2scl::min_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1min__bkt__base.html</anchorfile>
      <anchor>a9383eb6ba0c37522a95f5328eb91b627</anchor>
      <arglist>(double &amp;x, double &amp;fmin, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min_bkt</name>
      <anchorfile>classo2scl_1_1min__bkt__base.html</anchorfile>
      <anchor>a64dbbc1b2cebf6ced3e6e8e6ec336655</anchor>
      <arglist>(double &amp;x2, double x1, double x3, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>min_de</name>
      <anchorfile>classo2scl_1_1min__bkt__base.html</anchorfile>
      <anchor>a2bab86005d97ef760297149d50f3fc7b</anchor>
      <arglist>(double &amp;x, double &amp;fmin, func_t &amp;func, dfunc_t &amp;df)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1min__bkt__base.html</anchorfile>
      <anchor>a02c1639f67a61923e804427a12634278</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bracket_iter</name>
      <anchorfile>classo2scl_1_1min__bkt__base.html</anchorfile>
      <anchor>a27caaf7adf95f2bfd420cf91fd11cc82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>min_bkt_base&lt; func_t &gt;</name>
    <filename>classo2scl_1_1min__bkt__base.html</filename>
    <base>min_base&lt; func_t, func_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1min__bkt__base.html</anchorfile>
      <anchor>a9383eb6ba0c37522a95f5328eb91b627</anchor>
      <arglist>(double &amp;x, double &amp;fmin, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min_bkt</name>
      <anchorfile>classo2scl_1_1min__bkt__base.html</anchorfile>
      <anchor>a64dbbc1b2cebf6ced3e6e8e6ec336655</anchor>
      <arglist>(double &amp;x2, double x1, double x3, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>min_de</name>
      <anchorfile>classo2scl_1_1min__bkt__base.html</anchorfile>
      <anchor>a2bab86005d97ef760297149d50f3fc7b</anchor>
      <arglist>(double &amp;x, double &amp;fmin, func_t &amp;func, func_t &amp;df)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1min__bkt__base.html</anchorfile>
      <anchor>a02c1639f67a61923e804427a12634278</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bracket_iter</name>
      <anchorfile>classo2scl_1_1min__bkt__base.html</anchorfile>
      <anchor>a27caaf7adf95f2bfd420cf91fd11cc82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::min_brent_boost</name>
    <filename>classo2scl_1_1min__brent__boost.html</filename>
    <templarg></templarg>
    <base>min_bkt_base&lt; func_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>min_bkt</name>
      <anchorfile>classo2scl_1_1min__brent__boost.html</anchorfile>
      <anchor>a41b71551fb5c7e5c6695cf73fa7b159f</anchor>
      <arglist>(double &amp;x2, double x1, double x3, double &amp;fmin, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1min__brent__boost.html</anchorfile>
      <anchor>a2334ffc76b60fa195c39dd3040f293ef</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::min_brent_gsl</name>
    <filename>classo2scl_1_1min__brent__gsl.html</filename>
    <templarg></templarg>
    <base>min_bkt_base&lt; func_t &gt;</base>
    <member kind="function">
      <type>int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>a46ca4873a88640737798857051b05954</anchor>
      <arglist>(func_t &amp;func, double xmin, double lower, double upper)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_with_values</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>a2447f74eca2a0e84c6e817557dda9219</anchor>
      <arglist>(func_t &amp;func, double xmin, double fmin, double lower, double fl, double upper, double fu)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>ac5a4a9af19b536b8fb5ec55d0cee5b7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>min_bkt</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>aca3e85dad87a5013875b13fe3d83682d</anchor>
      <arglist>(double &amp;x2, double x1, double x3, double &amp;fmin, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>a6686f3b388e3276a6389d5632d567b7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x_minimum</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>a11173fb3dc112c45a342e6b5962469a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x_lower</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>a0e1909e3144a8eb3d275a91228a55f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x_upper</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>a249e45f6e8597205df8956be78b9f7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>f_minimum</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>ae2bad8cd84ca8c6e320562686b1153db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>f_lower</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>a5213f8ce24d8aae5621b0f5d18b27a80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>f_upper</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>af06e2006e9f9835ebfe5566ce56e4afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>compute_f_values</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>af3324d83755e3ccc726c075403675baa</anchor>
      <arglist>(func_t &amp;func, double xminimum, double *fminimum, double xlower, double *flower, double xupper, double *fupper)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>uf</name>
      <anchorfile>classo2scl_1_1min__brent__gsl.html</anchorfile>
      <anchor>ad01689ed009df966f118a05365bf2c33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::min_cern</name>
    <filename>classo2scl_1_1min__cern.html</filename>
    <templarg></templarg>
    <base>min_bkt_base&lt; func_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>min_bkt</name>
      <anchorfile>classo2scl_1_1min__cern.html</anchorfile>
      <anchor>adf499d3b25cc2039945049b9ae72872e</anchor>
      <arglist>(double &amp;x, double a, double b, double &amp;y, func_t &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_delta</name>
      <anchorfile>classo2scl_1_1min__cern.html</anchorfile>
      <anchor>a1eaaa024ba9274358769b41fec3c64b3</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1min__cern.html</anchorfile>
      <anchor>a8c19575f918da8b6bc4f58d81992456f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>min_type</name>
      <anchorfile>classo2scl_1_1min__cern.html</anchorfile>
      <anchor>a651ad1954412732ca6463f0784f36a80</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>nint</name>
      <anchorfile>classo2scl_1_1min__cern.html</anchorfile>
      <anchor>a3bf436e9fbf2616ad23d4b5ec3c4f11a</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>delta</name>
      <anchorfile>classo2scl_1_1min__cern.html</anchorfile>
      <anchor>ab9b93e801e062b55ee08c7f76a417c0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>delta_set</name>
      <anchorfile>classo2scl_1_1min__cern.html</anchorfile>
      <anchor>a05929aa5a4606298d40cfc12cabb2d05</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::min_de_base</name>
    <filename>classo2scl_1_1min__de__base.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::min_base</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1min__de__base.html</anchorfile>
      <anchor>a9e56c6cfd8716fa7147953ae660daf55</anchor>
      <arglist>(double &amp;x, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min_bkt</name>
      <anchorfile>classo2scl_1_1min__de__base.html</anchorfile>
      <anchor>af68100182f354e2626c9e1aeb44626ab</anchor>
      <arglist>(double &amp;x2, double x1, double x3, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min_de</name>
      <anchorfile>classo2scl_1_1min__de__base.html</anchorfile>
      <anchor>a9f14fa5bc7041142d8516096dd169b63</anchor>
      <arglist>(double &amp;x, double &amp;fmin, func_t &amp;func, dfunc_t &amp;df)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1min__de__base.html</anchorfile>
      <anchor>af97a4bdb35c83a79ea926bdc888e5952</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::min_quad_golden</name>
    <filename>classo2scl_1_1min__quad__golden.html</filename>
    <templarg></templarg>
    <base>min_bkt_base&lt; func_t &gt;</base>
    <member kind="function">
      <type>int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>a633b56c35537734233f36e13b4164ed9</anchor>
      <arglist>(func_t &amp;func, double xmin, double lower, double upper)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_with_values</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>a128849ee7a6830d4244ca39a6d3ac7c3</anchor>
      <arglist>(func_t &amp;func, double xmin, double fmin, double lower, double fl, double upper, double fu)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>ac7b10d198a530c438a0eb0c2ffee2ebd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>min_bkt</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>a5f14eb6444c5dea9ef7ad904a2e4b1cc</anchor>
      <arglist>(double &amp;x2, double x1, double x3, double &amp;fmin, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>ad821f774e9cac3e32b0a3c55c9255633</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x_minimum</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>a68292be675ff7a7b8f58e04fb42b70ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x_lower</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>a5490efdb6c98d13c4279c9b52cf7477d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x_upper</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>a7e9d47e0c6dd60d0b86f582cdb1dfde2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>f_minimum</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>a6ee0fd0571cea99750160aa52820a04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>f_lower</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>ac03fc6f9c0f2ecd1c38aa404cb639f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>f_upper</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>a190638da0c35152a5aedb107a7f1c045</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>compute_f_values</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>ab9d189dfa367b918be1382f508eed873</anchor>
      <arglist>(func_t &amp;func, double xminimum, double *fminimum, double xlower, double *flower, double xupper, double *fupper)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>uf</name>
      <anchorfile>classo2scl_1_1min__quad__golden.html</anchorfile>
      <anchor>a86ec288624287f9f2e59a4e30a899269</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mm_funct_strings</name>
    <filename>classo2scl_1_1mm__funct__strings.html</filename>
    <member kind="function">
      <type></type>
      <name>mm_funct_strings</name>
      <anchorfile>classo2scl_1_1mm__funct__strings.html</anchorfile>
      <anchor>a8719947b3a5e5b793af12936e28163eb</anchor>
      <arglist>(int nv, vec_string_t &amp;exprs, vec_string_t &amp;var_arr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_parm</name>
      <anchorfile>classo2scl_1_1mm__funct__strings.html</anchorfile>
      <anchor>aac6b68d54deaedbf4223611330849d5f</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1mm__funct__strings.html</anchorfile>
      <anchor>aee7627de8001c914c3ed2f53102f8c42</anchor>
      <arglist>(size_t nv, const vec_t &amp;x, vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_function</name>
      <anchorfile>classo2scl_1_1mm__funct__strings.html</anchorfile>
      <anchor>af8718270fb32fb20bfa48a1f020561d9</anchor>
      <arglist>(int nv, vec_string_t &amp;exprs, vec_string_t &amp;var_arr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; calculator &gt;</type>
      <name>calc</name>
      <anchorfile>classo2scl_1_1mm__funct__strings.html</anchorfile>
      <anchor>a789216bec1f82f3928e3c7a53c1e3332</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>vars</name>
      <anchorfile>classo2scl_1_1mm__funct__strings.html</anchorfile>
      <anchor>a68e660e89d92c34ee27e682f381094c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>st_forms</name>
      <anchorfile>classo2scl_1_1mm__funct__strings.html</anchorfile>
      <anchor>a7e9475bd000191fab32c3d6d69c5ad6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>st_vars</name>
      <anchorfile>classo2scl_1_1mm__funct__strings.html</anchorfile>
      <anchor>a81b9623abc2138c9851b416d443c5e63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>st_nv</name>
      <anchorfile>classo2scl_1_1mm__funct__strings.html</anchorfile>
      <anchor>a2fd705533a89abc277fedf70ce39e368</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_base</name>
    <filename>classo2scl_1_1mmin__base.html</filename>
    <templarg>func_t</templarg>
    <templarg>dfunc_t</templarg>
    <templarg>vec_t</templarg>
    <member kind="function">
      <type>int</type>
      <name>set_verbose_stream</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a71cac4e418a86ab567975b5d004a4036</anchor>
      <arglist>(std::ostream &amp;out, std::istream &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>aabfaa3c6f83d8299743751ece3fcb36f</anchor>
      <arglist>(size_t nvar, vec_t &amp;x, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_de</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>ad7a4ac3321c5626c5bc5ec2e67bd4b92</anchor>
      <arglist>(size_t nvar, vec_t &amp;x, double &amp;fmin, func_t &amp;func, dfunc_t &amp;dfunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a4653292956f3ab6da6c72d77ed9a239a</anchor>
      <arglist>(size_t nv, vec2_t &amp;x, double y, int iter, double value, double limit, std::string comment)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a9c6b874dd748ed843abbeea0b79aa933</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mmin_base</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a2332f7a58b488e92a1862bae6627a593</anchor>
      <arglist>(const mmin_base&lt; func_t, dfunc_t, vec_t &gt; &amp;mb)</arglist>
    </member>
    <member kind="function">
      <type>mmin_base&lt; func_t, dfunc_t, vec_t &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a2b7bf6993eb21538d0db1d5a8825a041</anchor>
      <arglist>(const mmin_base&lt; func_t, dfunc_t, vec_t &gt; &amp;mb)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>aa2af23648749fa1cacf39e178adf495b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a1cb4348a149d3711bc7d848a525b8e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a41c6bba75553bd1d39c01c2bb36e3bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a58735bbe35c8f233ef23bd3551bd6698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a9cebd3a42ae8807bad625b0b3d2a6ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a3f8e3edae612d2b4e16fcbf6608f3ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>outs</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a5427f16b374b7552ae300e1e63f977ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::istream *</type>
      <name>ins</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a485459fa0d385f7bfe4892f42a613e7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mmin_base&lt; func_t, func_t, vec_t &gt;</name>
    <filename>classo2scl_1_1mmin__base.html</filename>
    <member kind="function">
      <type></type>
      <name>mmin_base</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a2332f7a58b488e92a1862bae6627a593</anchor>
      <arglist>(const mmin_base&lt; func_t, func_t, vec_t &gt; &amp;mb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_verbose_stream</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a71cac4e418a86ab567975b5d004a4036</anchor>
      <arglist>(std::ostream &amp;out, std::istream &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>aabfaa3c6f83d8299743751ece3fcb36f</anchor>
      <arglist>(size_t nvar, vec_t &amp;x, double &amp;fmin, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_de</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>ad7a4ac3321c5626c5bc5ec2e67bd4b92</anchor>
      <arglist>(size_t nvar, vec_t &amp;x, double &amp;fmin, func_t &amp;func, func_t &amp;dfunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a4653292956f3ab6da6c72d77ed9a239a</anchor>
      <arglist>(size_t nv, vec2_t &amp;x, double y, int iter, double value, double limit, std::string comment)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a9c6b874dd748ed843abbeea0b79aa933</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mmin_base&lt; func_t, func_t, vec_t &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a2b7bf6993eb21538d0db1d5a8825a041</anchor>
      <arglist>(const mmin_base&lt; func_t, func_t, vec_t &gt; &amp;mb)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>aa2af23648749fa1cacf39e178adf495b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a1cb4348a149d3711bc7d848a525b8e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a41c6bba75553bd1d39c01c2bb36e3bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a58735bbe35c8f233ef23bd3551bd6698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a9cebd3a42ae8807bad625b0b3d2a6ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a3f8e3edae612d2b4e16fcbf6608f3ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>outs</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a5427f16b374b7552ae300e1e63f977ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::istream *</type>
      <name>ins</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a485459fa0d385f7bfe4892f42a613e7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mmin_base&lt; mmin_fix_params&lt; func_t, vec_t &gt;, mmin_fix_params&lt; func_t, vec_t &gt;, vec_t &gt;</name>
    <filename>classo2scl_1_1mmin__base.html</filename>
    <member kind="function">
      <type></type>
      <name>mmin_base</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a2332f7a58b488e92a1862bae6627a593</anchor>
      <arglist>(const mmin_base&lt; mmin_fix_params&lt; func_t, vec_t &gt;, mmin_fix_params&lt; func_t, vec_t &gt;, vec_t &gt; &amp;mb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_verbose_stream</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a71cac4e418a86ab567975b5d004a4036</anchor>
      <arglist>(std::ostream &amp;out, std::istream &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>aabfaa3c6f83d8299743751ece3fcb36f</anchor>
      <arglist>(size_t nvar, vec_t &amp;x, double &amp;fmin, mmin_fix_params&lt; func_t, vec_t &gt; &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_de</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>ad7a4ac3321c5626c5bc5ec2e67bd4b92</anchor>
      <arglist>(size_t nvar, vec_t &amp;x, double &amp;fmin, mmin_fix_params&lt; func_t, vec_t &gt; &amp;func, mmin_fix_params&lt; func_t, vec_t &gt; &amp;dfunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a4653292956f3ab6da6c72d77ed9a239a</anchor>
      <arglist>(size_t nv, vec2_t &amp;x, double y, int iter, double value, double limit, std::string comment)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a9c6b874dd748ed843abbeea0b79aa933</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mmin_base&lt; mmin_fix_params&lt; func_t, vec_t &gt;, mmin_fix_params&lt; func_t, vec_t &gt;, vec_t &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a2b7bf6993eb21538d0db1d5a8825a041</anchor>
      <arglist>(const mmin_base&lt; mmin_fix_params&lt; func_t, vec_t &gt;, mmin_fix_params&lt; func_t, vec_t &gt;, vec_t &gt; &amp;mb)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>aa2af23648749fa1cacf39e178adf495b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a1cb4348a149d3711bc7d848a525b8e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a41c6bba75553bd1d39c01c2bb36e3bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a58735bbe35c8f233ef23bd3551bd6698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a9cebd3a42ae8807bad625b0b3d2a6ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a3f8e3edae612d2b4e16fcbf6608f3ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>outs</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a5427f16b374b7552ae300e1e63f977ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::istream *</type>
      <name>ins</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a485459fa0d385f7bfe4892f42a613e7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mmin_base&lt; multi_funct &gt;</name>
    <filename>classo2scl_1_1mmin__base.html</filename>
    <member kind="function">
      <type></type>
      <name>mmin_base</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a2332f7a58b488e92a1862bae6627a593</anchor>
      <arglist>(const mmin_base&lt; multi_funct, multi_funct, boost::numeric::ublas::vector&lt; double &gt; &gt; &amp;mb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_verbose_stream</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a71cac4e418a86ab567975b5d004a4036</anchor>
      <arglist>(std::ostream &amp;out, std::istream &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>aabfaa3c6f83d8299743751ece3fcb36f</anchor>
      <arglist>(size_t nvar, boost::numeric::ublas::vector&lt; double &gt; &amp;x, double &amp;fmin, multi_funct &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_de</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>ad7a4ac3321c5626c5bc5ec2e67bd4b92</anchor>
      <arglist>(size_t nvar, boost::numeric::ublas::vector&lt; double &gt; &amp;x, double &amp;fmin, multi_funct &amp;func, multi_funct &amp;dfunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a4653292956f3ab6da6c72d77ed9a239a</anchor>
      <arglist>(size_t nv, vec2_t &amp;x, double y, int iter, double value, double limit, std::string comment)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a9c6b874dd748ed843abbeea0b79aa933</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mmin_base&lt; multi_funct, multi_funct, boost::numeric::ublas::vector&lt; double &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a2b7bf6993eb21538d0db1d5a8825a041</anchor>
      <arglist>(const mmin_base&lt; multi_funct, multi_funct, boost::numeric::ublas::vector&lt; double &gt; &gt; &amp;mb)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>aa2af23648749fa1cacf39e178adf495b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a1cb4348a149d3711bc7d848a525b8e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a41c6bba75553bd1d39c01c2bb36e3bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a58735bbe35c8f233ef23bd3551bd6698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a9cebd3a42ae8807bad625b0b3d2a6ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a3f8e3edae612d2b4e16fcbf6608f3ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>outs</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a5427f16b374b7552ae300e1e63f977ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::istream *</type>
      <name>ins</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a485459fa0d385f7bfe4892f42a613e7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mmin_base&lt; multi_funct, multi_funct, boost::numeric::ublas::vector&lt; double &gt; &gt;</name>
    <filename>classo2scl_1_1mmin__base.html</filename>
    <member kind="function">
      <type></type>
      <name>mmin_base</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a2332f7a58b488e92a1862bae6627a593</anchor>
      <arglist>(const mmin_base&lt; multi_funct, multi_funct, boost::numeric::ublas::vector&lt; double &gt; &gt; &amp;mb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_verbose_stream</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a71cac4e418a86ab567975b5d004a4036</anchor>
      <arglist>(std::ostream &amp;out, std::istream &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>aabfaa3c6f83d8299743751ece3fcb36f</anchor>
      <arglist>(size_t nvar, boost::numeric::ublas::vector&lt; double &gt; &amp;x, double &amp;fmin, multi_funct &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_de</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>ad7a4ac3321c5626c5bc5ec2e67bd4b92</anchor>
      <arglist>(size_t nvar, boost::numeric::ublas::vector&lt; double &gt; &amp;x, double &amp;fmin, multi_funct &amp;func, multi_funct &amp;dfunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a4653292956f3ab6da6c72d77ed9a239a</anchor>
      <arglist>(size_t nv, vec2_t &amp;x, double y, int iter, double value, double limit, std::string comment)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a9c6b874dd748ed843abbeea0b79aa933</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mmin_base&lt; multi_funct, multi_funct, boost::numeric::ublas::vector&lt; double &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a2b7bf6993eb21538d0db1d5a8825a041</anchor>
      <arglist>(const mmin_base&lt; multi_funct, multi_funct, boost::numeric::ublas::vector&lt; double &gt; &gt; &amp;mb)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>aa2af23648749fa1cacf39e178adf495b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a1cb4348a149d3711bc7d848a525b8e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a41c6bba75553bd1d39c01c2bb36e3bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a58735bbe35c8f233ef23bd3551bd6698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a9cebd3a42ae8807bad625b0b3d2a6ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a3f8e3edae612d2b4e16fcbf6608f3ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>outs</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a5427f16b374b7552ae300e1e63f977ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::istream *</type>
      <name>ins</name>
      <anchorfile>classo2scl_1_1mmin__base.html</anchorfile>
      <anchor>a485459fa0d385f7bfe4892f42a613e7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_bfgs2</name>
    <filename>classo2scl_1_1mmin__bfgs2.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>dfunc_t</templarg>
    <templarg>auto_grad_t</templarg>
    <templarg>def_auto_grad_t</templarg>
    <base>mmin_base&lt; func_t, func_t, vec_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>afd190c076d0a534131b69606c176c478</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>a60ffc6be974f7cba36431ba6b31358f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>a215b19c1b7a802fdefb16553b4e1543f</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>a5e45aca4aeeaaebf6abfce3b0408b142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>restart</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>a040541a3fe214efd9d04adba5a4103fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>ad664cff3fd84a28f1016d40cd4ee5ada</anchor>
      <arglist>(vec_t &amp;x, double u_step_size, double tol_u, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_de</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>ac735718d91344c2e253fe0b9d3e495fc</anchor>
      <arglist>(vec_t &amp;x, double u_step_size, double tol_u, func_t &amp;ufunc, dfunc_t &amp;udfunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>a70cfd2ac7d43e3fa75ee7a96e2cb9d88</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, double &amp;fmin, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_de</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>a914b1ef96d16a8e83d0bdd04bbea5e24</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, double &amp;fmin, func_t &amp;ufunc, dfunc_t &amp;udfunc)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_size</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>a43a1222d0b8f8912c245ef8e8878969d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lmin_tol</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>a3d426e3c55d37d44f90fcc4402950880</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>def_auto_grad_t</type>
      <name>def_grad</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>aad369f3ea5db91c02379357c5e2af9d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mmin_linmin_gsl</type>
      <name>lm</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>a4df3400c102b7d234407dc2dac9d825a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>aba6430c3cba45364ce23e411550e09f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>auto_grad_t *</type>
      <name>agrad</name>
      <anchorfile>classo2scl_1_1mmin__bfgs2.html</anchorfile>
      <anchor>aead51d08026d7045e20953518e428430</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_conf</name>
    <filename>classo2scl_1_1mmin__conf.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>dfunc_t</templarg>
    <templarg>auto_grad_t</templarg>
    <templarg>def_auto_grad_t</templarg>
    <base>o2scl::mmin_gsl_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a8133f39d15805f13e9d0cdf12cc9b4d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a7ff21cbbfe937b571f178ed143edd3e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>ab5afa418f881a495cc40576b4afb205b</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>ade9ff2165754783e0214e3492303b48d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>restart</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a0215217e0894adff481bce81388a5159</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a484c2a7d1b05e41aea27b6c25850a8ac</anchor>
      <arglist>(vec_t &amp;x, double u_step_size, double tol_u, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_de</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>abd15a85bee761ed5d1d9df40ee258d6c</anchor>
      <arglist>(vec_t &amp;x, double u_step_size, double tol_u, func_t &amp;ufunc, dfunc_t &amp;udfunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a59f551d55b96b1ae89f31f760cb84553</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, double &amp;fmin, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_de</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>ae7cf9e9135fe7c055f9747c2d4f2ec11</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, double &amp;fmin, func_t &amp;ufunc, dfunc_t &amp;udfunc)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lmin_tol</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a357e8feb36e67a3dfd65b1843d140702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>step_size</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>ace1ccd6de3bedd4f15617cc1cc5a6af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>iter</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>afbe2565873381502b4ab0ccecd061fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>ad8cb6756edeed4ef87ba10c869037520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a392b05a688e31947abddaad35de91fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x1</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>af83a280bbe512b8b8de71aa99591cf9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>dx1</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>aaae71a2434e7a76d45e56d4b9545f8a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x2</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a7bb26d4aeeb26a780f3419d08fe5d297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>pnorm</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a3dd859a97858aa4b1825c17283d733fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>p</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>aa4acc76f3cc68f53f6cf2ac26bdde29f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>g0norm</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a60aaf5309c12a4d1e2cd99aee7c4a81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>g0</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a78ea1d89f225e1b4119800a238a747cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>ugx</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a1abea12dfb6e80504bac6a3c69785e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>ugg</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a0581b2e6fd9b566b311a0087c2c00eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>udx</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>aee27f87038fbe118663b5b23bbd315ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>it_min</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>aa3b2f5003d51d5f26da64c085e62d95e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>iter</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>afbe2565873381502b4ab0ccecd061fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>ad8cb6756edeed4ef87ba10c869037520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a392b05a688e31947abddaad35de91fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x1</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>af83a280bbe512b8b8de71aa99591cf9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>dx1</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>aaae71a2434e7a76d45e56d4b9545f8a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x2</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a7bb26d4aeeb26a780f3419d08fe5d297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>pnorm</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a3dd859a97858aa4b1825c17283d733fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>p</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>aa4acc76f3cc68f53f6cf2ac26bdde29f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>g0norm</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a60aaf5309c12a4d1e2cd99aee7c4a81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>g0</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a78ea1d89f225e1b4119800a238a747cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>ugx</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a1abea12dfb6e80504bac6a3c69785e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>ugg</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a0581b2e6fd9b566b311a0087c2c00eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>udx</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>aee27f87038fbe118663b5b23bbd315ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>it_min</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>aa3b2f5003d51d5f26da64c085e62d95e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a7ff21cbbfe937b571f178ed143edd3e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>ab5afa418f881a495cc40576b4afb205b</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>ade9ff2165754783e0214e3492303b48d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>restart</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a0215217e0894adff481bce81388a5159</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a484c2a7d1b05e41aea27b6c25850a8ac</anchor>
      <arglist>(vec_t &amp;x, double u_step_size, double tol_u, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_de</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>abd15a85bee761ed5d1d9df40ee258d6c</anchor>
      <arglist>(vec_t &amp;x, double u_step_size, double tol_u, func_t &amp;ufunc, dfunc_t &amp;udfunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>a59f551d55b96b1ae89f31f760cb84553</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, double &amp;fmin, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_de</name>
      <anchorfile>classo2scl_1_1mmin__conf.html</anchorfile>
      <anchor>ae7cf9e9135fe7c055f9747c2d4f2ec11</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, double &amp;fmin, func_t &amp;ufunc, dfunc_t &amp;udfunc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_conp</name>
    <filename>classo2scl_1_1mmin__conp.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>dfunc_t</templarg>
    <templarg>auto_grad_t</templarg>
    <templarg>def_auto_grad_t</templarg>
    <base>o2scl::mmin_conf</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__conp.html</anchorfile>
      <anchor>a92bd7919fe0b18a98d3a19cec4209fb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__conp.html</anchorfile>
      <anchor>a367daf9841b9ef026c08a7799c471ac4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_constr</name>
    <filename>classo2scl_1_1mmin__constr.html</filename>
    <templarg>func_t</templarg>
    <templarg>dfunc_t</templarg>
    <templarg>hfunc_t</templarg>
    <templarg>vec_t</templarg>
    <base>o2scl::mmin_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ae1676cb702af375dc7ec811237b0aaae</anchor>
      <arglist>(const size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>restart</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ab52fcb8d0887b5aee3c63eeb2b6f51cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ab2c352d9fe22c0bc7d91f843ca50a448</anchor>
      <arglist>(func_t &amp;fn, dfunc_t &amp;dfn, vec_t &amp;init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_hess</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ad1cab1abbe1eccf0c0868004101f3e85</anchor>
      <arglist>(func_t &amp;fn, dfunc_t &amp;dfn, hfunc_t &amp;hfn, vec_t &amp;init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_constraints</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>af249a259ab9e02ede5929fcb09a961f6</anchor>
      <arglist>(size_t nc, vec_t &amp;lower, vec_t &amp;upper)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ab953e53689d4e7c3fc6a5d21fddf6758</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>is_optimal</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a281f6e95ac23db648e75d56bfabcec11</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a47663e3871777c8d8184970c5a4dc1b3</anchor>
      <arglist>(size_t nvar, vec_t &amp;xx, double &amp;fmin, func_t &amp;ff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_hess</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>afcdf301a7af6d95d33d314efa464f3ab</anchor>
      <arglist>(size_t nvar, vec_t &amp;xx, double &amp;fmin, func_t &amp;ff, dfunc_t &amp;df, hfunc_t &amp;hf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_de</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a2af85904d5080d2a529938eca98ccd19</anchor>
      <arglist>(size_t nvar, vec_t &amp;xx, double &amp;fmin, func_t &amp;ff, dfunc_t &amp;df)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a90f7667a506103224969222f2f7f286d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>shrink</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>af6058bf6cfadfbf99e8625906c50056a</anchor>
      <arglist>(const size_t nind, gsl_vector_uint *Ind, const vec_t &amp;V)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a72dc086ac53b3c95ef337d8627a8bbec</anchor>
      <arglist>(const size_t nind, gsl_vector_uint *Ind, const vec_t &amp;V)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>calc_f</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a6776b49d631aed3448ed3d4856b99298</anchor>
      <arglist>(const size_t nind, gsl_vector_uint *Ind, vec_t &amp;X, vec_t &amp;Xc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>calc_g</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ae31a0c2b56665515792e0b64d1aeb84f</anchor>
      <arglist>(const size_t nind, gsl_vector_uint *Ind, vec_t &amp;X, vec_t &amp;Xc, vec_t &amp;G)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>calc_Hv</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a939e17ec3c85119e881a9a0a386fc422</anchor>
      <arglist>(const size_t nind, gsl_vector_uint *Ind, vec_t &amp;X, vec_t &amp;Xc, vec_t &amp;V, vec_t &amp;Hv)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>f</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a3960103eddfc0b4303235e060ce9a639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a7560dcb32a79ba9b06dfd696aa04b5b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a925851af89f6f02b9289d522846f2ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>gradient</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a64852f6b56b61366f98d40e5bc02e702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>dx</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a2d1431f5c1d580bb27458acab45186da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>fcount</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ac999b24732ab7a05aa940a90284745dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>gcount</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a624c25ab80db363a8ba2519485819865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>hcount</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a37e15c52a779c0c8950b2e6e47b46f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ae88a16a38e011ff84b491d8003aea77e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nconstr</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a82e492ab11d79006b79e6cca56ffca44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a3857534ea0e32f2084a7bc1e5422d217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dfunc_t *</type>
      <name>dfunc</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ab2005c8caebdddb0600df5c2fa86e06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>hfunc_t *</type>
      <name>hfunc</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a8aef6b55cb4474a44e1dba9e4db5b1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>L</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>acc4b96e618a83e62b41fd9f5c01c71fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>U</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a858c50c145a0dcd3af2d28ce6a19d01f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>requires_hess</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a7d1eedafa4e9431f97517ed42378f37e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mmin_constr&lt; func_t, dfunc_t, ool_hfunct, vec_t &gt;</name>
    <filename>classo2scl_1_1mmin__constr.html</filename>
    <base>o2scl::mmin_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ae1676cb702af375dc7ec811237b0aaae</anchor>
      <arglist>(const size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>restart</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ab52fcb8d0887b5aee3c63eeb2b6f51cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ab2c352d9fe22c0bc7d91f843ca50a448</anchor>
      <arglist>(func_t &amp;fn, dfunc_t &amp;dfn, vec_t &amp;init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_hess</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ad1cab1abbe1eccf0c0868004101f3e85</anchor>
      <arglist>(func_t &amp;fn, dfunc_t &amp;dfn, ool_hfunct &amp;hfn, vec_t &amp;init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_constraints</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>af249a259ab9e02ede5929fcb09a961f6</anchor>
      <arglist>(size_t nc, vec_t &amp;lower, vec_t &amp;upper)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ab953e53689d4e7c3fc6a5d21fddf6758</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>is_optimal</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a281f6e95ac23db648e75d56bfabcec11</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a47663e3871777c8d8184970c5a4dc1b3</anchor>
      <arglist>(size_t nvar, vec_t &amp;xx, double &amp;fmin, func_t &amp;ff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_hess</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>afcdf301a7af6d95d33d314efa464f3ab</anchor>
      <arglist>(size_t nvar, vec_t &amp;xx, double &amp;fmin, func_t &amp;ff, dfunc_t &amp;df, ool_hfunct &amp;hf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_de</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a2af85904d5080d2a529938eca98ccd19</anchor>
      <arglist>(size_t nvar, vec_t &amp;xx, double &amp;fmin, func_t &amp;ff, dfunc_t &amp;df)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a90f7667a506103224969222f2f7f286d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>shrink</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>af6058bf6cfadfbf99e8625906c50056a</anchor>
      <arglist>(const size_t nind, gsl_vector_uint *Ind, const vec_t &amp;V)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a72dc086ac53b3c95ef337d8627a8bbec</anchor>
      <arglist>(const size_t nind, gsl_vector_uint *Ind, const vec_t &amp;V)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>calc_f</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a6776b49d631aed3448ed3d4856b99298</anchor>
      <arglist>(const size_t nind, gsl_vector_uint *Ind, vec_t &amp;X, vec_t &amp;Xc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>calc_g</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ae31a0c2b56665515792e0b64d1aeb84f</anchor>
      <arglist>(const size_t nind, gsl_vector_uint *Ind, vec_t &amp;X, vec_t &amp;Xc, vec_t &amp;G)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>calc_Hv</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a939e17ec3c85119e881a9a0a386fc422</anchor>
      <arglist>(const size_t nind, gsl_vector_uint *Ind, vec_t &amp;X, vec_t &amp;Xc, vec_t &amp;V, vec_t &amp;Hv)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>f</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a3960103eddfc0b4303235e060ce9a639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a7560dcb32a79ba9b06dfd696aa04b5b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a925851af89f6f02b9289d522846f2ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>gradient</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a64852f6b56b61366f98d40e5bc02e702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>dx</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a2d1431f5c1d580bb27458acab45186da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>fcount</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ac999b24732ab7a05aa940a90284745dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>gcount</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a624c25ab80db363a8ba2519485819865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>hcount</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a37e15c52a779c0c8950b2e6e47b46f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ae88a16a38e011ff84b491d8003aea77e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nconstr</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a82e492ab11d79006b79e6cca56ffca44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a3857534ea0e32f2084a7bc1e5422d217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dfunc_t *</type>
      <name>dfunc</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>ab2005c8caebdddb0600df5c2fa86e06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ool_hfunct *</type>
      <name>hfunc</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a8aef6b55cb4474a44e1dba9e4db5b1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>L</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>acc4b96e618a83e62b41fd9f5c01c71fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>U</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a858c50c145a0dcd3af2d28ce6a19d01f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>requires_hess</name>
      <anchorfile>classo2scl_1_1mmin__constr.html</anchorfile>
      <anchor>a7d1eedafa4e9431f97517ed42378f37e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_constr_gencan</name>
    <filename>classo2scl_1_1mmin__constr__gencan.html</filename>
    <templarg>param_t</templarg>
    <templarg>func_t</templarg>
    <templarg>dfunc_t</templarg>
    <templarg>hfunc_t</templarg>
    <templarg>vec_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>alloc</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a419d8b5af27b034b72a4bcb95648cae6</anchor>
      <arglist>(const size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a1e1e561f948bac77cce57f0c126dbff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a703b70494990877393e3f2556c39e409</anchor>
      <arglist>(func_t &amp;fn, dfunc_t &amp;dfn, hfunc_t &amp;hfn, vec_t &amp;init, param_t &amp;par)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>restart</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a3ee887953bc13eb7b6ca5781b8aed870</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>aa47f04a10394c52578180400138d106e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>is_optimal</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a490d49cc0f56571724e14973450d2972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a84426769f1eb0672a1edd02e16541b9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epsgpen</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a915fe578a52f66fc6b8a2f3722506e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epsgpsn</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>ab2dea054b73f59449f57688a034747da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fmin</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>aec5d637ea969a331028d0cd514fb8268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>udelta0</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a83bd96d4552f3572a93b312044dec4ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ucgmia</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>aedd910ddd02eb9f403916d80191c6c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ucgmib</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>ae6c4888c7d379f122b5368a5ad2e97c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cg_scre</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>af5c24441f3699882f85e8d00d46712e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>cg_gpnf</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>adba47251f798e02a4acbae9893ce7125</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>cg_epsi</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a2f0226ba343bb80794e379d7cca76884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>cg_epsf</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>aeec8e1ba7da358ad1551a4e7d2e626e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>cg_epsnqmp</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a3f76992a8c6f95769c2eff3155aae248</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cg_maxitnqmp</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a03ed31d1214e16e5af322fa8635b03be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nearlyq</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a5c28c36a2671e5678d798d2366933cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nint</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>aed17ec34cd133b398739d4f101fdca55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>next</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a1ca13e5d57bcc7552bf70a754b752665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mininterp</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>aa72b729908b787719720c2cf2f039e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxextrap</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a17a4f28a1daca5cb0c0dfa8fe7670676</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>trtype</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a7c81d6628474a9024c1a173c61cf3699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eta</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a7ef77c73cb9c64134ac08608ff10e30b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>delmin</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a05ed23350d0cdf1f397aac16407566d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lspgmi</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a794a839effc58e8f7fefb2c5227839cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lspgma</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>ab69e12f38521cee3e626b1768defac0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>theta</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>ad90b005b0201972fa7ce0d57f20b2116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>gamma</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a814da22aa20cf141a3f1c2cd71c36c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>beta</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>ad63aaf19a3f57cb0b604e1ece6b7e82d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sigma1</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a752e6a0b52c296f6745a3af8d1c29258</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sigma2</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a6f1f3e008313a4d1e6c0bd9536360ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epsrel</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>ae576fd2706969ae55ab3bbf60d2a8d6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epsabs</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a39a8bef0ecdbb9a618ad6cb5ad7ccd2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>infrel</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>aaaf593b6dc90d14dac58aa0fc0bd70e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>infabs</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>ad4f654a00714eb53295023be4eda9957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>cg_src</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>adb17191f8372a3018aac955290f7b2a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>S</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a131baccdc7acefb0a7ed163dbcdf7924</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>Y</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a59ddfc074b81dd21253c37953ce203f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>D</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a9ff66accecbe3d5e71fe7a32daebe6e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>cg_W</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>af4e3c1033c3069d3e3320be78e2b53d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>cg_R</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a19a926997c6cf82035e30162c1af0694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>cg_D</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a88bc34887e11d35e9c7cf1f1289b5dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>cg_Sprev</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>afd82453bb8cfc3c541fdf43d7e660128</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>Xtrial</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a0f5efa75e676b6ba5da0a260ec07416f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>tnls_Xtemp</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a41d1fbe758bad7b40d24181860c949a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>near_l</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a04a7e6a9c7fe6de8b9dc273bca22100b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>near_u</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>a3cf7561602c95b7e5ded5c662fdf2587</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>Ind</name>
      <anchorfile>classo2scl_1_1mmin__constr__gencan.html</anchorfile>
      <anchor>ac1759a505e9642d0cf779f69969d0b6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_constr_pgrad</name>
    <filename>classo2scl_1_1mmin__constr__pgrad.html</filename>
    <templarg>func_t</templarg>
    <templarg>dfunc_t</templarg>
    <templarg>vec_t</templarg>
    <base>mmin_constr&lt; func_t, dfunc_t, ool_hfunct, vec_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a7c381357904d8ecbd100225e25225a1b</anchor>
      <arglist>(const size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a86747b46a27702227820b87243c8627a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a072ca102114858f4af26ffa23b3b09d1</anchor>
      <arglist>(func_t &amp;fn, dfunc_t &amp;dfn, vec_t &amp;init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>restart</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>aee1b4605ea497c9648bf375323de0060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>aa33e581bdd25a2744f05d45ab4a3037d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>is_optimal</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a5126cb54a7e1b091d9eeff3219e10a37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a1dadcb577adb0f6868e21304dde5f231</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fmin</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a03d9e6169d9e86cb763a81899877748e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a0ae90851ff34421cd42bebffac8101d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a69c9107782c43629cff402b256a95372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sigma1</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a29eec8fb12eca8da96ac1f1dac7e200c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sigma2</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a05a967638c7c73a4fde8624df8682b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>ool_hfunct</type>
      <name>hfunc_t</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>ad30c99eba7f0ab198f64bba3dc122e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>proj</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a4f63657e48d4334310d9f60b4f378cc1</anchor>
      <arglist>(vec_t &amp;xt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>line_search</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>a0a05c533e425e717f818723397c8b7ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>xx</name>
      <anchorfile>classo2scl_1_1mmin__constr__pgrad.html</anchorfile>
      <anchor>add8b011c238c2b0c7ff869204c3845cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_constr_spg</name>
    <filename>classo2scl_1_1mmin__constr__spg.html</filename>
    <templarg>func_t</templarg>
    <templarg>dfunc_t</templarg>
    <templarg>vec_t</templarg>
    <base>mmin_constr&lt; func_t, dfunc_t, ool_hfunct, vec_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>afb87eadc7b7862073afd8ce8a231ded5</anchor>
      <arglist>(const size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>aa93d10ad19f1f6be1fbf2b1facc345c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>abc83db7bd1d3bc92a01bc9e8ae9a1081</anchor>
      <arglist>(func_t &amp;fn, dfunc_t &amp;dfn, vec_t &amp;init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>restart</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a856b50fd91b1248129cf7ad36cd5e631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a8f45fd556760f032c6e7cad6e312a17f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>is_optimal</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a89e0ffe661af4c8345150ef294aa5e06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>aaf821df40c95897980262434014611be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fmin</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>ae7dfa17d9ed8c5320dd214ee9aac3d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a82d356828f0003068c79d59367d46128</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alphamin</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>ad93f7870fd568a418fcd55f97ce5d4f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alphamax</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a45870cf02447cda2408e81431eb6e1bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>gamma</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>af3afc82851019e7871934b79754fde6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sigma1</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a540d070ebd410a581312d975632a83c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sigma2</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>abad3506de1162b9aa59667f4c25cf601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>M</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a58fef045c55b1edf6ca5d363f7a8cdbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>ool_hfunct</type>
      <name>hfunc_t</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a0fd1878bf4271bd086860e443a517f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>line_search</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a0ab7bc4b2215a835149be78b6fc38ae5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>proj</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a3396b62e6121b275ab0a2f17b9187ff7</anchor>
      <arglist>(vec_t &amp;xt)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>adc327c6d1a9743bc94f8fb01126d5367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>xx</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a52e2db6adde991119baf40b657795746</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>d</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>aa8726759aa0aca8a2766ca4a12e11d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>s</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>afc51894a3cdeb2c9ddf047d5e75ade15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>y</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a5248e16e07cda0441ac9288d2f3ebac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>fvec</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>af304f82dfc9d49e9cfe3811da74ae8b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>ac957b27a40edcd40c92d4ed572d4cc42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>tail</name>
      <anchorfile>classo2scl_1_1mmin__constr__spg.html</anchorfile>
      <anchor>a6bdcc66974c97b62ac55482f0a388799</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_fix_params</name>
    <filename>classo2scl_1_1mmin__fix__params.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <base>mmin_base&lt; func_t, func_t, vec_t &gt;</base>
    <member kind="typedef">
      <type>mmin_base&lt; mmin_fix_params&lt; func_t, vec_t &gt;, mmin_fix_params&lt; func_t, vec_t &gt;, vec_t &gt;</type>
      <name>base_mmin_t</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>ac0feac6f5a507f63073228e66836cd90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>mmin_simp2&lt; mmin_fix_params&lt; func_t, vec_t &gt;, vec_t &gt;</type>
      <name>def_mmin_t</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>a053c6bb3c141f14ac56dce2e8c4c9f22</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mmin_fix_params</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>a19eb6602e1fa6a6a0a9df13d157ce65e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>a53131cd90afeb0536aaac69c73f6edab</anchor>
      <arglist>(size_t nvar, vec_t &amp;x, double &amp;fmin, func_t &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mmin_fix</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>a034e1850240cae5a13ca13c2b90a7b32</anchor>
      <arglist>(size_t nvar, ubvector &amp;x, double &amp;fmin, bool_vec_t &amp;fix, multi_funct &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_mmin</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>ac53de53a04a6a40134bde02788724e1c</anchor>
      <arglist>(base_mmin_t &amp;min)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>a0503b84d880d0df5f63d484fafc96056</anchor>
      <arglist>(size_t nv, const vec_t &amp;x)</arglist>
    </member>
    <member kind="variable">
      <type>def_mmin_t</type>
      <name>def_mmin</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>a100f828de5a8600f2037408a6f87346b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>base_mmin_t *</type>
      <name>mmp</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>a239e38e0c0bf0ff8210145114aaf2f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>funcp</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>a402ec5fbcdd95ce53e857d375969149a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>unv</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>a038ff0d5dbad6c145228664f17c2bbf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nv_new</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>ac97017bfcee942066a5c78613af3ad34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>fixp</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>a42269d877d41d3b5e4b45d49eb60abb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>xp</name>
      <anchorfile>classo2scl_1_1mmin__fix__params.html</anchorfile>
      <anchor>ac319becd7fb6b1eb15e5f6ede094d380</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_gsl_base</name>
    <filename>classo2scl_1_1mmin__gsl__base.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>mmin_base&lt; func_t, func_t, vec_t &gt;</base>
    <member kind="function">
      <type>int</type>
      <name>base_set</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>ac3fc598c901f216f7eb0fbaf07d0c4ff</anchor>
      <arglist>(func_t &amp;ufunc, auto_grad_t &amp;u_def_grad)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>base_set_de</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>a9f4eab6802184f50a625a01b3e9df05e</anchor>
      <arglist>(func_t &amp;ufunc, dfunc_t &amp;udfunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>base_allocate</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>a554097385c07bb9c75e06e37bffba975</anchor>
      <arglist>(size_t nn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>base_free</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>a797b9f9436e334e2db85945764d54232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>deriv_h</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>a31632af9ab5a74f0afefd1eda94f3941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nmaxiter</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>aa532ccfeb0660cd3124432b083e8674e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>def_auto_grad_t</type>
      <name>def_grad</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>a9fe7195b15aca4af432bfc8f07182a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>take_step</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>adef69b4226b96d9f441ef50aaeea904c</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;px, double stepx, double lambda, vec_t &amp;x1x, vec_t &amp;dx)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>intermediate_point</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>a282212d4c7e94814f75d19e3c83267d1</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;px, double lambda, double pg, double stepa, double stepc, double fa, double fc, vec_t &amp;x1x, vec_t &amp;dx, vec_t &amp;gradient, double *stepx, double *f)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>af7bb05b247c9bc3e17c97ca8ff7f6d38</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;xp, double lambda, double stepa, double stepb, double stepc, double fa, double fb, double fc, double xtol, vec_t &amp;x1x, vec_t &amp;dx1x, vec_t &amp;x2x, vec_t &amp;dx2x, vec_t &amp;gradient, double *xstep, double *f, double *gnorm_u)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>a91159549a41ccfcc9e328bcda74844c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dfunc_t *</type>
      <name>grad</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>aee41916808b6de4d668791921247c9a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>auto_grad_t *</type>
      <name>agrad</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>a96c215b4593a4e36f5fbbdac6f8d0ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>grad_given</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>a57250e609c3be5cba766fa431e33a2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mmin__gsl__base.html</anchorfile>
      <anchor>a83cac075666f7c85239055e77722a380</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_linmin_gsl</name>
    <filename>classo2scl_1_1mmin__linmin__gsl.html</filename>
    <member kind="function">
      <type>int</type>
      <name>minimize</name>
      <anchorfile>classo2scl_1_1mmin__linmin__gsl.html</anchorfile>
      <anchor>aa4f6350772b88a12c25c138e8f92e051</anchor>
      <arglist>(mmin_wrap_gsl &amp;wrap, double rho, double sigma, double tau1, double tau2, double tau3, int order, double alpha1, double *alpha_new)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>interp_quad</name>
      <anchorfile>classo2scl_1_1mmin__linmin__gsl.html</anchorfile>
      <anchor>a86833cb2fd2d7b208445c7727b14adf4</anchor>
      <arglist>(double f0, double fp0, double f1, double zl, double zh)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>cubic</name>
      <anchorfile>classo2scl_1_1mmin__linmin__gsl.html</anchorfile>
      <anchor>adcdbbcc96d3a861752f046efcd6beb71</anchor>
      <arglist>(double c0, double c1, double c2, double c3, double z)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>check_extremum</name>
      <anchorfile>classo2scl_1_1mmin__linmin__gsl.html</anchorfile>
      <anchor>a1e511a6235dd488b0fd12c83e1545bb1</anchor>
      <arglist>(double c0, double c1, double c2, double c3, double z, double *zmin, double *fmin)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>interp_cubic</name>
      <anchorfile>classo2scl_1_1mmin__linmin__gsl.html</anchorfile>
      <anchor>a2b4ac106766720f78d2924a8cc8c9f02</anchor>
      <arglist>(double f0, double fp0, double f1, double fp1, double zl, double zh)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>interpolate</name>
      <anchorfile>classo2scl_1_1mmin__linmin__gsl.html</anchorfile>
      <anchor>a1ce5927c2b2aaa667a729e29298034ee</anchor>
      <arglist>(double a, double fa, double fpa, double b, double fb, double fpb, double xmin, double xmax, int order)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_simp2</name>
    <filename>classo2scl_1_1mmin__simp2.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <base>mmin_base&lt; func_t, func_t, vec_t &gt;</base>
    <member kind="function">
      <type>int</type>
      <name>set_step</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a99aa0eb42af0bb6555fb0b485b7c071a</anchor>
      <arglist>(size_t nv, vec2_t &amp;step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a284c1c47c5322eca065102437b277c4b</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, double &amp;fmin, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_twovec</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a92738a81dbe102cb8a94ad4fb4435f5f</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, vec_t &amp;xx2, double &amp;fmin, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mmin_simplex</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>acfba797b497d049606f20274deaea3f4</anchor>
      <arglist>(size_t nn, mat_t &amp;sx, double &amp;fmin, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aa506ef2390e8a8b1fc24d1d79321b3db</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>af15e283d49d42b1b8e51be8a4d9b5152</anchor>
      <arglist>(func_t &amp;ufunc, size_t n, vec_t &amp;ax, vec_t &amp;step_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_simplex</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ac85150acd4257c52e1af4fa9f28fb74d</anchor>
      <arglist>(func_t &amp;ufunc, mat_t &amp;sx)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a5648486951d12bbfee21323db7bddfac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad96f95d42e33310e251e9566b3944e9e</anchor>
      <arglist>(size_t nv, vec_t &amp;xx, vec_t *simp, double y, int iter, double value, double limit, std::string comment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad762c735eeaaff2679740e3a0d74f3a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a2a30b324c3789f3dc9ff4a982c471432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a3077c5ce74ae6dc8f240aef568bd1f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fval</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a8ca2ea8b488279512fbd221bf79cc921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>print_simplex</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ae04f6a187baf6aa28e86c656e9b492cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>compute_center</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a2b328562c73a3da10b9732e2b5dcade0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>compute_size</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad6b4b173c705fce9f0139ffa64193f32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>try_corner_move</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a623a4e89595471271a7367e14a3e485b</anchor>
      <arglist>(const double coeff, size_t corner, vec_t &amp;xc, func_t &amp;f, size_t nvar, double &amp;newval)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>update_point</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aae8b7b9a9dbe48a26893808fa2ec55c3</anchor>
      <arglist>(size_t i, vec_t &amp;xx, double val)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>contract_by_best</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a0106c9898559d8f8dbb227b96383f8fe</anchor>
      <arglist>(size_t best, func_t &amp;f, size_t nvar)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>x1</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ac5741dca7f3d34d177694c025fd72064</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>y1</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aa00b2289d8d930d83b5d658417934de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>ws1</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>adf91a6c3b3b3e8b0d9801f5d98ebb20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>ws2</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a9ebb28f7e5c5ba737075a8dce520ffda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>ws3</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a52650211e8b1b39f1fc4a4d9468e0c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>center</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a463e97ed03d394d712ec5e84142e35e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>delta</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aec0929c34f5d6003654f2303b5cf99b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>xmc</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad88fa58a1879930994dfd04554b93790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>S2</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a0c4ed7b09b34b920d8a3e17095a048bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aea3aa13ea260f2248e0268766da158d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a26668d357ee86ac5700ff597e84e4748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>set_called</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a30a0b309ad128dc309a0a106f1104ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>step_vec</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ab0c82dfb3c7bac891e60c563f94104e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>avoid_nonzero</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ab278802ac419f5752b87398674217102</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mmin_simp2&lt; mmin_fix_params&lt; func_t, vec_t &gt;, vec_t &gt;</name>
    <filename>classo2scl_1_1mmin__simp2.html</filename>
    <base>mmin_base&lt; mmin_fix_params&lt; func_t, vec_t &gt;, mmin_fix_params&lt; func_t, vec_t &gt;, vec_t &gt;</base>
    <member kind="function">
      <type>int</type>
      <name>set_step</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a99aa0eb42af0bb6555fb0b485b7c071a</anchor>
      <arglist>(size_t nv, vec2_t &amp;step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a284c1c47c5322eca065102437b277c4b</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, double &amp;fmin, mmin_fix_params&lt; func_t, vec_t &gt; &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_twovec</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a92738a81dbe102cb8a94ad4fb4435f5f</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, vec_t &amp;xx2, double &amp;fmin, mmin_fix_params&lt; func_t, vec_t &gt; &amp;ufunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mmin_simplex</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>acfba797b497d049606f20274deaea3f4</anchor>
      <arglist>(size_t nn, mat_t &amp;sx, double &amp;fmin, mmin_fix_params&lt; func_t, vec_t &gt; &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aa506ef2390e8a8b1fc24d1d79321b3db</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>af15e283d49d42b1b8e51be8a4d9b5152</anchor>
      <arglist>(mmin_fix_params&lt; func_t, vec_t &gt; &amp;ufunc, size_t n, vec_t &amp;ax, vec_t &amp;step_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_simplex</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ac85150acd4257c52e1af4fa9f28fb74d</anchor>
      <arglist>(mmin_fix_params&lt; func_t, vec_t &gt; &amp;ufunc, mat_t &amp;sx)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a5648486951d12bbfee21323db7bddfac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad96f95d42e33310e251e9566b3944e9e</anchor>
      <arglist>(size_t nv, vec_t &amp;xx, vec_t *simp, double y, int iter, double value, double limit, std::string comment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad762c735eeaaff2679740e3a0d74f3a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a2a30b324c3789f3dc9ff4a982c471432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a3077c5ce74ae6dc8f240aef568bd1f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fval</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a8ca2ea8b488279512fbd221bf79cc921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>print_simplex</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ae04f6a187baf6aa28e86c656e9b492cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>compute_center</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a2b328562c73a3da10b9732e2b5dcade0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>compute_size</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad6b4b173c705fce9f0139ffa64193f32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>try_corner_move</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a623a4e89595471271a7367e14a3e485b</anchor>
      <arglist>(const double coeff, size_t corner, vec_t &amp;xc, mmin_fix_params&lt; func_t, vec_t &gt; &amp;f, size_t nvar, double &amp;newval)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>update_point</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aae8b7b9a9dbe48a26893808fa2ec55c3</anchor>
      <arglist>(size_t i, vec_t &amp;xx, double val)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>contract_by_best</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a0106c9898559d8f8dbb227b96383f8fe</anchor>
      <arglist>(size_t best, mmin_fix_params&lt; func_t, vec_t &gt; &amp;f, size_t nvar)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>x1</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ac5741dca7f3d34d177694c025fd72064</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>y1</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aa00b2289d8d930d83b5d658417934de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>ws1</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>adf91a6c3b3b3e8b0d9801f5d98ebb20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>ws2</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a9ebb28f7e5c5ba737075a8dce520ffda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>ws3</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a52650211e8b1b39f1fc4a4d9468e0c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>center</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a463e97ed03d394d712ec5e84142e35e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>delta</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aec0929c34f5d6003654f2303b5cf99b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>xmc</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad88fa58a1879930994dfd04554b93790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>S2</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a0c4ed7b09b34b920d8a3e17095a048bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aea3aa13ea260f2248e0268766da158d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mmin_fix_params&lt; func_t, vec_t &gt; *</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a26668d357ee86ac5700ff597e84e4748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>set_called</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a30a0b309ad128dc309a0a106f1104ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>step_vec</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ab0c82dfb3c7bac891e60c563f94104e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>avoid_nonzero</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ab278802ac419f5752b87398674217102</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mmin_simp2&lt; multi_funct &gt;</name>
    <filename>classo2scl_1_1mmin__simp2.html</filename>
    <base>mmin_base&lt; multi_funct, multi_funct, boost::numeric::ublas::vector&lt; double &gt; &gt;</base>
    <member kind="function">
      <type>int</type>
      <name>set_step</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a99aa0eb42af0bb6555fb0b485b7c071a</anchor>
      <arglist>(size_t nv, vec2_t &amp;step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a284c1c47c5322eca065102437b277c4b</anchor>
      <arglist>(size_t nn, boost::numeric::ublas::vector&lt; double &gt; &amp;xx, double &amp;fmin, multi_funct &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mmin_twovec</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a92738a81dbe102cb8a94ad4fb4435f5f</anchor>
      <arglist>(size_t nn, boost::numeric::ublas::vector&lt; double &gt; &amp;xx, boost::numeric::ublas::vector&lt; double &gt; &amp;xx2, double &amp;fmin, multi_funct &amp;ufunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mmin_simplex</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>acfba797b497d049606f20274deaea3f4</anchor>
      <arglist>(size_t nn, mat_t &amp;sx, double &amp;fmin, multi_funct &amp;ufunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aa506ef2390e8a8b1fc24d1d79321b3db</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>af15e283d49d42b1b8e51be8a4d9b5152</anchor>
      <arglist>(multi_funct &amp;ufunc, size_t n, boost::numeric::ublas::vector&lt; double &gt; &amp;ax, boost::numeric::ublas::vector&lt; double &gt; &amp;step_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_simplex</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ac85150acd4257c52e1af4fa9f28fb74d</anchor>
      <arglist>(multi_funct &amp;ufunc, mat_t &amp;sx)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a5648486951d12bbfee21323db7bddfac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad96f95d42e33310e251e9566b3944e9e</anchor>
      <arglist>(size_t nv, boost::numeric::ublas::vector&lt; double &gt; &amp;xx, boost::numeric::ublas::vector&lt; double &gt; *simp, double y, int iter, double value, double limit, std::string comment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad762c735eeaaff2679740e3a0d74f3a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a2a30b324c3789f3dc9ff4a982c471432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::numeric::ublas::vector&lt; double &gt;</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a3077c5ce74ae6dc8f240aef568bd1f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fval</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a8ca2ea8b488279512fbd221bf79cc921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>print_simplex</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ae04f6a187baf6aa28e86c656e9b492cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>compute_center</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a2b328562c73a3da10b9732e2b5dcade0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>compute_size</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad6b4b173c705fce9f0139ffa64193f32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>try_corner_move</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a623a4e89595471271a7367e14a3e485b</anchor>
      <arglist>(const double coeff, size_t corner, boost::numeric::ublas::vector&lt; double &gt; &amp;xc, multi_funct &amp;f, size_t nvar, double &amp;newval)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>update_point</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aae8b7b9a9dbe48a26893808fa2ec55c3</anchor>
      <arglist>(size_t i, boost::numeric::ublas::vector&lt; double &gt; &amp;xx, double val)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>contract_by_best</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a0106c9898559d8f8dbb227b96383f8fe</anchor>
      <arglist>(size_t best, multi_funct &amp;f, size_t nvar)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::numeric::ublas::vector&lt; double &gt; *</type>
      <name>x1</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ac5741dca7f3d34d177694c025fd72064</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>y1</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aa00b2289d8d930d83b5d658417934de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::numeric::ublas::vector&lt; double &gt;</type>
      <name>ws1</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>adf91a6c3b3b3e8b0d9801f5d98ebb20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::numeric::ublas::vector&lt; double &gt;</type>
      <name>ws2</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a9ebb28f7e5c5ba737075a8dce520ffda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::numeric::ublas::vector&lt; double &gt;</type>
      <name>ws3</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a52650211e8b1b39f1fc4a4d9468e0c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::numeric::ublas::vector&lt; double &gt;</type>
      <name>center</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a463e97ed03d394d712ec5e84142e35e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::numeric::ublas::vector&lt; double &gt;</type>
      <name>delta</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aec0929c34f5d6003654f2303b5cf99b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::numeric::ublas::vector&lt; double &gt;</type>
      <name>xmc</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ad88fa58a1879930994dfd04554b93790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>S2</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a0c4ed7b09b34b920d8a3e17095a048bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>aea3aa13ea260f2248e0268766da158d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>multi_funct *</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a26668d357ee86ac5700ff597e84e4748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>set_called</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>a30a0b309ad128dc309a0a106f1104ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>step_vec</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ab0c82dfb3c7bac891e60c563f94104e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>avoid_nonzero</name>
      <anchorfile>classo2scl_1_1mmin__simp2.html</anchorfile>
      <anchor>ab278802ac419f5752b87398674217102</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_wrap_gsl</name>
    <filename>classo2scl_1_1mmin__wrap__gsl.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>wrap_f</name>
      <anchorfile>classo2scl_1_1mmin__wrap__gsl.html</anchorfile>
      <anchor>ac3b7b69d279c1353b8b3b84536698339</anchor>
      <arglist>(double alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>wrap_df</name>
      <anchorfile>classo2scl_1_1mmin__wrap__gsl.html</anchorfile>
      <anchor>a87bb625f19583a83080c69ef01e49774</anchor>
      <arglist>(double alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>wrap_fdf</name>
      <anchorfile>classo2scl_1_1mmin__wrap__gsl.html</anchorfile>
      <anchor>ac04b641c511bab9ea0fad166c438a57b</anchor>
      <arglist>(double alpha, double *f, double *df)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mmin_wrapper_gsl</name>
    <filename>classo2scl_1_1mmin__wrapper__gsl.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>dfunc_t</templarg>
    <templarg>auto_grad_t</templarg>
    <base>o2scl::mmin_wrap_gsl</base>
    <member kind="function">
      <type>void</type>
      <name>prepare_wrapper</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>ab45392d168c203149cae6bedc5acb399</anchor>
      <arglist>(func_t &amp;ufunc, dfunc_t *udfunc, vec_t &amp;t_x, double f, vec_t &amp;t_g, vec_t &amp;t_p, auto_grad_t *ag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_position</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>ae8124a44e8d54873fd9dcf0aa84ad465</anchor>
      <arglist>(double alpha, vec_t &amp;t_x, double *t_f, vec_t &amp;t_g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>change_direction</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>a656d8270f09010f0d21226f1de129909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>av_x_alpha</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>aeed2cde1a4a6b9b5e33bb2706d911059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>av_g_alpha</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>a946568ca826d9b7b45727ced03463063</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>a68e7cc5887624fa043032d5a4bd81cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>moveto</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>ada47c28a85e6a1bb2a3c14bfde2b82ca</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>slope</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>a6d730172032880dbdae0dded302d209f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>wrap_f</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>a546e801bcc17fc17d3fab0f3436e840e</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>wrap_df</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>a5abc821b546005c1c3620e09d1d24299</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>wrap_fdf</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>a41c35373d9813861960044ec8aec17e2</anchor>
      <arglist>(double alpha, double *f, double *df)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>func</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>a1f16e2ae9d08e5f935c7e94dffb3c6d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dfunc_t *</type>
      <name>dfunc</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>aace7dbdce51a4830cbea1b33730b7120</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>auto_grad_t *</type>
      <name>agrad</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>aa498ec9e8876d84beb1a7bcc9f3b4ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>grad_given</name>
      <anchorfile>classo2scl_1_1mmin__wrapper__gsl.html</anchorfile>
      <anchor>a7f488789236b16708ef3fcb0f4b7c292</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mroot</name>
    <filename>classo2scl_1_1mroot.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>jfunc_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a19f62284a966f8881291ff427faa93d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>msolve</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>ae1c481363b6f2e468a3389fa273afbcf</anchor>
      <arglist>(size_t n, vec_t &amp;x, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>msolve_de</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a64ae071bf834a74d4a68a437ef5266f1</anchor>
      <arglist>(size_t n, vec_t &amp;x, func_t &amp;func, jfunc_t &amp;dfunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a0d5b8aaeb09e043200223e004c197990</anchor>
      <arglist>(size_t n, const vec2_t &amp;x, const vec3_t &amp;y, int iter, double value=0.0, double limit=0.0, std::string comment=&quot;&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a03944267946a279f718d0cfcf69c4176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a9c95f628fed28d915a4096cc84fb30f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a8a902731a2fb204ebd0dad87d7f8ff1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>ae5af6a851738d6527beafcb550c3cc89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a849ccf6759b8f0f72adc9949ce9917bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a0de922c7311eae9ce2d50b036860a2cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mroot&lt; mm_funct&lt;&gt; &gt;</name>
    <filename>classo2scl_1_1mroot.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a19f62284a966f8881291ff427faa93d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>msolve</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>ae1c481363b6f2e468a3389fa273afbcf</anchor>
      <arglist>(size_t n, boost::numeric::ublas::vector&lt; double &gt; &amp;x, mm_funct&lt;&gt; &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>msolve_de</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a64ae071bf834a74d4a68a437ef5266f1</anchor>
      <arglist>(size_t n, boost::numeric::ublas::vector&lt; double &gt; &amp;x, mm_funct&lt;&gt; &amp;func, jac_funct &amp;dfunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a0d5b8aaeb09e043200223e004c197990</anchor>
      <arglist>(size_t n, const vec2_t &amp;x, const vec3_t &amp;y, int iter, double value=0.0, double limit=0.0, std::string comment=&quot;&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a03944267946a279f718d0cfcf69c4176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a9c95f628fed28d915a4096cc84fb30f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a8a902731a2fb204ebd0dad87d7f8ff1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>ae5af6a851738d6527beafcb550c3cc89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a849ccf6759b8f0f72adc9949ce9917bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1mroot.html</anchorfile>
      <anchor>a0de922c7311eae9ce2d50b036860a2cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mroot_broyden</name>
    <filename>classo2scl_1_1mroot__broyden.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <templarg>jfunc_t</templarg>
    <base>o2scl::mroot</base>
    <member kind="function">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a0985380821354b5a5567391219a319f3</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>enorm</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a0a0e26ab02eeb3d401d2fe099063d2ad</anchor>
      <arglist>(size_t nvar, const vec_t &amp;ff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>ada0ec3cde179cb1f73267ec804ecd3f1</anchor>
      <arglist>(func_t &amp;func, size_t nvar, vec_t &amp;x, vec_t &amp;f, vec_t &amp;dx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>aef0a411387010cdfb000308aa3f93ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>msolve</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a21249a76754753471902c0a1fb8bbe1f</anchor>
      <arglist>(size_t n, vec_t &amp;x, func_t &amp;func)</arglist>
    </member>
    <member kind="variable">
      <type>jacobian_gsl&lt; func_t, vec_t, mat_t &gt;</type>
      <name>def_jac</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>af596a959057380e732b283354c8b16e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>ab67c0be44a908e83160859a9c39ae994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix</type>
      <name>H</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a351c311636e1626c43f285c4f1f62ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix</type>
      <name>lu</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a827db9b03fe81aea6270ed957a574300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>permutation</type>
      <name>perm</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a73b9d9890e27797a7c29d5f4a9dab97e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>v</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a782b76dcb6308021e8dc47e1257e02a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>w</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a535756e3240b15824ef8bdd36a3c11d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>y</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a8d111794a6351e3db0a9152c28455c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>p</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a306432b31682e0e83b68f74bc03a6e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>fnew</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a55e74b15c6b8ac23b0ae98dce9621482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>x_trial</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a97ddda7f2feb895139661cca14ed2b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>phi</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a814b947b6086469a9c961adb1737bcb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>dx_int</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a4305bd0b5ed3ee000c6f9cd7785a1f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>f_int</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>ad5054f5acd95a1c4ce9bf4d09ccb1687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>user_func</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>afd0cb591e4c4ad4b94ce1129c770b77d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>user_f</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a417c2c98adac57a53f0819e488babf1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>user_x</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a954842b2e953f18cb0c417494e8499e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>user_dx</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a740666736c04528d386394e0c9e53c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>user_nvar</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a0a7a0379d64299ba50ec0cea803a444e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mem_size</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>afc7dfceac2bb576748bc1717c0a8b07d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>jacobian&lt; func_t, vec_t, mat_t &gt; *</type>
      <name>ajac</name>
      <anchorfile>classo2scl_1_1mroot__broyden.html</anchorfile>
      <anchor>a1578b8d36d8f28c4b455e36da7627e0b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mroot_cern</name>
    <filename>classo2scl_1_1mroot__cern.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>jfunc_t</templarg>
    <base>o2scl::mroot</base>
    <member kind="function">
      <type>int</type>
      <name>get_info</name>
      <anchorfile>classo2scl_1_1mroot__cern.html</anchorfile>
      <anchor>a34343d8015cf6ac170346a2284d5e89a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_info_string</name>
      <anchorfile>classo2scl_1_1mroot__cern.html</anchorfile>
      <anchor>aa7c14a365f55b0c90468c5f20699a554</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mroot__cern.html</anchorfile>
      <anchor>ad1b329387bde5dae1d668ea2100618c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>msolve</name>
      <anchorfile>classo2scl_1_1mroot__cern.html</anchorfile>
      <anchor>a49d0bd6d6dbe63a16d3d4a4390957608</anchor>
      <arglist>(size_t nvar, vec_t &amp;x, func_t &amp;func)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxf</name>
      <anchorfile>classo2scl_1_1mroot__cern.html</anchorfile>
      <anchor>a8b087d3c73eed4dd21bb875114c06614</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>scale</name>
      <anchorfile>classo2scl_1_1mroot__cern.html</anchorfile>
      <anchor>a48486ed41b73723a0dde41f863048d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps</name>
      <anchorfile>classo2scl_1_1mroot__cern.html</anchorfile>
      <anchor>aa29c9983979caeb217dc06e4d68a572d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::numeric::ublas::matrix&lt; double &gt;</type>
      <name>w</name>
      <anchorfile>classo2scl_1_1mroot__cern.html</anchorfile>
      <anchor>a628e7232bded031a0c7f93c3b8839bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>info</name>
      <anchorfile>classo2scl_1_1mroot__cern.html</anchorfile>
      <anchor>a29b1288df66f29c2fe6fb2ade877dd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mpt</name>
      <anchorfile>classo2scl_1_1mroot__cern.html</anchorfile>
      <anchor>a0503469cfe41bf6e4963debafc8d1f34</anchor>
      <arglist>[289]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mroot_hybrids</name>
    <filename>classo2scl_1_1mroot__hybrids.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <templarg>jfunc_t</templarg>
    <base>o2scl::mroot</base>
    <base protection="private">o2scl::mroot_hybrids_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_jacobian</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>ae4c820e8eb1a441973a037d378122239</anchor>
      <arglist>(jacobian&lt; func_t, vec_t, mat_t &gt; &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a08431000920cab8616e6c05c9727398d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>aeb16d6d1b0c8b1519c1d76f99359c4dc</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>affd81716d0e89be86f044f5f2a2b0072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>msolve_de</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a47d6dc0c5ad3b0ae3927162e21a552ba</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, func_t &amp;ufunc, jfunc_t &amp;dfunc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>msolve</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>ab9503527b8e0b20ecf781adc5ff6d580</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a5f06a8c8122754c263b5438657f04507</anchor>
      <arglist>(size_t nn, vec_t &amp;ax, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_de</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a21fdaac6d67e107cedb7baa6d474cedb</anchor>
      <arglist>(size_t nn, vec_t &amp;ax, func_t &amp;ufunc, jfunc_t &amp;dfunc)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>shrink_step</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>abee02a37abf3a60b47413093d0be9132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>extra_finite_check</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>ab38570030b6fd505a345da230a07451d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>int_scaling</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>accb4d4e302dd49fdb135576a38343e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jacobian_gsl&lt; func_t, vec_t, mat_t &gt;</type>
      <name>def_jac</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a008bb0b798f8af1dca413052b3a4003b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>f</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a86eabd9d21ebb712aa27b5e5cd697d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec_t</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a074fa627ea3f5739b622e1356ad5a006</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_set</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a414399b60d0f2c1d187955777cfc5b47</anchor>
      <arglist>(size_t nn, vec_t &amp;xx, func_t &amp;ufunc)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>iter</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a28ee30ea2f443ffae8cf86ac7d671a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ncfail</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>add2bb1e0bd1e54a26303b05bcd183c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ncsuc</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a21976812a1a9ab1755539cb42b55f89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nslow1</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>aaeb115b4cfac42bb75194ac9c36c48d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nslow2</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a5fb90fbdf5985db8e44cfaf616f56969</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fnorm</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>abe7a6aadd3d07bd05ba033c6c4eb1dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>delta</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a942168c91050cdcc92f25aed2ed5c002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>J</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>ae88c0336856c3f7dc8ab17d4ed74f77e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>q</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>afac9443152407dec76004282da4bb2db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>r</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a75083fdbc967eff994e7acefabe5fd0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>diag</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a69606de3ced745c053df05169ae14715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>qtf</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a6eebe9e687e28d8457a0c5d1c1f5e144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>newton</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a5ce409a7586398a5870e646fdf2cee08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>gradient</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>afed713e34a18d57414cddf1896042faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>df</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a45395bf8c190bec34ba2124c7581ba4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>qtdf</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a02bc7bfd6e0946c45f6c1d4d8aa4f4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>rdx</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a7a51bdd15b085c6c01b7d618f375a9d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>w</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>ae61ea58a367b661b974d20dddd63df09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>v</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>aa64e0437b66a4183ffe6749e6b26ef89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>jfunc_t *</type>
      <name>jac</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>ae1ea8ba5ada6225c4add637a94dd8574</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>jacobian&lt; func_t, vec_t, mat_t &gt; *</type>
      <name>ajac</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a1dbaa6da5f31cca5e2aa27808ca2478d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>dx</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a98848b84390bd3158e0c1794397fbae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>x_trial</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>aa5a9e5f8e2b2026e1ecb985c4ca3099d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>f_trial</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a83b871bd4e8bdef0eae9c980a68bb3ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a83cfe1e10a90626731c952e016dd161e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>jac_given</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>a0fec1f422675de13379eed98f4b490aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>fnewp</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>af26def7506ce22f0e17a54044f471215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>set_called</name>
      <anchorfile>classo2scl_1_1mroot__hybrids.html</anchorfile>
      <anchor>aac06b36ac251c88e4815b1285cb304db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mroot_hybrids_arma_qr_econ</name>
    <filename>classo2scl_1_1mroot__hybrids__arma__qr__econ.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::mroot_hybrids</base>
  </compound>
  <compound kind="class">
    <name>o2scl::mroot_hybrids_base</name>
    <filename>classo2scl_1_1mroot__hybrids__base.html</filename>
    <member kind="function">
      <type>double</type>
      <name>compute_actual_reduction</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a50b65330a14a8c09dfeaecc041085008</anchor>
      <arglist>(double fnorm0, double fnorm1)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>compute_predicted_reduction</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a0a0ffb2e039d42589f6f32fc7a471343</anchor>
      <arglist>(double fnorm0, double fnorm1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_Rg</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>ad6f621aa6048696e65c47e68e8cbe628</anchor>
      <arglist>(size_t N, const mat_t &amp;r2, const ubvector &amp;gradient2, vec2_t &amp;Rg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_wv</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>aaac2976acfc69db909b92224926410de</anchor>
      <arglist>(size_t n, const ubvector &amp;qtdf2, const ubvector &amp;rdx2, const vec2_t &amp;dx2, const ubvector &amp;diag2, double pnorm, ubvector &amp;w2, ubvector &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_rdx</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>ad50077d764690c0d4ef79522e2ecb1b3</anchor>
      <arglist>(size_t N, const mat_t &amp;r2, const vec2_t &amp;dx2, ubvector &amp;rdx2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>scaled_enorm</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a3f24c16e2c90777199b66ab8e64e3906</anchor>
      <arglist>(size_t n, const vec2_t &amp;d, const vec3_t &amp;ff)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>compute_delta</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>aa477433fbf48b75690b56189f0d0905e</anchor>
      <arglist>(size_t n, ubvector &amp;diag2, vec2_t &amp;x2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>enorm</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a8f25042eb5ea3f9ba11d2e8e0bf8f62b</anchor>
      <arglist>(size_t N, const vec2_t &amp;ff)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>enorm_sum</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a7a23ad236178070d6709b0849f72a62b</anchor>
      <arglist>(size_t n, const ubvector &amp;a, const ubvector &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compute_trial_step</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a3bfd56a7552d350c0e6c4c232956b0fc</anchor>
      <arglist>(size_t N, vec2_t &amp;xl, vec2_t &amp;dxl, vec2_t &amp;xx_trial)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compute_df</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a5ff6ce7db1e644662a22ed2e22971c9b</anchor>
      <arglist>(size_t n, const vec2_t &amp;ff_trial, const vec2_t &amp;fl, ubvector &amp;dfl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_diag</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a54d4f2e3e6c982622ca672bfdb52f3e0</anchor>
      <arglist>(size_t n, const mat2_t &amp;J2, ubvector &amp;diag2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_qtf</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a785c89ca3541413f17dd43598c24cd4b</anchor>
      <arglist>(size_t N, const vec2_t &amp;q2, const vec3_t &amp;f2, vec4_t &amp;qtf2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_diag</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a65ae11d2921812cdd9b43ef9cdb16677</anchor>
      <arglist>(size_t n, const mat2_t &amp;J2, ubvector &amp;diag2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaled_addition</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>aa9e6ffb992d805e0dacbb3066ef239bf</anchor>
      <arglist>(size_t N, double alpha, ubvector &amp;newton2, double beta, ubvector &amp;gradient2, vec2_t &amp;pp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>newton_direction</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>ac15459baef89d449b2e3cab928e65b38</anchor>
      <arglist>(const size_t N, const mat_t &amp;r2, const ubvector &amp;qtf2, ubvector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gradient_direction</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>a7f36e6e80c59a3e0ea3f87aaec55e124</anchor>
      <arglist>(const size_t M, const size_t N, const mat_t &amp;r2, const ubvector &amp;qtf2, const ubvector &amp;diag2, ubvector &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minimum_step</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>aa3c382f57fb447c16a204ae8d6cf3fb8</anchor>
      <arglist>(const size_t N, double gnorm, const ubvector &amp;diag2, ubvector &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dogleg</name>
      <anchorfile>classo2scl_1_1mroot__hybrids__base.html</anchorfile>
      <anchor>ab51c14e861e79257da488b3deb3167b2</anchor>
      <arglist>(size_t n, const mat_t &amp;r2, const ubvector &amp;qtf2, const ubvector &amp;diag2, double delta2, ubvector &amp;newton2, ubvector &amp;gradient2, vec2_t &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::mroot_hybrids_eigen</name>
    <filename>classo2scl_1_1mroot__hybrids__eigen.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::mroot_hybrids</base>
  </compound>
  <compound kind="class">
    <name>o2scl::multi_funct_strings</name>
    <filename>classo2scl_1_1multi__funct__strings.html</filename>
    <member kind="function">
      <type></type>
      <name>multi_funct_strings</name>
      <anchorfile>classo2scl_1_1multi__funct__strings.html</anchorfile>
      <anchor>adef7fe526ec71098031cdaa3a06a1c3c</anchor>
      <arglist>(std::string expr, int nv, vec_string_t &amp;var_arr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_function</name>
      <anchorfile>classo2scl_1_1multi__funct__strings.html</anchorfile>
      <anchor>a39b7cfa583e0952cd64a19481024c17a</anchor>
      <arglist>(std::string expr, int nv, vec_string_t &amp;var_arr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_parm</name>
      <anchorfile>classo2scl_1_1multi__funct__strings.html</anchorfile>
      <anchor>a2d901530b94c79769a6733a9c04e8e80</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1multi__funct__strings.html</anchorfile>
      <anchor>ac1d1e42c72e1af7e7e4070be28e26249</anchor>
      <arglist>(size_t nv, const vec_t &amp;x)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>calculator</type>
      <name>calc</name>
      <anchorfile>classo2scl_1_1multi__funct__strings.html</anchorfile>
      <anchor>acf17f6301c32a4137ceab341d0e7038c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>vars</name>
      <anchorfile>classo2scl_1_1multi__funct__strings.html</anchorfile>
      <anchor>aae2eaf198f42aad0e64a8ed99f4c0a54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>st_nv</name>
      <anchorfile>classo2scl_1_1multi__funct__strings.html</anchorfile>
      <anchor>ab40815bc2c2f7cab7c402e52675eac52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>st_funct</name>
      <anchorfile>classo2scl_1_1multi__funct__strings.html</anchorfile>
      <anchor>ad25165371108365ad033850968d31dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>st_vars</name>
      <anchorfile>classo2scl_1_1multi__funct__strings.html</anchorfile>
      <anchor>a7afe3c17d82a9fda7369ebeebc5c9897</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_bsimp_gsl</name>
    <filename>classo2scl_1_1ode__bsimp__gsl.html</filename>
    <templarg>func_t</templarg>
    <templarg>jac_func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <member kind="function">
      <type>int</type>
      <name>reset</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a8c47b1a21a92940aec30959e6995422c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a592a32e4b79dc1dad2881f9dbd0e5429</anchor>
      <arglist>(double x, double h, size_t n, vec_t &amp;y, vec_t &amp;dydx, vec_t &amp;yout, vec_t &amp;yerr, vec_t &amp;dydx_out, func_t &amp;derivs, jac_func_t &amp;jac)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>ad70219358a4d79ad6b18cbf944d90e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>compute_weights</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a12b03bd3ae4a76ef6772b875785c1a64</anchor>
      <arglist>(const ubarr &amp;y, ubarr &amp;w, size_t n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>deuf_kchoice</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a9700c804bbcfa1319ec9201384c4029c</anchor>
      <arglist>(double eps2, size_t dimension)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>poly_extrap</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>aea5aa10d4eb3dc6b21ef3ef45b9afa2d</anchor>
      <arglist>(ubmatrix &amp;dloc, const double x[], const unsigned int i_step, const double x_i, const vec_t &amp;y_i, vec_t &amp;y_0, vec_t &amp;y_0_err, ubarr &amp;work)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>step_local</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a3f0c6bcd8838ed1903dbf0d4029a479d</anchor>
      <arglist>(const double t0, const double h_total, const unsigned int n_step, const ubarr &amp;y, const ubarr &amp;yp_loc, const vec_t &amp;dfdt_loc, const mat_t &amp;dfdy_loc, vec_t &amp;y_out)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>ae87130231ceb2c7ec22525cab54b245b</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>af05cc2250d3bfe273b504c4bc58a0e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a2403fe6f49a48a4ab41cbe0c64bf986c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>funcp</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a76d88a7ee50ac703eed5541aa37c93e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>jac_func_t *</type>
      <name>jfuncp</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a89847cbd7b9baddf02ae4a4eec320390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix</type>
      <name>d</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a744e86622092576fe605c6c6cc49019d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix</type>
      <name>a_mat</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a19b584d9ed95670454d52f2e2a72f117</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>ex_wk</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>ae3e51881e92e1ad305339552351c9019</anchor>
      <arglist>[sequence_max]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>order</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a1fd11a1e51678e327a065209115ff464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>sequence_count</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>a700fa662fa7509a39869007af2fa558e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>sequence_max</name>
      <anchorfile>classo2scl_1_1ode__bsimp__gsl.html</anchorfile>
      <anchor>afadaaa63a662ae4cea39500394d923ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_bv_mshoot</name>
    <filename>classo2scl_1_1ode__bv__mshoot.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::ode_bv_solve</base>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a1dba19d80c504fce3b204163c0670218</anchor>
      <arglist>(double h, size_t n, size_t n_bound, vec_t &amp;x_bound, mat_t &amp;y_bound, vec_int_t &amp;index, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_store</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a7fa45d0be920241d5232c854130a2429</anchor>
      <arglist>(double h, size_t n, size_t n_bound, vec_t &amp;x_bound, mat_t &amp;y_bound, vec_int_t &amp;index, size_t &amp;n_sol, vec_t &amp;x_sol, mat_t &amp;y_sol, mat_t &amp;dydx_sol, mat_t &amp;yerr_sol, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_iv</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a87965f718c56865e0a869f1d7869cd44</anchor>
      <arglist>(ode_iv_solve&lt; func_t, vec_t &gt; &amp;ois)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_mroot</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>abe781e22506635b03e65de260b54168c</anchor>
      <arglist>(mroot&lt; mm_funct&lt;&gt; &gt; &amp;root)</arglist>
    </member>
    <member kind="variable">
      <type>ode_iv_solve&lt; func_t, vec_t &gt;</type>
      <name>def_ois</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a4b14a18b9e3bffb75bfb4627c4a507b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gsl_mroot_hybrids&lt; mm_funct&lt;&gt; &gt;</type>
      <name>def_mroot</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a65f1d89705ad615670e32c3faa2a1cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>solve_fun</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>ab410f4fd47ef140193ba0ac90fd81626</anchor>
      <arglist>(size_t nv, const vec_t &amp;tx, vec_t &amp;ty)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ode_iv_solve&lt; func_t, vec_t &gt; *</type>
      <name>oisp</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a22f07b3944823b25b081e24e2fbee454</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mroot&lt; mm_funct&lt;&gt; &gt; *</type>
      <name>mrootp</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a8cf073d097a1a4871b6eb5cb41b0e3de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_int_t *</type>
      <name>l_index</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>abe1385fb660f793ec144c95fead8e725</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>l_xbound</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>ac5a33a0f7a9124ba7aac2cf674d7cbac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t *</type>
      <name>l_ybound</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>af6f914b72ac65582f6c7d5ccd482df21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>l_h</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>ac9f0007c14b2bb20184b3112cde2402e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>l_derivs</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a62932363c8580a9124901fe92fba2bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>l_n</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a81df7abe03d82a552fef946b1d10b128</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>l_nbound</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>ae9b10c45258229412b227615fd1ca9b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>l_lhs_unks</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a419e486b0ca585cc8716fe2873eacd51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mem_size</name>
      <anchorfile>classo2scl_1_1ode__bv__mshoot.html</anchorfile>
      <anchor>a6976a68aafdae7d881d8d2703723c3e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_bv_multishoot</name>
    <filename>classo2scl_1_1ode__bv__multishoot.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>solve_fun</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>aaa1f235f584ef9ef10f2cb7e777b8766</anchor>
      <arglist>(size_t nv, const vec_t &amp;sx, vec_t &amp;sy)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ode_iv_solve&lt; func_t, vec_t, alloc_vec_t, alloc_t &gt; *</type>
      <name>oisp</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>a7aa57486558227bccaa22a6778c3db64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_mroot_hybrids&lt; mm_funct&lt;&gt; &gt; *</type>
      <name>mrootp</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>a20aee05ab15be470bd4b6700ced0e1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>l_mesh</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>af4a4d28f3bcf52f6853dab644366fcb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>l_y_start</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>a73964ea873e9c3f54c4a232dd781b140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>l_left_b</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>a1b62ab8a437cee4a0b43503a8e132006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>l_right_b</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>a406e2a8f833b362794e3e2768ee3f047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>l_extra_b</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>a3371d468043a1149c494c4b3865d3952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>l_derivs</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>aaf2a901ddd7904f1d9387bf893c270c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>l_n_func</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>aebd81150ba39c9f6f4a784e94333e347</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>l_x_save</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>a21c4755c112deeff1c9741e2fd5e53c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t *</type>
      <name>l_y_save</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>ade8001ec687195313727bab49e359355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classo2scl_1_1ode__bv__multishoot.html</anchorfile>
      <anchor>a61cf2f9a31d7f4bace4e1ad2204a5d24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_bv_shoot</name>
    <filename>classo2scl_1_1ode__bv__shoot.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::ode_bv_solve</base>
    <member kind="function">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a50a56616e7125c82fb3cb80127ac71ec</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>ad771530dd3c0aa70b7cc57554b07b9b6</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_int_t &amp;index, vec_t &amp;yerr, vec_t &amp;dydx_end, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_store</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a8cf7e48ada8c9a27f7329a423da8ec88</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_int_t &amp;index, size_t &amp;n_sol, vec_t &amp;x_sol, mat_t &amp;y_sol, mat_t &amp;yerr_sol, mat_t &amp;dydx_sol, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_iv</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>aac083cbd703ad11279f986df38e914b5</anchor>
      <arglist>(ode_iv_solve&lt; func_t, vec_t &gt; &amp;ois)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_mroot</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a14c32da7820b6dce0407be0d60ba5c8e</anchor>
      <arglist>(mroot&lt; mm_funct&lt;&gt; &gt; &amp;root)</arglist>
    </member>
    <member kind="variable">
      <type>ode_iv_solve&lt; func_t, vec_t &gt;</type>
      <name>def_ois</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>afadfada970b03880d6fbb010a97bd4e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gsl_mroot_hybrids&lt; mm_funct&lt;&gt; &gt;</type>
      <name>def_mroot</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a8c59216d7625954c24f2b40988915186</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>solve_fun</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>af48717ec28263b4f1aa40a2da75166a1</anchor>
      <arglist>(size_t nv, const vec_t &amp;tx, vec_t &amp;ty)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ode_iv_solve&lt; func_t, vec_t &gt; *</type>
      <name>oisp</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>ab98edf1886a576db3fd06374c85c8864</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mroot&lt; mm_funct&lt;&gt; &gt; *</type>
      <name>mrootp</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a99d053caf40ac463bb41882a70c12759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_int_t *</type>
      <name>l_index</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>ad8383304ce905dadf3ab871808698265</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>l_ystart</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>ab7e07080ffd1bb2b19fe6dfff650eda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>l_yend</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a356ff7f1352f578a5b38ec66a63b7a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>l_yerr</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a511ef8e1e77aa3f3676e342ab86bfcc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>l_dydx_end</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a23051694d03ae9039dbd04ae6f5020e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>l_x0</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a2182c9dccf11938731e0342a82a5b40e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>l_x1</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a93be96d836c864fec132135720a8f654</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>l_h</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>ac35212d387541c05f9def6cd7edc1dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>l_derivs</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>aa19d49cc6c715953d55cf0a33fe87b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>l_n</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>ae0bd1ef0b2b48aadc8e5790bae6660d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mem_size</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot.html</anchorfile>
      <anchor>a91d8c83c0096a3d9614ed3d844142c21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_bv_shoot_grid</name>
    <filename>classo2scl_1_1ode__bv__shoot__grid.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::ode_bv_shoot</base>
    <member kind="function">
      <type>int</type>
      <name>solve_grid</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot__grid.html</anchorfile>
      <anchor>a02297269b40b87e9037a4b1db64d4b25</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_int_t &amp;index, size_t nsol, vec_t &amp;xsol, mat_t &amp;ysol, mat_t &amp;err_sol, mat_t &amp;dydx_sol, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>solve_grid_fun</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot__grid.html</anchorfile>
      <anchor>a1774dd408d2a194d48e82ab846e1460c</anchor>
      <arglist>(size_t nv, const vec_t &amp;tx, vec_t &amp;ty)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>l_nsol</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot__grid.html</anchorfile>
      <anchor>a523842d54d014a2dca2bd35249adf83f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t *</type>
      <name>l_xsol</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot__grid.html</anchorfile>
      <anchor>a2bbbf0a5497f238b2176b73d27312451</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t *</type>
      <name>l_ysol</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot__grid.html</anchorfile>
      <anchor>aa8e4726ecc1b5c542922ec01f75a4943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t *</type>
      <name>l_dydxsol</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot__grid.html</anchorfile>
      <anchor>aa11d76f0753e1ebb503a56ad97dec737</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t *</type>
      <name>l_errsol</name>
      <anchorfile>classo2scl_1_1ode__bv__shoot__grid.html</anchorfile>
      <anchor>a35e11bc37209dbbd2a9bac0a0e3a7a1a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_bv_solve</name>
    <filename>classo2scl_1_1ode__bv__solve.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1ode__bv__solve.html</anchorfile>
      <anchor>a37dea13d1a9e5e4b6e17019b385cc934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>unk</name>
      <anchorfile>classo2scl_1_1ode__bv__solve.html</anchorfile>
      <anchor>abb89d5e2eff29d304e5088ecdadcf468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>right</name>
      <anchorfile>classo2scl_1_1ode__bv__solve.html</anchorfile>
      <anchor>ade1f577be255b07966f2d002c5784eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>left</name>
      <anchorfile>classo2scl_1_1ode__bv__solve.html</anchorfile>
      <anchor>a27a1649d1cebc9a3482c35cd2c6d6115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>both</name>
      <anchorfile>classo2scl_1_1ode__bv__solve.html</anchorfile>
      <anchor>a41e1cfc86b6475058ab731fce8a7a247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>unk</name>
      <anchorfile>classo2scl_1_1ode__bv__solve.html</anchorfile>
      <anchor>abb89d5e2eff29d304e5088ecdadcf468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>right</name>
      <anchorfile>classo2scl_1_1ode__bv__solve.html</anchorfile>
      <anchor>ade1f577be255b07966f2d002c5784eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>left</name>
      <anchorfile>classo2scl_1_1ode__bv__solve.html</anchorfile>
      <anchor>a27a1649d1cebc9a3482c35cd2c6d6115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>both</name>
      <anchorfile>classo2scl_1_1ode__bv__solve.html</anchorfile>
      <anchor>a41e1cfc86b6475058ab731fce8a7a247</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_control_gsl</name>
    <filename>classo2scl_1_1ode__control__gsl.html</filename>
    <templarg>vec_y_t</templarg>
    <templarg>vec_dydx_t</templarg>
    <templarg>vec_yerr_t</templarg>
    <member kind="function">
      <type>int</type>
      <name>set_scale</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a442c5a047847437b1d00406aa1de544e</anchor>
      <arglist>(size_t nscal, const svec_t &amp;scale)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_abs</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a40f7026783cb78d8e2536af4806eb643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_rel</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a405ee93b763a06b79ead1c7d6fc7d740</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>a_y</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>ac78e07131fa109d81c371e1dc0e09b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>a_dydt</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a372581c7652f5e161de7b342faa38a10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>standard</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>ab284031b58b2665cd647fe9b15946925</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_nil</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>af9053ec0fcdc1f16946ed3c01add49a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_dec</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a8baf5434d19624ccb6cca9aae01b0520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_inc</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>aa06fab53602674fa8cff88b6aac68cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>scale_abs</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a5242e0b0ffd53c3fbc8eedccb627a775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_nil</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>af9053ec0fcdc1f16946ed3c01add49a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_dec</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a8baf5434d19624ccb6cca9aae01b0520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_inc</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>aa06fab53602674fa8cff88b6aac68cbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ode_control_gsl&lt; vec_t, vec_t, vec_t &gt;</name>
    <filename>classo2scl_1_1ode__control__gsl.html</filename>
    <member kind="function">
      <type>int</type>
      <name>set_scale</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a442c5a047847437b1d00406aa1de544e</anchor>
      <arglist>(size_t nscal, const svec_t &amp;scale)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_abs</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a40f7026783cb78d8e2536af4806eb643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_rel</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a405ee93b763a06b79ead1c7d6fc7d740</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>a_y</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>ac78e07131fa109d81c371e1dc0e09b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>a_dydt</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a372581c7652f5e161de7b342faa38a10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>standard</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>ab284031b58b2665cd647fe9b15946925</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_nil</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>af9053ec0fcdc1f16946ed3c01add49a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_dec</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a8baf5434d19624ccb6cca9aae01b0520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_inc</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>aa06fab53602674fa8cff88b6aac68cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>scale_abs</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a5242e0b0ffd53c3fbc8eedccb627a775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_nil</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>af9053ec0fcdc1f16946ed3c01add49a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_dec</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>a8baf5434d19624ccb6cca9aae01b0520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>hadj_inc</name>
      <anchorfile>classo2scl_1_1ode__control__gsl.html</anchorfile>
      <anchor>aa06fab53602674fa8cff88b6aac68cbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_funct_strings</name>
    <filename>classo2scl_1_1ode__funct__strings.html</filename>
    <member kind="function">
      <type></type>
      <name>ode_funct_strings</name>
      <anchorfile>classo2scl_1_1ode__funct__strings.html</anchorfile>
      <anchor>a5aacec3f8240dfe0cd152b4e81f8c07d</anchor>
      <arglist>(size_t nv, vec_string_t &amp;exprs, vec_string_t &amp;funcs, std::string var)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_function</name>
      <anchorfile>classo2scl_1_1ode__funct__strings.html</anchorfile>
      <anchor>a1a3bcbe9e86f69713f189d4d0ef23840</anchor>
      <arglist>(size_t nv, vec_string_t &amp;exprs, vec_string_t &amp;funcs, std::string var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_parm</name>
      <anchorfile>classo2scl_1_1ode__funct__strings.html</anchorfile>
      <anchor>afa14798ddbf0bdc6101b155c04cdb24b</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; calculator &gt;</type>
      <name>calc</name>
      <anchorfile>classo2scl_1_1ode__funct__strings.html</anchorfile>
      <anchor>ad58306649ea35159ca29faeb63e1c744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>vars</name>
      <anchorfile>classo2scl_1_1ode__funct__strings.html</anchorfile>
      <anchor>a6c1a1c37ce6ffe12cba7b54db7fad870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>st_nv</name>
      <anchorfile>classo2scl_1_1ode__funct__strings.html</anchorfile>
      <anchor>aa35eb0cc07ab23bbbf952e22c4497f58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>st_forms</name>
      <anchorfile>classo2scl_1_1ode__funct__strings.html</anchorfile>
      <anchor>ac6a6dd4fd3de338a054c1b24f5355d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>st_var</name>
      <anchorfile>classo2scl_1_1ode__funct__strings.html</anchorfile>
      <anchor>a17edfa4b334648e685f0f52a7680fcfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>st_funcs</name>
      <anchorfile>classo2scl_1_1ode__funct__strings.html</anchorfile>
      <anchor>ac00462c9b8b866e1203e201b509aa701</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_it_solve</name>
    <filename>classo2scl_1_1ode__it__solve.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <templarg>matrix_row_t</templarg>
    <templarg>solver_vec_t</templarg>
    <templarg>solver_mat_t</templarg>
    <member kind="function">
      <type>int</type>
      <name>set_solver</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>ae39818e50d55f8198da3116ac08e4fb6</anchor>
      <arglist>(o2scl_linalg::linear_solver&lt; solver_vec_t, solver_mat_t &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>a8b49baddfebbb207525efd80a86ac332</anchor>
      <arglist>(size_t n_grid, size_t n_eq, size_t nb_left, vec_t &amp;x, mat_t &amp;y, func_t &amp;derivs, func_t &amp;left, func_t &amp;right, solver_mat_t &amp;mat, solver_vec_t &amp;rhs, solver_vec_t &amp;dy)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_derivs</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>aa993d9fc5a10307c10d16fe24bcdfb7f</anchor>
      <arglist>(size_t n_grid, size_t n_eq, size_t nb_left, vec_t &amp;x, mat_t &amp;y, func_t &amp;derivs, func_t &amp;left, func_t &amp;right, dfunc_t &amp;d_derivs, dfunc_t &amp;d_left, dfunc_t &amp;d_right, solver_mat_t &amp;mat, solver_vec_t &amp;rhs, solver_vec_t &amp;dy)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>ad55ab2191be283c22acb925181b19726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_rel</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>a4d0bd740bdb29672b6860a98610d00be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_min</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>afcf226418d1d23490eaaa4e5e7f6c49c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>ae4c754494cabc4c55d64ef9f9d36abcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>niter</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>ab4df794a756f375637c711dc450baa7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>a35aac32a29aff4165fd7e6506805771c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>o2scl_linalg::linear_solver_HH&lt; solver_vec_t, solver_mat_t &gt;</type>
      <name>def_solver</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>a529b1549ae2d5e45b7f6cd98026e1edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>fd_left</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>a211a6ab8f58a5f5734b44d92d6a723e8</anchor>
      <arglist>(size_t ieq, size_t ivar, double x, matrix_row_t &amp;y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>fd_right</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>a0dbb4cb184bd2ca69df039ff22d884cb</anchor>
      <arglist>(size_t ieq, size_t ivar, double x, matrix_row_t &amp;y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>fd_derivs</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>a441fe3245ae41342fc5d8d14efc25df5</anchor>
      <arglist>(size_t ieq, size_t ivar, double x, matrix_row_t &amp;y)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl_linalg::linear_solver&lt; solver_vec_t, solver_mat_t &gt; *</type>
      <name>solver</name>
      <anchorfile>classo2scl_1_1ode__it__solve.html</anchorfile>
      <anchor>ad858e39b6d1ea1c60ac52a1ddaf5a374</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_iv_solve</name>
    <filename>classo2scl_1_1ode__iv__solve.html</filename>
    <templarg>func_t</templarg>
    <templarg>vec_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a10ae64a7c6af61af370b52bd1ae8d8d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a97caba11a6a053aff2c333aaeebaabd8</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>af49dcc1fd2218b301fa4ab907be423ea</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_t &amp;yerr, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ad29985db9880ab5bd65f19835dc1b539</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_t &amp;yerr, vec_t &amp;dydx_end, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_store</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a79b77f3dff7f479d000aa70da1fa7e3a</anchor>
      <arglist>(double x0, double x1, double h, size_t n, size_t &amp;n_sol, vec_t &amp;x_sol, mat_t &amp;y_sol, mat_t &amp;yerr_sol, mat_t &amp;dydx_sol, func_t &amp;derivs, size_t istart=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_grid</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ab3c8a13cdbea7d711feea80a3337b16d</anchor>
      <arglist>(double h, size_t n, size_t nsol, vec_t &amp;xsol, mat_t &amp;ysol, mat_t &amp;err_sol, mat_t &amp;dydx_sol, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a3d20cc0f45224f4ab22e92969c8e0742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nsteps_out</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a6a6a20ea0c5a4fa83a28b35e6c615c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>abd36ba0132172430a11a178f742a3785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nsteps</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ab2621b2f3127cc19c515c9e87469e813</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>aa04d3730d661635963fbd9cad30045ab</anchor>
      <arglist>(double x, size_t nv, vec_t &amp;y)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>acf160ff6ad8256107bec3737a287d97f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ac0c18f345ec488eb324b2d27f5beb065</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mem_size</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a544325ee48e1c0b6a8fc200d052d5b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>astep_base&lt; vec_t, vec_t, vec_t, func_t &gt; *</type>
      <name>astp</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a4756747ffba32901789ec6e4e8c8c26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a97caba11a6a053aff2c333aaeebaabd8</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>af49dcc1fd2218b301fa4ab907be423ea</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_t &amp;yerr, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ad29985db9880ab5bd65f19835dc1b539</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_t &amp;yerr, vec_t &amp;dydx_end, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_store</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a79b77f3dff7f479d000aa70da1fa7e3a</anchor>
      <arglist>(double x0, double x1, double h, size_t n, size_t &amp;n_sol, vec_t &amp;x_sol, mat_t &amp;y_sol, mat_t &amp;yerr_sol, mat_t &amp;dydx_sol, func_t &amp;derivs, size_t istart=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_grid</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ab3c8a13cdbea7d711feea80a3337b16d</anchor>
      <arglist>(double h, size_t n, size_t nsol, vec_t &amp;xsol, mat_t &amp;ysol, mat_t &amp;err_sol, mat_t &amp;dydx_sol, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>exit_on_fail</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a80017dcda7bded50321c11ebdb4165d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>astep_gsl&lt; vec_t, vec_t, vec_t, func_t &gt;</type>
      <name>gsl_astp</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a3202d9826345065876eb318c2b6ab3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_astep</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ae33faebd40d6b4d243d79ccc129ddf52</anchor>
      <arglist>(astep_base&lt; vec_t, vec_t, vec_t, func_t &gt; &amp;as)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ode_iv_solve&lt; func_t, vec_t, alloc_vec_t, alloc_t &gt;</name>
    <filename>classo2scl_1_1ode__iv__solve.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a10ae64a7c6af61af370b52bd1ae8d8d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a97caba11a6a053aff2c333aaeebaabd8</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>af49dcc1fd2218b301fa4ab907be423ea</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_t &amp;yerr, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ad29985db9880ab5bd65f19835dc1b539</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_t &amp;yerr, vec_t &amp;dydx_end, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_store</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a79b77f3dff7f479d000aa70da1fa7e3a</anchor>
      <arglist>(double x0, double x1, double h, size_t n, size_t &amp;n_sol, vec_t &amp;x_sol, mat_t &amp;y_sol, mat_t &amp;yerr_sol, mat_t &amp;dydx_sol, func_t &amp;derivs, size_t istart=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_grid</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ab3c8a13cdbea7d711feea80a3337b16d</anchor>
      <arglist>(double h, size_t n, size_t nsol, vec_t &amp;xsol, mat_t &amp;ysol, mat_t &amp;err_sol, mat_t &amp;dydx_sol, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a3d20cc0f45224f4ab22e92969c8e0742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nsteps_out</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a6a6a20ea0c5a4fa83a28b35e6c615c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>abd36ba0132172430a11a178f742a3785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nsteps</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ab2621b2f3127cc19c515c9e87469e813</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>aa04d3730d661635963fbd9cad30045ab</anchor>
      <arglist>(double x, size_t nv, vec_t &amp;y)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>acf160ff6ad8256107bec3737a287d97f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ac0c18f345ec488eb324b2d27f5beb065</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mem_size</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a544325ee48e1c0b6a8fc200d052d5b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>astep_base&lt; vec_t, vec_t, vec_t, func_t &gt; *</type>
      <name>astp</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a4756747ffba32901789ec6e4e8c8c26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>exit_on_fail</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a80017dcda7bded50321c11ebdb4165d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>astep_gsl&lt; vec_t, vec_t, vec_t, func_t &gt;</type>
      <name>gsl_astp</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a3202d9826345065876eb318c2b6ab3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_astep</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ae33faebd40d6b4d243d79ccc129ddf52</anchor>
      <arglist>(astep_base&lt; vec_t, vec_t, vec_t, func_t &gt; &amp;as)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a97caba11a6a053aff2c333aaeebaabd8</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>af49dcc1fd2218b301fa4ab907be423ea</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_t &amp;yerr, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_final_value</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ad29985db9880ab5bd65f19835dc1b539</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, vec_t &amp;yend, vec_t &amp;yerr, vec_t &amp;dydx_end, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_store</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>a79b77f3dff7f479d000aa70da1fa7e3a</anchor>
      <arglist>(double x0, double x1, double h, size_t n, size_t &amp;n_sol, vec_t &amp;x_sol, mat_t &amp;y_sol, mat_t &amp;yerr_sol, mat_t &amp;dydx_sol, func_t &amp;derivs, size_t istart=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_grid</name>
      <anchorfile>classo2scl_1_1ode__iv__solve.html</anchorfile>
      <anchor>ab3c8a13cdbea7d711feea80a3337b16d</anchor>
      <arglist>(double h, size_t n, size_t nsol, vec_t &amp;xsol, mat_t &amp;ysol, mat_t &amp;err_sol, mat_t &amp;dydx_sol, func_t &amp;derivs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_iv_table</name>
    <filename>classo2scl_1_1ode__iv__table.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ode_iv_solve&lt; func_t, vec_t, alloc_vec_t, alloc_t &gt;</base>
    <member kind="function">
      <type>int</type>
      <name>solve_grid_table</name>
      <anchorfile>classo2scl_1_1ode__iv__table.html</anchorfile>
      <anchor>ad24b509aa45b51d1084202e27809b255</anchor>
      <arglist>(size_t n, vec_t &amp;ystart, table&lt;&gt; &amp;t, std::string x_col, std::string y_prefix, std::string dydx_prefix, std::string yerr_prefix, func_t &amp;derivs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve_store_table</name>
      <anchorfile>classo2scl_1_1ode__iv__table.html</anchorfile>
      <anchor>aaec1e576cc4fbbcc84bfec2eeefda18f</anchor>
      <arglist>(double x0, double x1, double h, size_t n, vec_t &amp;ystart, size_t &amp;n_sol, table&lt;&gt; &amp;t, std::string x_col, std::string y_prefix, std::string dydx_prefix, std::string yerr_prefix, func_t &amp;derivs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_rk8pd_gsl</name>
    <filename>classo2scl_1_1ode__rk8pd__gsl.html</filename>
    <templarg>vec_y_t</templarg>
    <templarg>vec_dydx_t</templarg>
    <templarg>vec_yerr_t</templarg>
    <templarg>func_t</templarg>
    <base>o2scl::ode_step</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1ode__rk8pd__gsl.html</anchorfile>
      <anchor>a1e927800d5ae878758c46f90486de465</anchor>
      <arglist>(double x, double h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_y_t &amp;yout, vec_yerr_t &amp;yerr, vec_dydx_t &amp;dydx_out, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ndim</name>
      <anchorfile>classo2scl_1_1ode__rk8pd__gsl.html</anchorfile>
      <anchor>af16cb820f95b55ab999cb4e1b79b54df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_rkck_gsl</name>
    <filename>classo2scl_1_1ode__rkck__gsl.html</filename>
    <templarg>vec_y_t</templarg>
    <templarg>vec_dydx_t</templarg>
    <templarg>vec_yerr_t</templarg>
    <templarg>func_t</templarg>
    <base>o2scl::ode_step</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1ode__rkck__gsl.html</anchorfile>
      <anchor>a02ad108f839090ae05d4de98f1d52419</anchor>
      <arglist>(double x, double h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_y_t &amp;yout, vec_yerr_t &amp;yerr, vec_dydx_t &amp;dydx_out, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ndim</name>
      <anchorfile>classo2scl_1_1ode__rkck__gsl.html</anchorfile>
      <anchor>ae841893ef557fd9a84281be424b14bd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ode_rkck_gsl&lt; vec_t, vec_t, vec_t, func_t &gt;</name>
    <filename>classo2scl_1_1ode__rkck__gsl.html</filename>
    <base>ode_step&lt; vec_t, vec_t, vec_t, func_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1ode__rkck__gsl.html</anchorfile>
      <anchor>a02ad108f839090ae05d4de98f1d52419</anchor>
      <arglist>(double x, double h, size_t n, vec_t &amp;y, vec_t &amp;dydx, vec_t &amp;yout, vec_t &amp;yerr, vec_t &amp;dydx_out, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ndim</name>
      <anchorfile>classo2scl_1_1ode__rkck__gsl.html</anchorfile>
      <anchor>ae841893ef557fd9a84281be424b14bd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_rkf45_gsl</name>
    <filename>classo2scl_1_1ode__rkf45__gsl.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::ode_step</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1ode__rkf45__gsl.html</anchorfile>
      <anchor>a64bbc37bacc7278368e43d271b791fec</anchor>
      <arglist>(double x, double h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_y_t &amp;yout, vec_yerr_t &amp;yerr, vec_dydx_t &amp;dydx_out, func_t &amp;derivs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ndim</name>
      <anchorfile>classo2scl_1_1ode__rkf45__gsl.html</anchorfile>
      <anchor>a0940f00225e680bf289188bd5dc65c82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::ode_step</name>
    <filename>classo2scl_1_1ode__step.html</filename>
    <templarg>vec_y_t</templarg>
    <templarg>vec_dydx_t</templarg>
    <templarg>vec_yerr_t</templarg>
    <templarg>func_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>get_order</name>
      <anchorfile>classo2scl_1_1ode__step.html</anchorfile>
      <anchor>a9c66ae1e3ecfd493a5bf774c0ff07222</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1ode__step.html</anchorfile>
      <anchor>a4bb7e303bcbd5c8e779115d2f9a52856</anchor>
      <arglist>(double x, double h, size_t n, vec_y_t &amp;y, vec_dydx_t &amp;dydx, vec_y_t &amp;yout, vec_yerr_t &amp;yerr, vec_dydx_t &amp;dydx_out, func_t &amp;derivs)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>order</name>
      <anchorfile>classo2scl_1_1ode__step.html</anchorfile>
      <anchor>a62e5c88e3604908aac368bc4374eb622</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ode_step&lt; vec_t, vec_t, vec_t, func_t &gt;</name>
    <filename>classo2scl_1_1ode__step.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>get_order</name>
      <anchorfile>classo2scl_1_1ode__step.html</anchorfile>
      <anchor>a9c66ae1e3ecfd493a5bf774c0ff07222</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>step</name>
      <anchorfile>classo2scl_1_1ode__step.html</anchorfile>
      <anchor>a4bb7e303bcbd5c8e779115d2f9a52856</anchor>
      <arglist>(double x, double h, size_t n, vec_t &amp;y, vec_t &amp;dydx, vec_t &amp;yout, vec_t &amp;yerr, vec_t &amp;dydx_out, func_t &amp;derivs)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>order</name>
      <anchorfile>classo2scl_1_1ode__step.html</anchorfile>
      <anchor>a62e5c88e3604908aac368bc4374eb622</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cli::parameter</name>
    <filename>classo2scl_1_1cli_1_1parameter.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter.html</anchorfile>
      <anchor>a2269e32844791ef0bff44fe281c753d0</anchor>
      <arglist>(std::string s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter.html</anchorfile>
      <anchor>a3b9a9088c34442fe5dc5566320af2b41</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>help</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter.html</anchorfile>
      <anchor>abc1c80db51b725f5492bff7f980aa0f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cli::parameter_bool</name>
    <filename>classo2scl_1_1cli_1_1parameter__bool.html</filename>
    <base>o2scl::cli::parameter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__bool.html</anchorfile>
      <anchor>a5eb984dfd6541b48e4a52620300c3a8b</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__bool.html</anchorfile>
      <anchor>a3e87218787ce6f413b50471cfef0536f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool *</type>
      <name>b</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__bool.html</anchorfile>
      <anchor>a604a489dd088622b8fe31315911822d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cli::parameter_double</name>
    <filename>classo2scl_1_1cli_1_1parameter__double.html</filename>
    <base>o2scl::cli::parameter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__double.html</anchorfile>
      <anchor>a66f71817225e24ee528a9c23092b1598</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__double.html</anchorfile>
      <anchor>a093e0242162854f2b744eb2e46223bce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>d</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__double.html</anchorfile>
      <anchor>a19ea94c30f6d4afd8109712b28cc98da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>parse_strings</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__double.html</anchorfile>
      <anchor>a1787dc225abd1b5d74c222f8500f9a76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cli::parameter_int</name>
    <filename>classo2scl_1_1cli_1_1parameter__int.html</filename>
    <base>o2scl::cli::parameter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__int.html</anchorfile>
      <anchor>abba2bc3963d9515aab35da7a3d5ac183</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__int.html</anchorfile>
      <anchor>a08843c185333919ff316cffe50a99bf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>i</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__int.html</anchorfile>
      <anchor>aca5b42cb1e233249c9d68a30551bb0a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cli::parameter_size_t</name>
    <filename>classo2scl_1_1cli_1_1parameter__size__t.html</filename>
    <base>o2scl::cli::parameter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__size__t.html</anchorfile>
      <anchor>ae7e3f35c83417df40c4d6fbac1dbf23e</anchor>
      <arglist>(std::string st)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__size__t.html</anchorfile>
      <anchor>a691148e118e1a8c6c5797df9ad59f3b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>size_t *</type>
      <name>s</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__size__t.html</anchorfile>
      <anchor>a56ebdd41456ca0e5e3cbafb9725fece3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::cli::parameter_string</name>
    <filename>classo2scl_1_1cli_1_1parameter__string.html</filename>
    <base>o2scl::cli::parameter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__string.html</anchorfile>
      <anchor>af59ff85442b7ad75b2f77cd97259594c</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__string.html</anchorfile>
      <anchor>a2b790f45d99c674af3cbb0a466ef0618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string *</type>
      <name>str</name>
      <anchorfile>classo2scl_1_1cli_1_1parameter__string.html</anchorfile>
      <anchor>aa0b818848d0a9a1c0f69c74f3f1a58da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::permutation</name>
    <filename>classo2scl_1_1permutation.html</filename>
    <member kind="function">
      <type></type>
      <name>permutation</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a005a3e8971342e538456bfdc35ebb7f5</anchor>
      <arglist>(size_t dim=0)</arglist>
    </member>
    <member kind="function">
      <type>size_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>acdac417f55eb3379db748e6a2bcbca9c</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const size_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>aba4b18f64b040c6b28efac6b3a8f95e6</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>size_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a245aab9d0e3d1c5dd76ca01dfbcc150c</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const size_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a18998c8af605d193760aee1122fb1fef</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>ab41fa58b57f9b4a385500c36e01e3463</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>ac8411a351d106619fe04944e3300db9d</anchor>
      <arglist>(size_t i, size_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a21a8f1c8d16893b3f6e81004c327ec1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>ac964d7d87ae257ae7f0d15111a2aabea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>allocate</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a9911b8867cd3988ab52f787a036fb235</anchor>
      <arglist>(size_t dim)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a2610fe16e3f1c9f7a34af9ee12984d16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>ad33c86a5c01939954d74b732d3189d2b</anchor>
      <arglist>(size_t dim)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>swap</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a3b9d817602cb76259a7871e3bd84d70f</anchor>
      <arglist>(const size_t i, const size_t j)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a34921de9309903f1e297e6b103a73483</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>reverse</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a76cd447e2d74ce48bd20f6efa099a58f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>permutation</type>
      <name>inverse</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a038c65338423cb2f10de9d52214e8f94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>apply</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>acf78ee1101d022a1b355961ccdc9c9cb</anchor>
      <arglist>(vec_t &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>apply_inverse</name>
      <anchorfile>classo2scl_1_1permutation.html</anchorfile>
      <anchor>a20673a0e44db5e3a1e0cee481b11c090</anchor>
      <arglist>(vec_t &amp;v) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::pinside</name>
    <filename>classo2scl_1_1pinside.html</filename>
    <class kind="struct">o2scl::pinside::line</class>
    <class kind="struct">o2scl::pinside::point</class>
    <member kind="function">
      <type>int</type>
      <name>intersect</name>
      <anchorfile>classo2scl_1_1pinside.html</anchorfile>
      <anchor>a912b0c13cb0d3fcb2a022b815b9d84ab</anchor>
      <arglist>(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>inside</name>
      <anchorfile>classo2scl_1_1pinside.html</anchorfile>
      <anchor>a0b08a8d60f1d4bbdddb5375cf965648c</anchor>
      <arglist>(double x, double y, const ubvector &amp;xa, const ubvector &amp;ya)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>inside</name>
      <anchorfile>classo2scl_1_1pinside.html</anchorfile>
      <anchor>a97699db7e759a2b6c575747ea50f7435</anchor>
      <arglist>(double x, double y, size_t n, const vec_t &amp;xa, const vec_t &amp;ya)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>test</name>
      <anchorfile>classo2scl_1_1pinside.html</anchorfile>
      <anchor>a6964015526d0e5c24a3b670c3ad778ea</anchor>
      <arglist>(test_mgr &amp;t)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>intersect</name>
      <anchorfile>classo2scl_1_1pinside.html</anchorfile>
      <anchor>adf9f18f89b6f0a89cb59679e1800d505</anchor>
      <arglist>(line P, line Q)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>inside</name>
      <anchorfile>classo2scl_1_1pinside.html</anchorfile>
      <anchor>a307454007eb432a8126a899b6feb2694</anchor>
      <arglist>(point t, point p[], int N)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>o2scl::pinside::point</name>
    <filename>structo2scl_1_1pinside_1_1point.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl::poly_complex</name>
    <filename>classo2scl_1_1poly__complex.html</filename>
    <base>o2scl::quadratic_complex</base>
    <base>o2scl::cubic_complex</base>
    <base>o2scl::quartic_complex</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_c</name>
      <anchorfile>classo2scl_1_1poly__complex.html</anchorfile>
      <anchor>a80a9f8ee410482f11115ac328a495bd2</anchor>
      <arglist>(int n, const std::complex&lt; double &gt; co[], std::complex&lt; double &gt; ro[])=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>polish_c</name>
      <anchorfile>classo2scl_1_1poly__complex.html</anchorfile>
      <anchor>ace6711be464bba2f9d51ea22e7e83575</anchor>
      <arglist>(int n, const std::complex&lt; double &gt; co[], std::complex&lt; double &gt; *ro)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1poly__complex.html</anchorfile>
      <anchor>a08bcbeb65bc66ae3d8deb5ced5dbc219</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::poly_real_coeff</name>
    <filename>classo2scl_1_1poly__real__coeff.html</filename>
    <base>o2scl::quadratic_real_coeff</base>
    <base>o2scl::cubic_real_coeff</base>
    <base>o2scl::quartic_real_coeff</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1poly__real__coeff.html</anchorfile>
      <anchor>a3ee444a560ad327b22581c33857066ff</anchor>
      <arglist>(int n, const double co[], std::complex&lt; double &gt; ro[])=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1poly__real__coeff.html</anchorfile>
      <anchor>ab58e76260a537e9b54a0f60b26fca8a6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::poly_real_coeff_gsl</name>
    <filename>classo2scl_1_1poly__real__coeff__gsl.html</filename>
    <base>o2scl::poly_real_coeff</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1poly__real__coeff__gsl.html</anchorfile>
      <anchor>aec609dd2faa97b5fe2c25d8a5061baae</anchor>
      <arglist>(int n, const double co[], std::complex&lt; double &gt; ro[])</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1poly__real__coeff__gsl.html</anchorfile>
      <anchor>ac0a4acd902e559847663af0cbcfc5e12</anchor>
      <arglist>(const double a3, const double b3, const double c3, const double d3, double &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1poly__real__coeff__gsl.html</anchorfile>
      <anchor>ab49bee57c010deafcc15a7bb487c20fc</anchor>
      <arglist>(const double a2, const double b2, const double c2, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1poly__real__coeff__gsl.html</anchorfile>
      <anchor>a29214f751e936ec0a512f4d68a9037c4</anchor>
      <arglist>(const double a4, const double b4, const double c4, const double d4, const double e4, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3, std::complex&lt; double &gt; &amp;x4)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1poly__real__coeff__gsl.html</anchorfile>
      <anchor>a87d40bffaaae748aa0440edbccead553</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_poly_complex_workspace *</type>
      <name>w2</name>
      <anchorfile>classo2scl_1_1poly__real__coeff__gsl.html</anchorfile>
      <anchor>a51f43faa40976f03c66d84fcd131327b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_poly_complex_workspace *</type>
      <name>w3</name>
      <anchorfile>classo2scl_1_1poly__real__coeff__gsl.html</anchorfile>
      <anchor>a35511f6245b98b51203c727333135197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_poly_complex_workspace *</type>
      <name>w4</name>
      <anchorfile>classo2scl_1_1poly__real__coeff__gsl.html</anchorfile>
      <anchor>a8d9044dfb59eb3f06aa1e92053c9d7a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_poly_complex_workspace *</type>
      <name>wgen</name>
      <anchorfile>classo2scl_1_1poly__real__coeff__gsl.html</anchorfile>
      <anchor>a44601b37820c5e28a44a1f0f149e3c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>gen_size</name>
      <anchorfile>classo2scl_1_1poly__real__coeff__gsl.html</anchorfile>
      <anchor>aeac1b62b9f80d498922c4da9fc30cb47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::polylog</name>
    <filename>classo2scl_1_1polylog.html</filename>
    <member kind="function">
      <type>double</type>
      <name>li0</name>
      <anchorfile>classo2scl_1_1polylog.html</anchorfile>
      <anchor>a57c141256ecfb90643a8cd2a9f917a6d</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>li1</name>
      <anchorfile>classo2scl_1_1polylog.html</anchorfile>
      <anchor>ac3936e0ff8e6e5d3dc0a7ede1743e931</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>li2</name>
      <anchorfile>classo2scl_1_1polylog.html</anchorfile>
      <anchor>a8585e03d45b87d8c2df205650b88f5b0</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>li3</name>
      <anchorfile>classo2scl_1_1polylog.html</anchorfile>
      <anchor>a2f85271d08dafbc625aa6e2a1e3c640c</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>li4</name>
      <anchorfile>classo2scl_1_1polylog.html</anchorfile>
      <anchor>ae9a3787df270bd58beacf6926fe52475</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>li5</name>
      <anchorfile>classo2scl_1_1polylog.html</anchorfile>
      <anchor>a1037ad50be83668628fafade61a056cd</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>li6</name>
      <anchorfile>classo2scl_1_1polylog.html</anchorfile>
      <anchor>a3656ce5ab2fea99e6a30674752b8db28</anchor>
      <arglist>(double x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_cond_mdim</name>
    <filename>classo2scl_1_1prob__cond__mdim.html</filename>
    <templarg>vec_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim.html</anchorfile>
      <anchor>aeda4bdf14e365b7d22ae13dd5b13491a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim.html</anchorfile>
      <anchor>a70d31dd00c09bf8a432ef429f795b1a8</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;x2) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim.html</anchorfile>
      <anchor>a02395e53c6ea8a01beb5f1d806b9e06d</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;x2) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim.html</anchorfile>
      <anchor>a95ce23334d00b4e7a15b1645a92ded53</anchor>
      <arglist>(const vec_t &amp;x, vec_t &amp;x2) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>metrop_hast</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim.html</anchorfile>
      <anchor>a6d668e6e958e7a9b34026e1aa2ca4fbd</anchor>
      <arglist>(const vec_t &amp;x, vec_t &amp;x2) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_cond_mdim_gaussian</name>
    <filename>classo2scl_1_1prob__cond__mdim__gaussian.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::prob_cond_mdim</base>
    <member kind="function">
      <type></type>
      <name>prob_cond_mdim_gaussian</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>a29070baf013a8b2b2284e3990b85ba7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_cond_mdim_gaussian</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>a6aea8b45475ed1b3345a920bf079b06a</anchor>
      <arglist>(size_t p_ndim, mat_t &amp;covar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>a8faa6a849cca66c781a872a2bf2d2cc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>ae02e37e78220cd5fd2cd3ebb0c44edba</anchor>
      <arglist>(size_t p_ndim, mat_t &amp;covar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>a573fb86ea3f8b129e3f4bf4f7703859c</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;x2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>ac66d3ffec82efa309e4c0eff009c8ded</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;x2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>a1083678dd55e536bbe8742574932283a</anchor>
      <arglist>(const vec_t &amp;x, vec_t &amp;x2) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>chol</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>af2572e5915eb22617222c36f47cac36a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>covar_inv</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>a25be05ca79d4b4ebd4e16527b485c925</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>a64d425b359713fadcc4b9db91b5ce8cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ndim</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>a15422940e4b6e25a3093cf03ab8df593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>q</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>a1e7ae6043c3b49d364bcf0f1da5f6732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>vtmp</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>ac0df62a2f81e627bf7dfac60f5f91da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::prob_dens_gaussian</type>
      <name>pdg</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__gaussian.html</anchorfile>
      <anchor>a3d1ee8fd0e18d6632cf32b90ea1857e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_cond_mdim_invar</name>
    <filename>classo2scl_1_1prob__cond__mdim__invar.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__invar.html</anchorfile>
      <anchor>aaf404ecfd74ed35c28903a87e01adc99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__invar.html</anchorfile>
      <anchor>a44bc195382e90258069f324479f7da05</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;x2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__invar.html</anchorfile>
      <anchor>a22a4937ed4673f1d23451f956803a26a</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;x2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__invar.html</anchorfile>
      <anchor>a82967460d0dd8be93be932ee1ec7710d</anchor>
      <arglist>(const vec_t &amp;x, vec_t &amp;x2) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_cond_mdim_rand_walk</name>
    <filename>classo2scl_1_1prob__cond__mdim__rand__walk.html</filename>
    <templarg></templarg>
    <base>o2scl::prob_cond_mdim</base>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__rand__walk.html</anchorfile>
      <anchor>ad1886f287439b6ecd51ef4a164dad745</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__rand__walk.html</anchorfile>
      <anchor>a39f7da465234cc3b30a16382fa7c87f9</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;x2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__rand__walk.html</anchorfile>
      <anchor>a8289214ab7b505c7bf3f950c98dbd7b1</anchor>
      <arglist>(const vec_t &amp;x, const vec_t &amp;x2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__rand__walk.html</anchorfile>
      <anchor>a7add21c7190931bf235d0de860e75b54</anchor>
      <arglist>(const vec_t &amp;x, vec_t &amp;x2) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::random_device</type>
      <name>rd</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__rand__walk.html</anchorfile>
      <anchor>a6f2d50a155b5733af7457893193da196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>u_step</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__rand__walk.html</anchorfile>
      <anchor>adb5c646d40e6e20d22884e73a964c5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>u_low</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__rand__walk.html</anchorfile>
      <anchor>a0ec186624c20f4d61b071aec8ef8994e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>u_high</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__rand__walk.html</anchorfile>
      <anchor>a8c6ca24b835b0f74918b369c2f829f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>rng_gsl</type>
      <name>rg</name>
      <anchorfile>classo2scl_1_1prob__cond__mdim__rand__walk.html</anchorfile>
      <anchor>aa3548c1e64b39d0427b3d87afcea295e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_frange</name>
    <filename>classo2scl_1_1prob__dens__frange.html</filename>
    <base>o2scl::prob_dens_func</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>lower_limit</name>
      <anchorfile>classo2scl_1_1prob__dens__frange.html</anchorfile>
      <anchor>a90c2cf895528aa867ec25b9cf982ed01</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>upper_limit</name>
      <anchorfile>classo2scl_1_1prob__dens__frange.html</anchorfile>
      <anchor>a48f55c2b88286597956dd0f36c504ae0</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_func</name>
    <filename>classo2scl_1_1prob__dens__func.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__dens__func.html</anchorfile>
      <anchor>aab7c61ab2b7d1c9610305cd24ce94d31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__func.html</anchorfile>
      <anchor>a789ce2848aed1c3af4d077fad11bbbd8</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__func.html</anchorfile>
      <anchor>a1d5758ef5f9580f603ae875baccf7c26</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cdf</name>
      <anchorfile>classo2scl_1_1prob__dens__func.html</anchorfile>
      <anchor>a344cda8ead42a7db6c69de6f87468d89</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>invert_cdf</name>
      <anchorfile>classo2scl_1_1prob__dens__func.html</anchorfile>
      <anchor>ade4db0bb3fc561873ede2d46d13402e9</anchor>
      <arglist>(double cdf) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>entropy</name>
      <anchorfile>classo2scl_1_1prob__dens__func.html</anchorfile>
      <anchor>a14d8fd58e94700157a585eba6cd93c56</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_gaussian</name>
    <filename>classo2scl_1_1prob__dens__gaussian.html</filename>
    <base>o2scl::prob_dens_func</base>
    <member kind="function">
      <type></type>
      <name>prob_dens_gaussian</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>af5838ffd6379d6ba374877724a58fa1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_dens_gaussian</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a244b265ad66db03a594afb473abcf31f</anchor>
      <arglist>(double cent, double sigma)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_dens_gaussian</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>ac1849cfdbd7787c9d028c8a664fc4345</anchor>
      <arglist>(const prob_dens_gaussian &amp;pdg)</arglist>
    </member>
    <member kind="function">
      <type>prob_dens_gaussian &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a936df68e965fb94cf0a3f63abe3238c1</anchor>
      <arglist>(const prob_dens_gaussian &amp;pdg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_seed</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a69e9f8bf15455f85c6e6be30442c4fdd</anchor>
      <arglist>(unsigned long int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_center</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a1c908ddbefae5a27cbd33515330202ce</anchor>
      <arglist>(double cent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sigma</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>ac2aa36ca87271bbb96825b1cf5d38a21</anchor>
      <arglist>(double sigma)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>mean</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a283d2dfc9f9fb9786740a168909e0115</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>stddev</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>af174cda45a76a095462975085d055f40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>aeda7e8abde44636f1d126afb8281d178</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a928175dab37d7aad4ea74d446e74ef2c</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a67659ac386a8568e08c803ff8b6359b2</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cdf</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a77688a36dd38d670df7e49638be2e589</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>invert_cdf</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a614ed9b4cd3fd6526d058a6a4c975a8b</anchor>
      <arglist>(double in_cdf) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>entropy</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a1d2a39fcc4f8bcbebff46c7547fc21ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>cent_</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>ac43eb24fa69af517c7c2ee7acacb2574</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sigma_</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>ac4693e481d41fd5f2db47c0072b105d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::rng_gsl</type>
      <name>r</name>
      <anchorfile>classo2scl_1_1prob__dens__gaussian.html</anchorfile>
      <anchor>a0965d50e226eb677908921c1afda72e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_hist</name>
    <filename>classo2scl_1_1prob__dens__hist.html</filename>
    <base>o2scl::prob_dens_frange</base>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a348a70aa78190fd65c78d078f77d7d00</anchor>
      <arglist>(hist &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>partial_sums</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>ac36d71c615e765f60f2e9c0a580dbffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>bin_ranges</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a43a0d405198a4aa304ee286caed27f2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>aaad8c11dc7ddeeea71487951636ff767</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>lower_limit</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>ab8f263fe8b04699e618315a9e2785344</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>upper_limit</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a415f6ae178e9c18649944eb86bf20f2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a996a8ce3188abda3943484668ee8bdcf</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a3ce40a3c91209f603c1579abf9a1474a</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cdf</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a5509c230a3316541c7eb7605b3d5e476</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>invert_cdf</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>ace59febcc63f24200976535fd1c8177e</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>entropy</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a2bd67bc146ca4f55f711445871ee4939</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>search_vec&lt; ubvector &gt;</type>
      <name>sv</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>af23f46f6054be1368ebb69e30c5ee67b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a04babd04870c62c792d7dfaaa2366133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>sum</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a5a0eaa5c3e020f85d15a2b6261ed41ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>range</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a714260cd38a45f1cc79e5ae86c1c3bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>rng_gsl</type>
      <name>rng</name>
      <anchorfile>classo2scl_1_1prob__dens__hist.html</anchorfile>
      <anchor>a88e1611a0ffb0246172be9a8a1ab1081</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_lognormal</name>
    <filename>classo2scl_1_1prob__dens__lognormal.html</filename>
    <base>o2scl::prob_dens_positive</base>
    <member kind="function">
      <type></type>
      <name>prob_dens_lognormal</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>ab1500b6a3245b25f968fe21e48aa2901</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_dens_lognormal</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a675527368187f5fb614ed68bc39c84f6</anchor>
      <arglist>(double mu, double sigma)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_dens_lognormal</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a3f955a39fd08890fab01e03184d078e8</anchor>
      <arglist>(const prob_dens_lognormal &amp;pdg)</arglist>
    </member>
    <member kind="function">
      <type>prob_dens_lognormal &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a94e6c13e9e08916ede1228e50373be48</anchor>
      <arglist>(const prob_dens_lognormal &amp;pdg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mu_sigma</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a2522d8f825f06a6b1c0e33b9e0af21e3</anchor>
      <arglist>(double mu, double sigma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_seed</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a1d1f1219729cd8a1df7247095cdcb60a</anchor>
      <arglist>(unsigned long int s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a24ab5a41e6fb60de0974c6b9f4b786d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>afa2ca0f5fea64387c51bbf8824cc33c2</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>aff8657d57c64fdbe241105ff3b95dde7</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cdf</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>aa1bfa77556b16c2644cbe72184f0900a</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>invert_cdf</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a2106b266139b92d1c0473160a4124192</anchor>
      <arglist>(double in_cdf) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>entropy</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a9dd06029cd155d9af857885154653ddf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sigma_</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a2f54e745a87d0c215572d0181fa5e071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mu_</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a0b56a276220a550b8e648b9517e83d99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>rng_gsl</type>
      <name>r</name>
      <anchorfile>classo2scl_1_1prob__dens__lognormal.html</anchorfile>
      <anchor>a3096b2ab7fcc134c0d3c0f70faec218d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_mdim</name>
    <filename>classo2scl_1_1prob__dens__mdim.html</filename>
    <templarg>vec_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim.html</anchorfile>
      <anchor>add32e99ad8c345fd804532837a6a893d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim.html</anchorfile>
      <anchor>ab80ae7886e080afd831896495122797f</anchor>
      <arglist>(const vec_t &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim.html</anchorfile>
      <anchor>a3b32e2a9d3a5ecda1c1d22326e45cf1f</anchor>
      <arglist>(const vec_t &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim.html</anchorfile>
      <anchor>a844372b77df01f133cf6906ca15ff613</anchor>
      <arglist>(vec_t &amp;x) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_mdim_factor</name>
    <filename>classo2scl_1_1prob__dens__mdim__factor.html</filename>
    <templarg></templarg>
    <base>o2scl::prob_dens_mdim</base>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__factor.html</anchorfile>
      <anchor>ac627b62b9f3fb70c83b78141a1aed944</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__factor.html</anchorfile>
      <anchor>a8b60683da2aad76290a768dc808dbbcb</anchor>
      <arglist>(const vec_t &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__factor.html</anchorfile>
      <anchor>aff9d33d9e92409bc8b4ebc1855d297d8</anchor>
      <arglist>(const vec_t &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__factor.html</anchorfile>
      <anchor>ace7105ae74df092265e0bce0f61cb630</anchor>
      <arglist>(vec_t &amp;x) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; prob_dens_func &gt;</type>
      <name>list</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__factor.html</anchorfile>
      <anchor>a23ac39ce7169cf835335781f85ddbb6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_mdim_gaussian</name>
    <filename>classo2scl_1_1prob__dens__mdim__gaussian.html</filename>
    <templarg>vec_t</templarg>
    <templarg>mat_t</templarg>
    <base>o2scl::prob_dens_mdim</base>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a4fdb23e3fd30593121ae084202f9c78c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_dens_mdim_gaussian</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a17b722505bebf85f662c488d8d5780f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_dens_mdim_gaussian</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>ab535602be19af21c43678ffb674224ae</anchor>
      <arglist>(size_t p_ndim, vec_t &amp;p_peak, mat_t &amp;covar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a0d82c64c8a04d066f7b94f8b17a71335</anchor>
      <arglist>(size_t p_ndim, vec_t &amp;p_peak, mat_t &amp;covar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alt</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a0eb15969884ee08b42ff66821963b658</anchor>
      <arglist>(size_t p_ndim, vec_t &amp;p_peak, mat_t &amp;p_chol, mat_t &amp;p_covar_inv, double p_norm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_gproc</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a21ceaf2cff1ad653e628a4d8cdc89810</anchor>
      <arglist>(size_t n_dim, size_t n_init, vec_vec_t &amp;x, vec_t &amp;y, func_t &amp;fcovar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a50d06707aff7dfe6bd6bc7af64994e77</anchor>
      <arglist>(const vec_t &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a0efb124cf9ef47cb61f34b54de28cd00</anchor>
      <arglist>(const vec_t &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>ac3eaf5f1624010b41708992c8ee5c07c</anchor>
      <arglist>(vec_t &amp;x) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>chol</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a74ddfdff14804337d3a46c0def87b7f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mat_t</type>
      <name>covar_inv</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>aaeaf04fa4271a3c3e5d01a6cde32725c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>peak</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a5c448d367c927a839db7de30ea4fce55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a08988c6d8690b1b55b1974f84f7cd642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ndim</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>af4f2b0d39de5f84136f9f7ee02ce3f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>q</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>ad38abfc9e751ff0f173defba45917fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>vtmp</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a0ad1e73459665162152f7a4c386d37af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::prob_dens_gaussian</type>
      <name>pdg</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a43d0b0ca390af71aa5ae55127b4cfcc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>prob_dens_mdim_gaussian&lt; vec_t &gt;</name>
    <filename>classo2scl_1_1prob__dens__mdim__gaussian.html</filename>
    <base>o2scl::prob_dens_mdim</base>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a4fdb23e3fd30593121ae084202f9c78c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_dens_mdim_gaussian</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a17b722505bebf85f662c488d8d5780f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_dens_mdim_gaussian</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>ab535602be19af21c43678ffb674224ae</anchor>
      <arglist>(size_t p_ndim, vec_t &amp;p_peak, boost::numeric::ublas::matrix&lt; double &gt; &amp;covar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a0d82c64c8a04d066f7b94f8b17a71335</anchor>
      <arglist>(size_t p_ndim, vec_t &amp;p_peak, boost::numeric::ublas::matrix&lt; double &gt; &amp;covar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alt</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a0eb15969884ee08b42ff66821963b658</anchor>
      <arglist>(size_t p_ndim, vec_t &amp;p_peak, boost::numeric::ublas::matrix&lt; double &gt; &amp;p_chol, boost::numeric::ublas::matrix&lt; double &gt; &amp;p_covar_inv, double p_norm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_gproc</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a21ceaf2cff1ad653e628a4d8cdc89810</anchor>
      <arglist>(size_t n_dim, size_t n_init, vec_vec_t &amp;x, vec_t &amp;y, func_t &amp;fcovar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a50d06707aff7dfe6bd6bc7af64994e77</anchor>
      <arglist>(const vec_t &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a0efb124cf9ef47cb61f34b54de28cd00</anchor>
      <arglist>(const vec_t &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>ac3eaf5f1624010b41708992c8ee5c07c</anchor>
      <arglist>(vec_t &amp;x) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::numeric::ublas::matrix&lt; double &gt;</type>
      <name>chol</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a74ddfdff14804337d3a46c0def87b7f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::numeric::ublas::matrix&lt; double &gt;</type>
      <name>covar_inv</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>aaeaf04fa4271a3c3e5d01a6cde32725c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>peak</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a5c448d367c927a839db7de30ea4fce55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a08988c6d8690b1b55b1974f84f7cd642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ndim</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>af4f2b0d39de5f84136f9f7ee02ce3f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>q</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>ad38abfc9e751ff0f173defba45917fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>vtmp</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a0ad1e73459665162152f7a4c386d37af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>o2scl::prob_dens_gaussian</type>
      <name>pdg</name>
      <anchorfile>classo2scl_1_1prob__dens__mdim__gaussian.html</anchorfile>
      <anchor>a43d0b0ca390af71aa5ae55127b4cfcc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_mdim_gproc</name>
    <filename>classo2scl_1_1prob__dens__mdim__gproc.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>prob_dens_mdim_gaussian&lt; vec_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_positive</name>
    <filename>classo2scl_1_1prob__dens__positive.html</filename>
    <base>o2scl::prob_dens_func</base>
  </compound>
  <compound kind="class">
    <name>o2scl::prob_dens_uniform</name>
    <filename>classo2scl_1_1prob__dens__uniform.html</filename>
    <base>o2scl::prob_dens_frange</base>
    <member kind="function">
      <type></type>
      <name>prob_dens_uniform</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>aeb65e614031d0675231c3f5a8f5c1a66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_dens_uniform</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>a0f6b1bf1c68d496fab4b4db700e716b1</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>prob_dens_uniform</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>a894431ed4878802b677786822b1470c2</anchor>
      <arglist>(const prob_dens_uniform &amp;pdg)</arglist>
    </member>
    <member kind="function">
      <type>prob_dens_uniform &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>a552de20e680570d86bce0386ebaaebb9</anchor>
      <arglist>(const prob_dens_uniform &amp;pdg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_seed</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>aeac83fd7585d78446c8eda49c419ca0c</anchor>
      <arglist>(unsigned long int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_limits</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>acbabea066cb069049b958d07b3804fd7</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>lower_limit</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>a95c1dd9c94c0d7af045e2c32bbf5a35a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>upper_limit</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>a09e196a90c5f56fbe4c0bd1be2696fce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>aa6fc4a07b141327a0dd5c0cb5ab4f06c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>a2dbd14c583b64349becc4ae8d341bb2c</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>log_pdf</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>a8a912ca160842984e46bc17d226093b2</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cdf</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>ade748c3edf715d7e62f1d33201d253b0</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>invert_cdf</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>a08382a348e92053617bd8c13254c9104</anchor>
      <arglist>(double in_cdf) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>entropy</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>abbef7c4cc3ac9084524e0d1b7c7ab30c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>ll</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>a35f8c3e82c1ff7d2a6bbe0607c9cd55b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>ul</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>a2f9f687b5745f59606a5f9cbce0e99ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>rng_gsl</type>
      <name>r</name>
      <anchorfile>classo2scl_1_1prob__dens__uniform.html</anchorfile>
      <anchor>ae78879e0a8162a10d32aa247851a7161</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quadratic_complex</name>
    <filename>classo2scl_1_1quadratic__complex.html</filename>
    <base>o2scl::quadratic_real_coeff</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1quadratic__complex.html</anchorfile>
      <anchor>a493657d1402b86acac14523415776079</anchor>
      <arglist>(const double a2, const double b2, const double c2, double &amp;x1, double &amp;x2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1quadratic__complex.html</anchorfile>
      <anchor>ab5d9a130a66ff4398c253fb2950d7c47</anchor>
      <arglist>(const double a2, const double b2, const double c2, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_c</name>
      <anchorfile>classo2scl_1_1quadratic__complex.html</anchorfile>
      <anchor>a97dfd2e2267982d8c81d87f14ed49d80</anchor>
      <arglist>(const std::complex&lt; double &gt; a2, const std::complex&lt; double &gt; b2, const std::complex&lt; double &gt; c2, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quadratic__complex.html</anchorfile>
      <anchor>af24ad63558616faf3c60e14fbfc9c138</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quadratic_complex_std</name>
    <filename>classo2scl_1_1quadratic__complex__std.html</filename>
    <base>o2scl::quadratic_complex</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_c</name>
      <anchorfile>classo2scl_1_1quadratic__complex__std.html</anchorfile>
      <anchor>ad12d6c62870a33c5f20bd610120a27c7</anchor>
      <arglist>(const std::complex&lt; double &gt; a2, const std::complex&lt; double &gt; b2, const std::complex&lt; double &gt; c2, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quadratic__complex__std.html</anchorfile>
      <anchor>aceb71b011b761f4c9fab98b780ffe976</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quadratic_real</name>
    <filename>classo2scl_1_1quadratic__real.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1quadratic__real.html</anchorfile>
      <anchor>af1f43d9acd879d26bcdceec559b8b29f</anchor>
      <arglist>(const double a2, const double b2, const double c2, double &amp;x1, double &amp;x2)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quadratic__real.html</anchorfile>
      <anchor>a42d94a21b30885029526042cfb066515</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quadratic_real_coeff</name>
    <filename>classo2scl_1_1quadratic__real__coeff.html</filename>
    <base>o2scl::quadratic_real</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1quadratic__real__coeff.html</anchorfile>
      <anchor>ade5b78040200f1f769e71f9ccda1dfd4</anchor>
      <arglist>(const double a2, const double b2, const double c2, double &amp;x1, double &amp;x2)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1quadratic__real__coeff.html</anchorfile>
      <anchor>a7887c0858bb2e3f63ab533f179cd5fa7</anchor>
      <arglist>(const double a2, const double b2, const double c2, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quadratic__real__coeff.html</anchorfile>
      <anchor>a95da5194b57a85e3f8721259889a62cc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quadratic_real_coeff_gsl</name>
    <filename>classo2scl_1_1quadratic__real__coeff__gsl.html</filename>
    <base>o2scl::quadratic_real_coeff</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1quadratic__real__coeff__gsl.html</anchorfile>
      <anchor>aef0b90183bce95337c262b9accc63f80</anchor>
      <arglist>(const double a2, const double b2, const double c2, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quadratic__real__coeff__gsl.html</anchorfile>
      <anchor>a87b511e2baf413243c3b63605c10656c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quartic_complex</name>
    <filename>classo2scl_1_1quartic__complex.html</filename>
    <base>o2scl::quartic_real_coeff</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1quartic__complex.html</anchorfile>
      <anchor>a89221a5fbafd860b838d03a196d62e6d</anchor>
      <arglist>(const double a4, const double b4, const double c4, const double d4, const double e4, double &amp;x1, double &amp;x2, double &amp;x3, double &amp;x4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1quartic__complex.html</anchorfile>
      <anchor>aa74baa3e8dfa267374b372a1a8a64f59</anchor>
      <arglist>(const double a4, const double b4, const double c4, const double d4, const double e4, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3, std::complex&lt; double &gt; &amp;x4)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_c</name>
      <anchorfile>classo2scl_1_1quartic__complex.html</anchorfile>
      <anchor>a10f127a79a6d783d3124ad2a33680f46</anchor>
      <arglist>(const std::complex&lt; double &gt; a4, const std::complex&lt; double &gt; b4, const std::complex&lt; double &gt; c4, const std::complex&lt; double &gt; d4, const std::complex&lt; double &gt; e4, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3, std::complex&lt; double &gt; &amp;x4)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quartic__complex.html</anchorfile>
      <anchor>a5a41a91452bec8a07abd0f399ef37626</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quartic_complex_simple</name>
    <filename>classo2scl_1_1quartic__complex__simple.html</filename>
    <base>o2scl::quartic_complex</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_c</name>
      <anchorfile>classo2scl_1_1quartic__complex__simple.html</anchorfile>
      <anchor>a63cd77f621c2cc2a5b167c86d865fe85</anchor>
      <arglist>(const std::complex&lt; double &gt; a4, const std::complex&lt; double &gt; b4, const std::complex&lt; double &gt; c4, const std::complex&lt; double &gt; d4, const std::complex&lt; double &gt; e4, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3, std::complex&lt; double &gt; &amp;x4)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quartic__complex__simple.html</anchorfile>
      <anchor>ae0b1ca8762e34ab78a5df1aebc631e68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>cubic_complex_std</type>
      <name>cub_obj</name>
      <anchorfile>classo2scl_1_1quartic__complex__simple.html</anchorfile>
      <anchor>a72906f09b3631b46cdc0a2a8e4cd7d2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quartic_real</name>
    <filename>classo2scl_1_1quartic__real.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1quartic__real.html</anchorfile>
      <anchor>a180c1248495d07170d2ac3b0677f9398</anchor>
      <arglist>(const double a4, const double b4, const double c4, const double d4, const double e4, double &amp;x1, double &amp;x2, double &amp;x3, double &amp;x4)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quartic__real.html</anchorfile>
      <anchor>ab49facb070b22a31b512ed4a78b06af7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quartic_real_coeff</name>
    <filename>classo2scl_1_1quartic__real__coeff.html</filename>
    <base>o2scl::quartic_real</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1quartic__real__coeff.html</anchorfile>
      <anchor>ac2e26db6ccc405b6c9c1bbb1f0c62314</anchor>
      <arglist>(const double a4, const double b4, const double c4, const double d4, const double e4, double &amp;x1, double &amp;x2, double &amp;x3, double &amp;x4)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1quartic__real__coeff.html</anchorfile>
      <anchor>a4dc2ca941b4ee6920f1b709262612382</anchor>
      <arglist>(const double a4, const double b4, const double c4, const double d4, const double e4, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3, std::complex&lt; double &gt; &amp;x4)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quartic__real__coeff.html</anchorfile>
      <anchor>a396874b0a4be573cdfb5111dddf0eda8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quartic_real_coeff_cern</name>
    <filename>classo2scl_1_1quartic__real__coeff__cern.html</filename>
    <base>o2scl::quartic_real_coeff</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_rc</name>
      <anchorfile>classo2scl_1_1quartic__real__coeff__cern.html</anchorfile>
      <anchor>ae0d8b05ff8bf57b880b54d6443837020</anchor>
      <arglist>(const double a4, const double b4, const double c4, const double d4, const double e4, std::complex&lt; double &gt; &amp;x1, std::complex&lt; double &gt; &amp;x2, std::complex&lt; double &gt; &amp;x3, std::complex&lt; double &gt; &amp;x4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rrteq4</name>
      <anchorfile>classo2scl_1_1quartic__real__coeff__cern.html</anchorfile>
      <anchor>a449383d0abf201670b182e882b5bba2d</anchor>
      <arglist>(double a, double b, double c, double d, std::complex&lt; double &gt; z[], double &amp;dc, int &amp;mt)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quartic__real__coeff__cern.html</anchorfile>
      <anchor>a7d60576d66908ec3aac80b47df99f5c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>cubic_real_coeff_cern</type>
      <name>cub_obj</name>
      <anchorfile>classo2scl_1_1quartic__real__coeff__cern.html</anchorfile>
      <anchor>aa57dffe6589ba796fd1847773d309b40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quartic_real_gsl</name>
    <filename>classo2scl_1_1quartic__real__gsl.html</filename>
    <base>o2scl::quartic_real</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1quartic__real__gsl.html</anchorfile>
      <anchor>a1307fef54904119ed1a784d603725479</anchor>
      <arglist>(const double a4, const double b4, const double c4, const double d4, const double e4, double &amp;x1, double &amp;x2, double &amp;x3, double &amp;x4)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quartic__real__gsl.html</anchorfile>
      <anchor>a3079ba3b54dc9b9a28b15bac8302a30c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>cube_root_tol</name>
      <anchorfile>classo2scl_1_1quartic__real__gsl.html</anchorfile>
      <anchor>aa8477e99bd522b125afbdb70f7cc88cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quartic_real_gsl2</name>
    <filename>classo2scl_1_1quartic__real__gsl2.html</filename>
    <base>o2scl::quartic_real</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1quartic__real__gsl2.html</anchorfile>
      <anchor>a69666a25537ca342855859d58629b56c</anchor>
      <arglist>(const double a4, const double b4, const double c4, const double d4, const double e4, double &amp;x1, double &amp;x2, double &amp;x3, double &amp;x4)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quartic__real__gsl2.html</anchorfile>
      <anchor>aa5d5440fa86bc92e6604ad9387b4e8a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>cube_root_tol</name>
      <anchorfile>classo2scl_1_1quartic__real__gsl2.html</anchorfile>
      <anchor>a03b58473819ce16f9ff29e05e3f34cbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::quartic_real_simple</name>
    <filename>classo2scl_1_1quartic__real__simple.html</filename>
    <base>o2scl::quartic_real</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_r</name>
      <anchorfile>classo2scl_1_1quartic__real__simple.html</anchorfile>
      <anchor>a2e74bfa93cb7a458710af1cb2783e870</anchor>
      <arglist>(const double a4, const double b4, const double c4, const double d4, const double e4, double &amp;x1, double &amp;x2, double &amp;x3, double &amp;x4)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1quartic__real__simple.html</anchorfile>
      <anchor>a1455a61dac59db26141a81a9018e2302</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>cube_root_tol</name>
      <anchorfile>classo2scl_1_1quartic__real__simple.html</anchorfile>
      <anchor>aeded9f791d34940c2edce029e6b75a1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_hcubature::region</name>
    <filename>classo2scl_1_1inte__hcubature_1_1region.html</filename>
    <member kind="variable">
      <type>hypercube</type>
      <name>h</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1region.html</anchorfile>
      <anchor>a5ca31f504a0a091247ddb8f3fe45ef00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>splitDim</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1region.html</anchorfile>
      <anchor>a4d741f634f463a6035d73a308a302b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>fdim</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1region.html</anchorfile>
      <anchor>a8ac0959d5940f16a8c8a53f06374154f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; esterr &gt;</type>
      <name>ee</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1region.html</anchorfile>
      <anchor>a89cc0decc968da19816576b907a21d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>errmax</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1region.html</anchorfile>
      <anchor>aeeaf30fb6be6708e5cde0e5cd829ae71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::rng_gsl</name>
    <filename>classo2scl_1_1rng__gsl.html</filename>
    <member kind="function">
      <type></type>
      <name>rng_gsl</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>a8013d89b2b09fbb51d4e2a93f294b2fc</anchor>
      <arglist>(const gsl_rng_type *gtype=gsl_rng_mt19937)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>rng_gsl</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>a4a52dc21cf9f4bf1b12bb092acdd286d</anchor>
      <arglist>(unsigned long int seed, const gsl_rng_type *gtype=gsl_rng_mt19937)</arglist>
    </member>
    <member kind="function">
      <type>const gsl_rng_type *</type>
      <name>get_type</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>afe7bd35c3dbb49ff11da79e1d10dc840</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>result_type</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>a40b44cef9432c66d092324ed35a73101</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>ae4e206fd43855547a5a147728dada860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>entropy</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>a3eb62d772b86403ac3cbdd649c0e994b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned long int</type>
      <name>max</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>a08aaf7d368d510e165784ebd7ac6bad6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned long int</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>ae716d5994ea79fe494f659459392ecc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned long int</type>
      <name>random_int</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>a1ff78deaf5f8095b4c44a1419482b3e0</anchor>
      <arglist>(unsigned long int n=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_seed</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>ad2a2a131cfcaf6878989416e5f017279</anchor>
      <arglist>(unsigned long int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clock_seed</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>ad7d645e646ccafe8f7f82f31b1b51894</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>rng_gsl &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>af0d00cd189c15986ebcb1414bb29cb9e</anchor>
      <arglist>(const rng_gsl &amp;rg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>rng_gsl</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>a899c5b294892a6b035a016fd1d49df01</anchor>
      <arglist>(const rng_gsl &amp;rg)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned long int</type>
      <name>seed</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>a9853278e6d355568d1257508d55b5fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const gsl_rng_type *</type>
      <name>rng</name>
      <anchorfile>classo2scl_1_1rng__gsl.html</anchorfile>
      <anchor>aad6e3a7521bb0362c2379fac0240966b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::rng_gsl_uniform_real</name>
    <filename>classo2scl_1_1rng__gsl__uniform__real.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl::root</name>
    <filename>classo2scl_1_1root.html</filename>
    <templarg>func_t</templarg>
    <templarg>dfunc_t</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>ae633a81fa35a76f3fba6dbb4b5102c80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a13be962e218621c91a9344f396c4ec94</anchor>
      <arglist>(double x, double y, int iter, double value=0.0, double limit=0.0, std::string comment=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a03d58d0d79fddbc1b28091c12aa69c80</anchor>
      <arglist>(double &amp;x, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_bkt</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a0aa8e88ab70aa0ff60c7691a43256067</anchor>
      <arglist>(double &amp;x1, double x2, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_de</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>ab86677af4af0477f927af60683620d3e</anchor>
      <arglist>(double &amp;x, func_t &amp;func, dfunc_t &amp;df)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>af4f9dc675ee258903371362a48cda565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a1a0669084e0ce4b2cf04369baf8c1fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a1837305a86f8b80d9e1b19f463d7daf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>abab120340bbf8db8b8cf4349dce84c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a312ebd3f34d687549f87277cfaf4034e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a0cceb546817a91119891ff43a9b0cf22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>root&lt; func_t &gt;</name>
    <filename>classo2scl_1_1root.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>ae633a81fa35a76f3fba6dbb4b5102c80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a13be962e218621c91a9344f396c4ec94</anchor>
      <arglist>(double x, double y, int iter, double value=0.0, double limit=0.0, std::string comment=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a03d58d0d79fddbc1b28091c12aa69c80</anchor>
      <arglist>(double &amp;x, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_bkt</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a0aa8e88ab70aa0ff60c7691a43256067</anchor>
      <arglist>(double &amp;x1, double x2, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_de</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>ab86677af4af0477f927af60683620d3e</anchor>
      <arglist>(double &amp;x, func_t &amp;func, func_t &amp;df)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>af4f9dc675ee258903371362a48cda565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a1a0669084e0ce4b2cf04369baf8c1fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a1837305a86f8b80d9e1b19f463d7daf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>abab120340bbf8db8b8cf4349dce84c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a312ebd3f34d687549f87277cfaf4034e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a0cceb546817a91119891ff43a9b0cf22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>root&lt; func_t, func_t &gt;</name>
    <filename>classo2scl_1_1root.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>ae633a81fa35a76f3fba6dbb4b5102c80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>print_iter</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a13be962e218621c91a9344f396c4ec94</anchor>
      <arglist>(double x, double y, int iter, double value=0.0, double limit=0.0, std::string comment=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a03d58d0d79fddbc1b28091c12aa69c80</anchor>
      <arglist>(double &amp;x, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_bkt</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a0aa8e88ab70aa0ff60c7691a43256067</anchor>
      <arglist>(double &amp;x1, double x2, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_de</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>ab86677af4af0477f927af60683620d3e</anchor>
      <arglist>(double &amp;x, func_t &amp;func, func_t &amp;df)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>af4f9dc675ee258903371362a48cda565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_abs</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a1a0669084e0ce4b2cf04369baf8c1fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a1837305a86f8b80d9e1b19f463d7daf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntrial</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>abab120340bbf8db8b8cf4349dce84c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>err_nonconv</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a312ebd3f34d687549f87277cfaf4034e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_ntrial</name>
      <anchorfile>classo2scl_1_1root.html</anchorfile>
      <anchor>a0cceb546817a91119891ff43a9b0cf22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::root_bkt</name>
    <filename>classo2scl_1_1root__bkt.html</filename>
    <templarg>func_t</templarg>
    <templarg>dfunc_t</templarg>
    <base>o2scl::root</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>ae30f44e93c5cd2e426bd3f1dcfcff968</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_bkt</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>a9e073daf4968bceec603614dc1e58949</anchor>
      <arglist>(double &amp;x1, double x2, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>a98e5a582b72a59ed578ced8d792f5ec5</anchor>
      <arglist>(double &amp;x, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_de</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>a880970108d3d11804ea9d1fdbeaf5714</anchor>
      <arglist>(double &amp;x, func_t &amp;func, dfunc_t &amp;df)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>bracket_step</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>ad4a358619df843712cc6d6021f82d3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>bracket_min</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>aabbfcf2a83f429c333832f268de2b95b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bracket_iters</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>ab0519dea3e1697128a3f8bc26634cb9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>root_bkt&lt; func_t &gt;</name>
    <filename>classo2scl_1_1root__bkt.html</filename>
    <base>root&lt; func_t, func_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>ae30f44e93c5cd2e426bd3f1dcfcff968</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_bkt</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>a9e073daf4968bceec603614dc1e58949</anchor>
      <arglist>(double &amp;x1, double x2, func_t &amp;func)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>a98e5a582b72a59ed578ced8d792f5ec5</anchor>
      <arglist>(double &amp;x, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_de</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>a880970108d3d11804ea9d1fdbeaf5714</anchor>
      <arglist>(double &amp;x, func_t &amp;func, func_t &amp;df)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>bracket_step</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>ad4a358619df843712cc6d6021f82d3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>bracket_min</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>aabbfcf2a83f429c333832f268de2b95b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bracket_iters</name>
      <anchorfile>classo2scl_1_1root__bkt.html</anchorfile>
      <anchor>ab0519dea3e1697128a3f8bc26634cb9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::root_bkt_cern</name>
    <filename>classo2scl_1_1root__bkt__cern.html</filename>
    <templarg></templarg>
    <base>root_bkt&lt; func_t &gt;</base>
    <member kind="function">
      <type>int</type>
      <name>set_mode</name>
      <anchorfile>classo2scl_1_1root__bkt__cern.html</anchorfile>
      <anchor>a75c421b89b81a5b605f4b9b7b72fde8b</anchor>
      <arglist>(int m)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root__bkt__cern.html</anchorfile>
      <anchor>a9e2fdbb175c8f996acee5327e9da445a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_bkt</name>
      <anchorfile>classo2scl_1_1root__bkt__cern.html</anchorfile>
      <anchor>ae21b9732bc0ec12dfda26240d914f529</anchor>
      <arglist>(double &amp;x1, double x2, func_t &amp;func)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>sign</name>
      <anchorfile>classo2scl_1_1root__bkt__cern.html</anchorfile>
      <anchor>a9137a012a7eb9e4e7d1e4b89624cdee2</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mode</name>
      <anchorfile>classo2scl_1_1root__bkt__cern.html</anchorfile>
      <anchor>a3c2595c9da4a345e653687fcb6340dfd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::root_brent_gsl</name>
    <filename>classo2scl_1_1root__brent__gsl.html</filename>
    <templarg>func_t</templarg>
    <base>root_bkt&lt; func_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>a560ac986ee15e19da05b43307cefe131</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>ab0796f86ec57e858d439df1f2d14c934</anchor>
      <arglist>(func_t &amp;f)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_bkt</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>a5a012a8f8bedffe7161faa8253cf35f1</anchor>
      <arglist>(double &amp;x1, double x2, func_t &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_root</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>a71cbed4388a57b85bfdc9e7552dccb20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_lower</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>ab3649dcb3281a1484e4c834c97bfec3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_upper</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>a7a1a024dace7ab6112a3b8ecd6811ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>abbdf30fa6defa85d54c1ce684ec9aad8</anchor>
      <arglist>(func_t &amp;ff, double lower, double upper)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>test_form</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>ade0936741434e06b7f6646192ca894bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>root</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>a38ed801bcb47adbce19f62c83aee4496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>x_lower</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>a75bff4f866ef0dba3b13639e7cb8c8a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>x_upper</name>
      <anchorfile>classo2scl_1_1root__brent__gsl.html</anchorfile>
      <anchor>a4f10882254d2fea1fe0e173d83e285a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::root_cern</name>
    <filename>classo2scl_1_1root__cern.html</filename>
    <templarg></templarg>
    <base>root&lt; func_t &gt;</base>
    <member kind="function">
      <type>int</type>
      <name>get_info</name>
      <anchorfile>classo2scl_1_1root__cern.html</anchorfile>
      <anchor>a85e1ee6af6f2827e20d12c9ee4438b55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root__cern.html</anchorfile>
      <anchor>a749da7bb7baebfc020a4b14325d4a040</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classo2scl_1_1root__cern.html</anchorfile>
      <anchor>af8b4347c5df425c18d652e609b245a4c</anchor>
      <arglist>(double &amp;ux, func_t &amp;func)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxf</name>
      <anchorfile>classo2scl_1_1root__cern.html</anchorfile>
      <anchor>aeb3b51c2c379e77071aa6cdedcc902b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>scale</name>
      <anchorfile>classo2scl_1_1root__cern.html</anchorfile>
      <anchor>ae09519a1a162fa85d0012a1efc305927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps</name>
      <anchorfile>classo2scl_1_1root__cern.html</anchorfile>
      <anchor>a5bfc41eb2a0ec88004291cf4879207c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>info</name>
      <anchorfile>classo2scl_1_1root__cern.html</anchorfile>
      <anchor>a4dcbe175858e884d77def5430d64cd7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::root_de</name>
    <filename>classo2scl_1_1root__de.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>root&lt; func_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root__de.html</anchorfile>
      <anchor>a3245891669d0e848e57a0aae0714d1b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_bkt</name>
      <anchorfile>classo2scl_1_1root__de.html</anchorfile>
      <anchor>af2bf9977b8c5e94c342c1fed2d1f5772</anchor>
      <arglist>(double &amp;x1, double x2, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classo2scl_1_1root__de.html</anchorfile>
      <anchor>ab44295af932e76ddda0bb2ddb3408c92</anchor>
      <arglist>(double &amp;x, func_t &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve_de</name>
      <anchorfile>classo2scl_1_1root__de.html</anchorfile>
      <anchor>afe4850bbcd5e2ef66cdbcb0c160b8987</anchor>
      <arglist>(double &amp;x, func_t &amp;func, dfunc_t &amp;df)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::root_stef</name>
    <filename>classo2scl_1_1root__stef.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::root_de</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>ab4c60e0439d7b32a237fa5c27c108612</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>a67a0d1a7e0d1492eaea794a07f28ed72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_de</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>adb805f9f8eec31055a5cb5bd57e0ec31</anchor>
      <arglist>(double &amp;xx, func_t &amp;fun, dfunc_t &amp;dfun)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>a6da32866379a76bee6ff62e3128eee31</anchor>
      <arglist>(func_t &amp;fun, dfunc_t &amp;dfun, double guess)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>root</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>a4970b32f8ff6e0d1dd219644ecf4639c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_rel2</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>ac163cde70c95fad4fe0d23f8ab98314c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>test_residual</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>a43b53dd4e76940fdb93a9c9a2a076566</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>f</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>a110ca344179c811bb6eb4a6d0e2776f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>df</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>a3823596167dcb8befa62419f7df8c2b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>x_1</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>a412c478e2d62d37e584bd83515498c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>a521c4da576447c500c50a24e1bd36c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>count</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>aaffb513c66108e16638f0d3538e6bd5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>func_t *</type>
      <name>fp</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>a6b78375c0b5a97579dbca4b4fe82d12f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dfunc_t *</type>
      <name>dfp</name>
      <anchorfile>classo2scl_1_1root__stef.html</anchorfile>
      <anchor>a4f00d20cd7c1fe0db42649257b575946</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::root_toms748</name>
    <filename>classo2scl_1_1root__toms748.html</filename>
    <templarg></templarg>
    <base>root_bkt&lt; func_t &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1root__toms748.html</anchorfile>
      <anchor>a0b70d58fb5dedb9b2b1d471d955496ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve_bkt</name>
      <anchorfile>classo2scl_1_1root__toms748.html</anchorfile>
      <anchor>a5c432e8d6a44cca9735023f37dbb6674</anchor>
      <arglist>(double &amp;x1, double x2, func_t &amp;func)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_hcubature::rule</name>
    <filename>classo2scl_1_1inte__hcubature_1_1rule.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>dim</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule.html</anchorfile>
      <anchor>a1fc545f9e3961ce2e54656ffe685ee04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>fdim</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule.html</anchorfile>
      <anchor>af96bd422a4009f8bbe7447151733c3f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>num_points</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule.html</anchorfile>
      <anchor>af0c97bac87693fbcd9e25e56b242b2ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>num_regions</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule.html</anchorfile>
      <anchor>aac5469852014dd1fec49e44554ad392a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ubvector</type>
      <name>pts</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule.html</anchorfile>
      <anchor>a798ef6f8e3fee44941943890f605855d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>vals_ix</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule.html</anchorfile>
      <anchor>a23fb9a43e45d3904fc8edf816b15626e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::inte_hcubature::rule75genzmalik</name>
    <filename>classo2scl_1_1inte__hcubature_1_1rule75genzmalik.html</filename>
    <base>o2scl::inte_hcubature::rule</base>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>p</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule75genzmalik.html</anchorfile>
      <anchor>a8084d70a0e1e57a0ec168d020e7240f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>weight1</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule75genzmalik.html</anchorfile>
      <anchor>a70e7fe645f8ae79b9312a9cbd4915aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>weight3</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule75genzmalik.html</anchorfile>
      <anchor>aab6e8fffaacfde67d31fc428b7859a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>weight5</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule75genzmalik.html</anchorfile>
      <anchor>a9f3e83ae6b5a586d98fcef932a7c67bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>weightE1</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule75genzmalik.html</anchorfile>
      <anchor>a6751d336967bfdc3d426838a5a1f652d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>weightE3</name>
      <anchorfile>classo2scl_1_1inte__hcubature_1_1rule75genzmalik.html</anchorfile>
      <anchor>a2f04b6386be7812995b53647bd2cc3f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::search_vec</name>
    <filename>classo2scl_1_1search__vec.html</filename>
    <templarg>vec_t</templarg>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ae1c833db16ead81973f57ed0655c5a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a56b3ff0d3847f85a19cc3ab2005a1c3c</anchor>
      <arglist>(size_t nn, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ac22b453b75edd22dee4ded37bdb4c67a</anchor>
      <arglist>(size_t nn, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5d7eb710266fdbf08cb1419c6096d4fb</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_inc</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5920bf674e9bdaa0bdc3ba5ac81db1ad</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_dec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a2f1423f24bc33b19909eb6ae0aeb63b1</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ordered_lookup</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a345fd21f26ce7c1355f0607fafac1ec3</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>cache</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a4122bd5afac355185af42305f9d3300b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const vec_t *</type>
      <name>v</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a0ce42ece3c9cdee0e5de6b80550fdf71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a1b376d4dd9175459890721dda1ebea44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>search_vec&lt; const arr_t &gt;</name>
    <filename>classo2scl_1_1search__vec.html</filename>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ae1c833db16ead81973f57ed0655c5a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a56b3ff0d3847f85a19cc3ab2005a1c3c</anchor>
      <arglist>(size_t nn, const const arr_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ac22b453b75edd22dee4ded37bdb4c67a</anchor>
      <arglist>(size_t nn, const const arr_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5d7eb710266fdbf08cb1419c6096d4fb</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_inc</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5920bf674e9bdaa0bdc3ba5ac81db1ad</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_dec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a2f1423f24bc33b19909eb6ae0aeb63b1</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ordered_lookup</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a345fd21f26ce7c1355f0607fafac1ec3</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>cache</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a4122bd5afac355185af42305f9d3300b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const const arr_t *</type>
      <name>v</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a0ce42ece3c9cdee0e5de6b80550fdf71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a1b376d4dd9175459890721dda1ebea44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>search_vec&lt; const double &gt;</name>
    <filename>classo2scl_1_1search__vec.html</filename>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ae1c833db16ead81973f57ed0655c5a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a56b3ff0d3847f85a19cc3ab2005a1c3c</anchor>
      <arglist>(size_t nn, const const double &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ac22b453b75edd22dee4ded37bdb4c67a</anchor>
      <arglist>(size_t nn, const const double &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5d7eb710266fdbf08cb1419c6096d4fb</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_inc</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5920bf674e9bdaa0bdc3ba5ac81db1ad</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_dec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a2f1423f24bc33b19909eb6ae0aeb63b1</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ordered_lookup</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a345fd21f26ce7c1355f0607fafac1ec3</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>cache</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a4122bd5afac355185af42305f9d3300b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const const double *</type>
      <name>v</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a0ce42ece3c9cdee0e5de6b80550fdf71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a1b376d4dd9175459890721dda1ebea44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>search_vec&lt; const vec_t &gt;</name>
    <filename>classo2scl_1_1search__vec.html</filename>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ae1c833db16ead81973f57ed0655c5a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a56b3ff0d3847f85a19cc3ab2005a1c3c</anchor>
      <arglist>(size_t nn, const const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ac22b453b75edd22dee4ded37bdb4c67a</anchor>
      <arglist>(size_t nn, const const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5d7eb710266fdbf08cb1419c6096d4fb</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_inc</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5920bf674e9bdaa0bdc3ba5ac81db1ad</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_dec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a2f1423f24bc33b19909eb6ae0aeb63b1</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ordered_lookup</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a345fd21f26ce7c1355f0607fafac1ec3</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>cache</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a4122bd5afac355185af42305f9d3300b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const const vec_t *</type>
      <name>v</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a0ce42ece3c9cdee0e5de6b80550fdf71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a1b376d4dd9175459890721dda1ebea44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>search_vec&lt; const vector&lt; double &gt; &gt;</name>
    <filename>classo2scl_1_1search__vec.html</filename>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ae1c833db16ead81973f57ed0655c5a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a56b3ff0d3847f85a19cc3ab2005a1c3c</anchor>
      <arglist>(size_t nn, const const vector&lt; double &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ac22b453b75edd22dee4ded37bdb4c67a</anchor>
      <arglist>(size_t nn, const const vector&lt; double &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5d7eb710266fdbf08cb1419c6096d4fb</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_inc</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5920bf674e9bdaa0bdc3ba5ac81db1ad</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_dec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a2f1423f24bc33b19909eb6ae0aeb63b1</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ordered_lookup</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a345fd21f26ce7c1355f0607fafac1ec3</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>cache</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a4122bd5afac355185af42305f9d3300b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const const vector&lt; double &gt; *</type>
      <name>v</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a0ce42ece3c9cdee0e5de6b80550fdf71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a1b376d4dd9175459890721dda1ebea44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>search_vec&lt; vector&lt; double &gt; &gt;</name>
    <filename>classo2scl_1_1search__vec.html</filename>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ae1c833db16ead81973f57ed0655c5a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>search_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a56b3ff0d3847f85a19cc3ab2005a1c3c</anchor>
      <arglist>(size_t nn, const vector&lt; double &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>ac22b453b75edd22dee4ded37bdb4c67a</anchor>
      <arglist>(size_t nn, const vector&lt; double &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5d7eb710266fdbf08cb1419c6096d4fb</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_inc</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a5920bf674e9bdaa0bdc3ba5ac81db1ad</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_dec</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a2f1423f24bc33b19909eb6ae0aeb63b1</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ordered_lookup</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a345fd21f26ce7c1355f0607fafac1ec3</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>cache</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a4122bd5afac355185af42305f9d3300b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const vector&lt; double &gt; *</type>
      <name>v</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a0ce42ece3c9cdee0e5de6b80550fdf71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>classo2scl_1_1search__vec.html</anchorfile>
      <anchor>a1b376d4dd9175459890721dda1ebea44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::search_vec_ext</name>
    <filename>classo2scl_1_1search__vec__ext.html</filename>
    <templarg>vec_t</templarg>
    <member kind="function">
      <type></type>
      <name>search_vec_ext</name>
      <anchorfile>classo2scl_1_1search__vec__ext.html</anchorfile>
      <anchor>a792c5c67d776b486c334be2063a1b762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>search_vec_ext</name>
      <anchorfile>classo2scl_1_1search__vec__ext.html</anchorfile>
      <anchor>aaebf286f7b1f00a13abab521f973f310</anchor>
      <arglist>(size_t nn, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find</name>
      <anchorfile>classo2scl_1_1search__vec__ext.html</anchorfile>
      <anchor>ac843f98668988744aa31079c0e60249e</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_inc</name>
      <anchorfile>classo2scl_1_1search__vec__ext.html</anchorfile>
      <anchor>a5dcb37b698ee6ab603b7b9f2a52bdb89</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>find_dec</name>
      <anchorfile>classo2scl_1_1search__vec__ext.html</anchorfile>
      <anchor>a0412d5e19e78e29b9f3d275019104b51</anchor>
      <arglist>(const double x0) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>cache</name>
      <anchorfile>classo2scl_1_1search__vec__ext.html</anchorfile>
      <anchor>a46fda5f3c26133d872a4e7c4abf6f7e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const vec_t *</type>
      <name>v</name>
      <anchorfile>classo2scl_1_1search__vec__ext.html</anchorfile>
      <anchor>a4e4543e8fc807eef7dd768d7a1d63013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>classo2scl_1_1search__vec__ext.html</anchorfile>
      <anchor>a7b5b0d84dc1f3a40c3318f464fcd7001</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::series_acc</name>
    <filename>classo2scl_1_1series__acc.html</filename>
    <member kind="function">
      <type></type>
      <name>series_acc</name>
      <anchorfile>classo2scl_1_1series__acc.html</anchorfile>
      <anchor>a9010e0ba320a3604c192c286c119ec46</anchor>
      <arglist>(size_t size=0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>series_accel</name>
      <anchorfile>classo2scl_1_1series__acc.html</anchorfile>
      <anchor>abc9dd87e65d993f667d095d88708af95</anchor>
      <arglist>(size_t na, vec_t &amp;array, double &amp;abserr_trunc)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>series_accel_err</name>
      <anchorfile>classo2scl_1_1series__acc.html</anchorfile>
      <anchor>a4ffabfeac5cd7b7b52e4cc560c4162bc</anchor>
      <arglist>(size_t na, vec_t &amp;array, double &amp;abserr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classo2scl_1_1series__acc.html</anchorfile>
      <anchor>a388bdd7ad5428c9dc731f47c6edc7a71</anchor>
      <arglist>(size_t new_size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>series_index</name>
      <anchorfile>classo2scl_1_1series__acc.html</anchorfile>
      <anchor>a854832d9de37e839a214f29f6535195f</anchor>
      <arglist>(size_t i, size_t j, size_t nmax)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>levin_u_step</name>
      <anchorfile>classo2scl_1_1series__acc.html</anchorfile>
      <anchor>ae5f725955439c82ce2fd13ba76ad55e4</anchor>
      <arglist>(const double term, const size_t n, const size_t nmax, double &amp;sum_accel)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>levin_utrunc_step</name>
      <anchorfile>classo2scl_1_1series__acc.html</anchorfile>
      <anchor>a865d806ec6085335fa2867074834ddcd</anchor>
      <arglist>(const double term, const size_t n, double &amp;sum_accel)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_sum_levin_u_workspace *</type>
      <name>w</name>
      <anchorfile>classo2scl_1_1series__acc.html</anchorfile>
      <anchor>ace51176249b43d83191bf77f791c451f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_sum_levin_utrunc_workspace *</type>
      <name>wt</name>
      <anchorfile>classo2scl_1_1series__acc.html</anchorfile>
      <anchor>a3b0ac6a9198d5904dd696c638ead6017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1series__acc.html</anchorfile>
      <anchor>ab50808c7ea8683c80d53ad0b4f662a3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::smooth_gsl</name>
    <filename>classo2scl_1_1smooth__gsl.html</filename>
    <member kind="function">
      <type></type>
      <name>smooth_gsl</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a94dada481c120e974e53a92232ab2944</anchor>
      <arglist>(const gsl_vector *ix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ncoeff</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>ad1a53b2492db24df9c25ccea27357ba4</anchor>
      <arglist>(int incoeffs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_order</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a210147bcaf3b58f37162724d19fdea3f</anchor>
      <arglist>(int order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pars</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>ae0aaeac526f888879cb115c58b4e53f8</anchor>
      <arglist>(int incoeffs, int order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>ac68e315dda1d15c198cd1a5cd5393b85</anchor>
      <arglist>(const gsl_vector *ix)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>smooth_data</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a4fd4d9509dbe7091cee876e45c58cd3b</anchor>
      <arglist>(const gsl_vector *y, const gsl_vector *e, gsl_vector *ys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>smooth_data</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a11fe1faf39af9498b91a268a5b74918e</anchor>
      <arglist>(const gsl_vector *y, gsl_vector *ys)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>fit</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a3e8711de4444974348ceeb76c15e60ad</anchor>
      <arglist>(const gsl_vector *y)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>fit_errors</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a4840d412a6728b293f7a73b6e18ce6f2</anchor>
      <arglist>(const gsl_vector *y, const gsl_vector *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>calc_for_x</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a77fa00154746bb5244f146f873f26908</anchor>
      <arglist>(double xi)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>init</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a900e4004191540f2a84301eaf2a4cea7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init_pointers_and_defs</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a278eea846e3edf35a64f7666396fbd08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>free</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a59bc87aa5bcbf77e35ba5520da769c4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ncoeffs</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a35c4d827854a27821bd8f3a3468f0468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>norder</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a9030f4baace3b6445d289c5c584aebf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nbreak</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>ad620dd113443f87b3e0c93e9d61545bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>x_set</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>ad773c406c0b984e8afe887ef38073e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_bspline_workspace *</type>
      <name>bw</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a5015eddaa83e417e8cd680fcd9a1a215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_vector *</type>
      <name>B</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a615b594a78264c57bc390feeac946288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_vector *</type>
      <name>c</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a7cd4f81b1e6257a184c5b4b25985506d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_multifit_linear_workspace *</type>
      <name>mw</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>aa1422b42eaba7acef660e0ac4c11ac13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_matrix *</type>
      <name>X</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>ad72d3742753ed66d41198d4151a09200</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const gsl_vector *</type>
      <name>x</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>a44256ca67eb6834fed08197b37a928bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gsl_matrix *</type>
      <name>cov</name>
      <anchorfile>classo2scl_1_1smooth__gsl.html</anchorfile>
      <anchor>ae38aa9ea8cf4c053e4afc1dec92d426d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::table</name>
    <filename>classo2scl_1_1table.html</filename>
    <templarg>vec_t</templarg>
    <class kind="class">o2scl::table::col</class>
    <member kind="function">
      <type>void</type>
      <name>insert_table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ab5523f8f5a4161e670c743185b3a15fe</anchor>
      <arglist>(table&lt; vec2_t &gt; &amp;source, std::string src_index, bool allow_extrap=true, std::string dest_index=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a7732652a256447787dc63f581e666298</anchor>
      <arglist>(size_t cmaxlines=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ad08a09227820f18d1de89974b4f3fd67</anchor>
      <arglist>(const table &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>table &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a9cfadf2073001b9bb7fc4b63ce12b2b6</anchor>
      <arglist>(const table &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aab99fa0907df3888d70e680407d31b19</anchor>
      <arglist>(std::string scol, size_t row, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aa876e8464f86133cadfb946a528580c0</anchor>
      <arglist>(size_t icol, size_t row, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ac08b39ec3ea94e1f01b670c4e2bf34c5</anchor>
      <arglist>(size_t row, size_vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a8081a55ab6e6705b5c5e74c4b3091cc3</anchor>
      <arglist>(std::string scol, size_t row) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a4232b8411b91008067c3065380217d05</anchor>
      <arglist>(size_t icol, size_t row) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_ncolumns</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>af8d79ccf8d16b32681d1cdc9c8376424</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>adef7cdd66387557abbf1b76790b81f67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_nlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ab8bf58633e3041d129fe4fad6594e73e</anchor>
      <arglist>(size_t il)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_maxlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a6858ad5d6673735673af50b975dd5c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a05d127089e176c12b221f7c95ff48adb</anchor>
      <arglist>(std::string scol, double val, resize_vec_t &amp;row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abfc37bcb6cf5b27a1acec44ba14ca20b</anchor>
      <arglist>(size_t irow, resize_vec_t &amp;row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_nlines_auto</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a47e145eb31c2616fcea3dcc38d2e9133</anchor>
      <arglist>(size_t il)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>inc_maxlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abacb499df590a3cbb4209dfbdb0b2f27</anchor>
      <arglist>(size_t llines)</arglist>
    </member>
    <member kind="function">
      <type>const vec_t &amp;</type>
      <name>get_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a35a4ecae759e1528ac0257206333464c</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>const vec_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a111c14f184315046c9d4980738ed1e6f</anchor>
      <arglist>(size_t icol) const</arglist>
    </member>
    <member kind="function">
      <type>const vec_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a1383418f9bd86fa8d9398b1fcbd7e3bc</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>new_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae17141a7ecf8da3cc9b9463fabeaadb2</anchor>
      <arglist>(std::string head)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>new_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a80e0a41d940dc95dffd6f4ec8ad27dca</anchor>
      <arglist>(std::string name, size_t sz, vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_column_name</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ac98559bad957c9551818581de316ac04</anchor>
      <arglist>(size_t icol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>swap_column_data</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae23b2d29d4fe070486bff7dd2301dbe5</anchor>
      <arglist>(std::string scol, vec_t &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rename_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a9e79baee366b56c01e0466f70142ec4b</anchor>
      <arglist>(std::string src, std::string dest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>delete_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0b9ecb32b54df26b656137cb520d519f</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_sorted_name</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>af072e65cf4ff182a079e14a8922c32f5</anchor>
      <arglist>(size_t icol) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a695655995f455e8de58a36fa9f687957</anchor>
      <arglist>(std::string scol, double val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a7e4e0dc1cb85b8597c5a2806545c7862</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a058509711ca839afd11f326c1f1b167b</anchor>
      <arglist>(std::string lname) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a5df79cd7d5dcd950ee5e1dcc2545f6e1</anchor>
      <arglist>(std::string src, std::string dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>column_to_vector</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ab54ce7288991aea146a0e6c9a520734e</anchor>
      <arglist>(std::string scol, resize_vec_t &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_to_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a70e1658de33b5b48061027be3a34841a</anchor>
      <arglist>(vec2_t &amp;v, std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_col_from_table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abc9cd49e08b689d30084d6569eb09e8c</anchor>
      <arglist>(table&lt; vec2_t &gt; &amp;source, std::string src_index, std::string src_col, std::string dest_index, std::string dest_col=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>new_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a57dc12f5122881c4bb50eb9f843b0441</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>adb621ef40fd5bc329b97753d520eb72f</anchor>
      <arglist>(size_t src, size_t dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a4a45a80ac19f22d6fc880236a97bc24f</anchor>
      <arglist>(std::string scol, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>acdaa09838e7540a565a5ced89d3b5105</anchor>
      <arglist>(size_t irow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_rows</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a14078907530c65c0690404e266d875c3</anchor>
      <arglist>(std::string func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_rows</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a5c6c6bd371fef7637e1cab4ea14c7846</anchor>
      <arglist>(std::string func, table&lt; vec2_t &gt; &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_rows</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abf0803e9ffe86463d7f8d7f5e0975659</anchor>
      <arglist>(size_t row_start, size_t row_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_rows</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abc1172c254663b15f79bf65a4ca60364</anchor>
      <arglist>(vec_size_t &amp;row_list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_idadj_rows</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a99b368268b325120fe494ddfcedc69db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>line_of_names</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a70152889befc6cb60aef4ab610316691</anchor>
      <arglist>(std::string newheads)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>line_of_data</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aeb420874bdb8514af80e8f11a0903627</anchor>
      <arglist>(size_t nv, const vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>line_of_data</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ab0862e1da49032b7a49ffcf5790e2826</anchor>
      <arglist>(const vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ordered_lookup</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a6aea46bb37f8212ed0e6ff3369a618c8</anchor>
      <arglist>(std::string scol, double val) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0d75f8e91b22d99931510e5e901243b0</anchor>
      <arglist>(std::string scol, double val) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lookup_val</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aeb4021ecf42f871ae4564778b722d318</anchor>
      <arglist>(std::string scol, double val, std::string scol2) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ad7981a673efe8800b55642991207686e</anchor>
      <arglist>(int icol, double val) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>mlookup</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0a71907bd6f98b731192196e8dada9fc</anchor>
      <arglist>(std::string scol, double val, std::vector&lt; size_t &gt; &amp;results, double threshold=0.0) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interp_type</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a134d897d52afa692272ac6fc1c49d047</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_interp_type</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a08b027fe700a8a74b1f66df4d7687cd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a4780a1c544e00cd70c512696f8c1e013</anchor>
      <arglist>(std::string sx, double x0, std::string sy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0b627d9ed71d52da6cd96b221b8ce573</anchor>
      <arglist>(std::string sx, double x0, std::string sy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abf41d2857960b905e6fe619b7b6e8c9e</anchor>
      <arglist>(size_t ix, double x0, size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a972ede41aeecfeaddf1a7c668e0bea63</anchor>
      <arglist>(size_t ix, double x0, size_t iy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ab3e56492fc65f42ee740ccdfb933f0c6</anchor>
      <arglist>(std::string x, std::string y, std::string yp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aa7e0ede4c1e3998db142f1fea0939fe5</anchor>
      <arglist>(std::string sx, double x0, std::string sy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a4ff94358e737f82b5c141c7798bdc853</anchor>
      <arglist>(std::string sx, double x0, std::string sy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aff93e79f00cf3222f3515c9587e6d7fa</anchor>
      <arglist>(size_t ix, double x0, size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>adcd37bfa7e3d30a2e31e407d5d4850d8</anchor>
      <arglist>(size_t ix, double x0, size_t iy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a1a0460f357a1a13cf34f3374584931a1</anchor>
      <arglist>(std::string x, std::string y, std::string yp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a9c731930eba430190e1a871fcb397e93</anchor>
      <arglist>(std::string sx, double x0, std::string sy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ac34ceb50a194a4695c4504a441f5672e</anchor>
      <arglist>(std::string sx, double x0, std::string sy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae34965426316bc5bd86a40e5cb7ddbef</anchor>
      <arglist>(size_t ix, double x0, size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a30713084afdd2f74480d269d5a87f7f0</anchor>
      <arglist>(size_t ix, double x0, size_t iy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a3462b169763089c3b601b3c92871d5f9</anchor>
      <arglist>(std::string sx, double x1, double x2, std::string sy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a98195ca553f1ef07532e8a6ab4ff768e</anchor>
      <arglist>(std::string sx, double x1, double x2, std::string sy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0313a49a5996b9096741b417f2e6ebf5</anchor>
      <arglist>(size_t ix, double x1, double x2, size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ad5f807917a773db079407b97f8337754</anchor>
      <arglist>(size_t ix, double x1, double x2, size_t iy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a5dd75c0b21f506af1b03d23842706476</anchor>
      <arglist>(std::string x, std::string y, std::string ynew)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>max</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ac6de756814afdd60a616486399dc6286</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aaf19d907a4fbaad09dd3172753a38146</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtable</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a8300f9c55f6f442ffcc62221978cd649</anchor>
      <arglist>(std::string list, size_t top, size_t bottom, table&lt; vec_t &gt; &amp;tnew) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zero_table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a1199951438c082239ed747ebb5f68233</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a2a792369b67c1699f92b9040918afbf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a77f84c89503b7af17115575013278fcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_data</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a997c4978e43c445563fdca06d4f9df67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_constants</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a74e9b933a6a88923603e90770ca47039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a23873d72c69aabf1cfc48d2da6d248e2</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae3573f52b268390c2f2f9cbfe92726af</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>summary</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a3b4a64d5ebcdb67bf82bb74c7667204a</anchor>
      <arglist>(std::ostream *out, size_t ncol=79) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>add_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aa09b2e043ee26a3b60c3775229e63a61</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a2fe033f509b01f352fe3ab6c4b489a5d</anchor>
      <arglist>(std::string name, double val, bool err_on_notfound=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aa690cf9b4f85de29e2e93bd991695549</anchor>
      <arglist>(std::string name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>get_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a47f0a319032818b0b0dd436e6a6d2dc5</anchor>
      <arglist>(std::string name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>get_nconsts</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a6f445f10547ca5c350cff5308b61280a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>get_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aeccc201eba789b602ba258f8c2a34d1d</anchor>
      <arglist>(size_t ix, std::string &amp;name, double &amp;val) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>af7a06a9440cc67ee097b79275f7a5f58</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>read_generic</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abb99887f4c919fef1f2d59629f6ef023</anchor>
      <arglist>(std::istream &amp;fin, int verbose=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check_synchro</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>add7ac0704e9b141d48f1c883a870fdde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a025f085a139d370dc01c03afd53943b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>functions_columns</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a73954644622d6ec9c9ae737de51a7e0c</anchor>
      <arglist>(std::string list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>function_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae9b2d201018ffa1399fce13318647de3</anchor>
      <arglist>(std::string function, std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>function_vector</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a3741cfd1c6fceb324ab0dedc36085661</anchor>
      <arglist>(std::string function, resize_vec_t &amp;vec, bool throw_on_err=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>row_function</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ace5d3beb592a840bfff8334c70b95760</anchor>
      <arglist>(std::string function, size_t row) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>function_find_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>adb0ef12c2b304c250096c114c09314a5</anchor>
      <arglist>(std::string function) const</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, col, std::greater&lt; std::string &gt; &gt;::iterator</type>
      <name>aiter</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a4eff47575fd4bd1f538eab03745e085d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, col, std::greater&lt; std::string &gt; &gt;::const_iterator</type>
      <name>aciter</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abe08f0599b7de02b32f6cdc81e61d9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; aiter &gt;::iterator</type>
      <name>aviter</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a206c5d4bad2ca566f2444ff215d71868</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset_list</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a9e23cfe0c48b05ba9fac5cd73f9bda87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>make_fp_varname</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a8df451766effe1802626878766cdb1e0</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>make_unique_name</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0c5946ba7a199a64c8a769feee296914</anchor>
      <arglist>(std::string &amp;colx, std::vector&lt; std::string &gt; &amp;cnames)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>aiter</type>
      <name>get_iterator</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a694294f18ddcca4c6992ab3439868b28</anchor>
      <arglist>(std::string lname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>col *</type>
      <name>get_col_struct</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aa0840a08e063397cfea5cee51649d67f</anchor>
      <arglist>(std::string lname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>aiter</type>
      <name>begin</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a1a52eee85a4a5be1a58126cf46c251a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>aiter</type>
      <name>end</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>adbcd490fad904b6014e8459b9c2a5960</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>constants</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a83c245d3721ef4ddebdadcc3668df970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>empty_col</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0d95f36ed76bd859910517bf94f92c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>maxlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a17244f576d4ca82d81925fb770d3a86a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a959e96464f857a255289034214a8965b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, col, std::greater&lt; std::string &gt; &gt;</type>
      <name>atree</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae6e6fb72280e4adb770e055a344c3873</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; aiter &gt;</type>
      <name>alist</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a770ce0511226c3696e955fed9bf37ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>intp_set</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae4e6154813861c353472f60af634c45a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>itype</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ad64d2bc3f5b6df03b386581ca8da9262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interp_vec&lt; vec_t &gt; *</type>
      <name>si</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ad18e61735c6633069f10615d7e602891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>intp_colx</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aeed00ec83448f79a56a7d7103c4cf94b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>intp_coly</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a3b89b473c3d32c96442e67dbeff3316a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a7732652a256447787dc63f581e666298</anchor>
      <arglist>(size_t cmaxlines=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ad08a09227820f18d1de89974b4f3fd67</anchor>
      <arglist>(const table &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>table &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a9cfadf2073001b9bb7fc4b63ce12b2b6</anchor>
      <arglist>(const table &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aab99fa0907df3888d70e680407d31b19</anchor>
      <arglist>(std::string scol, size_t row, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aa876e8464f86133cadfb946a528580c0</anchor>
      <arglist>(size_t icol, size_t row, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ac08b39ec3ea94e1f01b670c4e2bf34c5</anchor>
      <arglist>(size_t row, size_vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a8081a55ab6e6705b5c5e74c4b3091cc3</anchor>
      <arglist>(std::string scol, size_t row) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a4232b8411b91008067c3065380217d05</anchor>
      <arglist>(size_t icol, size_t row) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_ncolumns</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>af8d79ccf8d16b32681d1cdc9c8376424</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>adef7cdd66387557abbf1b76790b81f67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_nlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ab8bf58633e3041d129fe4fad6594e73e</anchor>
      <arglist>(size_t il)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_maxlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a6858ad5d6673735673af50b975dd5c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a05d127089e176c12b221f7c95ff48adb</anchor>
      <arglist>(std::string scol, double val, resize_vec_t &amp;row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abfc37bcb6cf5b27a1acec44ba14ca20b</anchor>
      <arglist>(size_t irow, resize_vec_t &amp;row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_nlines_auto</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a47e145eb31c2616fcea3dcc38d2e9133</anchor>
      <arglist>(size_t il)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>inc_maxlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abacb499df590a3cbb4209dfbdb0b2f27</anchor>
      <arglist>(size_t llines)</arglist>
    </member>
    <member kind="function">
      <type>const vec_t &amp;</type>
      <name>get_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a35a4ecae759e1528ac0257206333464c</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>const vec_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a111c14f184315046c9d4980738ed1e6f</anchor>
      <arglist>(size_t icol) const</arglist>
    </member>
    <member kind="function">
      <type>const vec_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a1383418f9bd86fa8d9398b1fcbd7e3bc</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>new_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae17141a7ecf8da3cc9b9463fabeaadb2</anchor>
      <arglist>(std::string head)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>new_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a80e0a41d940dc95dffd6f4ec8ad27dca</anchor>
      <arglist>(std::string name, size_t sz, vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_column_name</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ac98559bad957c9551818581de316ac04</anchor>
      <arglist>(size_t icol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>swap_column_data</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae23b2d29d4fe070486bff7dd2301dbe5</anchor>
      <arglist>(std::string scol, vec_t &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rename_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a9e79baee366b56c01e0466f70142ec4b</anchor>
      <arglist>(std::string src, std::string dest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>delete_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0b9ecb32b54df26b656137cb520d519f</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_sorted_name</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>af072e65cf4ff182a079e14a8922c32f5</anchor>
      <arglist>(size_t icol) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a695655995f455e8de58a36fa9f687957</anchor>
      <arglist>(std::string scol, double val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a7e4e0dc1cb85b8597c5a2806545c7862</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a058509711ca839afd11f326c1f1b167b</anchor>
      <arglist>(std::string lname) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a5df79cd7d5dcd950ee5e1dcc2545f6e1</anchor>
      <arglist>(std::string src, std::string dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>column_to_vector</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ab54ce7288991aea146a0e6c9a520734e</anchor>
      <arglist>(std::string scol, resize_vec_t &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_to_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a70e1658de33b5b48061027be3a34841a</anchor>
      <arglist>(vec2_t &amp;v, std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_col_from_table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abc9cd49e08b689d30084d6569eb09e8c</anchor>
      <arglist>(table&lt; vec2_t &gt; &amp;source, std::string src_index, std::string src_col, std::string dest_index, std::string dest_col=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>new_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a57dc12f5122881c4bb50eb9f843b0441</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>adb621ef40fd5bc329b97753d520eb72f</anchor>
      <arglist>(size_t src, size_t dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a4a45a80ac19f22d6fc880236a97bc24f</anchor>
      <arglist>(std::string scol, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>acdaa09838e7540a565a5ced89d3b5105</anchor>
      <arglist>(size_t irow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_rows</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a14078907530c65c0690404e266d875c3</anchor>
      <arglist>(std::string func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_rows</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a5c6c6bd371fef7637e1cab4ea14c7846</anchor>
      <arglist>(std::string func, table&lt; vec2_t &gt; &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_rows</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abf0803e9ffe86463d7f8d7f5e0975659</anchor>
      <arglist>(size_t row_start, size_t row_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_rows</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abc1172c254663b15f79bf65a4ca60364</anchor>
      <arglist>(vec_size_t &amp;row_list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_idadj_rows</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a99b368268b325120fe494ddfcedc69db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>line_of_names</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a70152889befc6cb60aef4ab610316691</anchor>
      <arglist>(std::string newheads)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>line_of_data</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aeb420874bdb8514af80e8f11a0903627</anchor>
      <arglist>(size_t nv, const vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>line_of_data</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ab0862e1da49032b7a49ffcf5790e2826</anchor>
      <arglist>(const vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ordered_lookup</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a6aea46bb37f8212ed0e6ff3369a618c8</anchor>
      <arglist>(std::string scol, double val) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0d75f8e91b22d99931510e5e901243b0</anchor>
      <arglist>(std::string scol, double val) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lookup_val</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aeb4021ecf42f871ae4564778b722d318</anchor>
      <arglist>(std::string scol, double val, std::string scol2) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ad7981a673efe8800b55642991207686e</anchor>
      <arglist>(int icol, double val) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>mlookup</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0a71907bd6f98b731192196e8dada9fc</anchor>
      <arglist>(std::string scol, double val, std::vector&lt; size_t &gt; &amp;results, double threshold=0.0) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interp_type</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a134d897d52afa692272ac6fc1c49d047</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_interp_type</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a08b027fe700a8a74b1f66df4d7687cd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a4780a1c544e00cd70c512696f8c1e013</anchor>
      <arglist>(std::string sx, double x0, std::string sy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0b627d9ed71d52da6cd96b221b8ce573</anchor>
      <arglist>(std::string sx, double x0, std::string sy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abf41d2857960b905e6fe619b7b6e8c9e</anchor>
      <arglist>(size_t ix, double x0, size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a972ede41aeecfeaddf1a7c668e0bea63</anchor>
      <arglist>(size_t ix, double x0, size_t iy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ab3e56492fc65f42ee740ccdfb933f0c6</anchor>
      <arglist>(std::string x, std::string y, std::string yp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aa7e0ede4c1e3998db142f1fea0939fe5</anchor>
      <arglist>(std::string sx, double x0, std::string sy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a4ff94358e737f82b5c141c7798bdc853</anchor>
      <arglist>(std::string sx, double x0, std::string sy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aff93e79f00cf3222f3515c9587e6d7fa</anchor>
      <arglist>(size_t ix, double x0, size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>adcd37bfa7e3d30a2e31e407d5d4850d8</anchor>
      <arglist>(size_t ix, double x0, size_t iy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a1a0460f357a1a13cf34f3374584931a1</anchor>
      <arglist>(std::string x, std::string y, std::string yp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a9c731930eba430190e1a871fcb397e93</anchor>
      <arglist>(std::string sx, double x0, std::string sy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ac34ceb50a194a4695c4504a441f5672e</anchor>
      <arglist>(std::string sx, double x0, std::string sy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae34965426316bc5bd86a40e5cb7ddbef</anchor>
      <arglist>(size_t ix, double x0, size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv2_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a30713084afdd2f74480d269d5a87f7f0</anchor>
      <arglist>(size_t ix, double x0, size_t iy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a3462b169763089c3b601b3c92871d5f9</anchor>
      <arglist>(std::string sx, double x1, double x2, std::string sy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a98195ca553f1ef07532e8a6ab4ff768e</anchor>
      <arglist>(std::string sx, double x1, double x2, std::string sy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a0313a49a5996b9096741b417f2e6ebf5</anchor>
      <arglist>(size_t ix, double x1, double x2, size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_const</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ad5f807917a773db079407b97f8337754</anchor>
      <arglist>(size_t ix, double x1, double x2, size_t iy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integ</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a5dd75c0b21f506af1b03d23842706476</anchor>
      <arglist>(std::string x, std::string y, std::string ynew)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>max</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ac6de756814afdd60a616486399dc6286</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aaf19d907a4fbaad09dd3172753a38146</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtable</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a8300f9c55f6f442ffcc62221978cd649</anchor>
      <arglist>(std::string list, size_t top, size_t bottom, table&lt; vec_t &gt; &amp;tnew) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zero_table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a1199951438c082239ed747ebb5f68233</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a2a792369b67c1699f92b9040918afbf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a77f84c89503b7af17115575013278fcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_data</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a997c4978e43c445563fdca06d4f9df67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_constants</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a74e9b933a6a88923603e90770ca47039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_table</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a23873d72c69aabf1cfc48d2da6d248e2</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae3573f52b268390c2f2f9cbfe92726af</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>summary</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a3b4a64d5ebcdb67bf82bb74c7667204a</anchor>
      <arglist>(std::ostream *out, size_t ncol=79) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>add_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aa09b2e043ee26a3b60c3775229e63a61</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a2fe033f509b01f352fe3ab6c4b489a5d</anchor>
      <arglist>(std::string name, double val, bool err_on_notfound=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aa690cf9b4f85de29e2e93bd991695549</anchor>
      <arglist>(std::string name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>get_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a47f0a319032818b0b0dd436e6a6d2dc5</anchor>
      <arglist>(std::string name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>get_nconsts</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a6f445f10547ca5c350cff5308b61280a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>get_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aeccc201eba789b602ba258f8c2a34d1d</anchor>
      <arglist>(size_t ix, std::string &amp;name, double &amp;val) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_constant</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>af7a06a9440cc67ee097b79275f7a5f58</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>read_generic</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abb99887f4c919fef1f2d59629f6ef023</anchor>
      <arglist>(std::istream &amp;fin, int verbose=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check_synchro</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>add7ac0704e9b141d48f1c883a870fdde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a025f085a139d370dc01c03afd53943b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>functions_columns</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a73954644622d6ec9c9ae737de51a7e0c</anchor>
      <arglist>(std::string list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>function_column</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae9b2d201018ffa1399fce13318647de3</anchor>
      <arglist>(std::string function, std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>function_vector</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a3741cfd1c6fceb324ab0dedc36085661</anchor>
      <arglist>(std::string function, resize_vec_t &amp;vec, bool throw_on_err=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>row_function</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ace5d3beb592a840bfff8334c70b95760</anchor>
      <arglist>(std::string function, size_t row) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>function_find_row</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>adb0ef12c2b304c250096c114c09314a5</anchor>
      <arglist>(std::string function) const</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, col, std::greater&lt; std::string &gt; &gt;::iterator</type>
      <name>aiter</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a4eff47575fd4bd1f538eab03745e085d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, col, std::greater&lt; std::string &gt; &gt;::const_iterator</type>
      <name>aciter</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>abe08f0599b7de02b32f6cdc81e61d9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; aiter &gt;::iterator</type>
      <name>aviter</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a206c5d4bad2ca566f2444ff215d71868</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>maxlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a17244f576d4ca82d81925fb770d3a86a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nlines</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a959e96464f857a255289034214a8965b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, col, std::greater&lt; std::string &gt; &gt;</type>
      <name>atree</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae6e6fb72280e4adb770e055a344c3873</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; aiter &gt;</type>
      <name>alist</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a770ce0511226c3696e955fed9bf37ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>aiter</type>
      <name>get_iterator</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a694294f18ddcca4c6992ab3439868b28</anchor>
      <arglist>(std::string lname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>col *</type>
      <name>get_col_struct</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aa0840a08e063397cfea5cee51649d67f</anchor>
      <arglist>(std::string lname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>aiter</type>
      <name>begin</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a1a52eee85a4a5be1a58126cf46c251a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>aiter</type>
      <name>end</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>adbcd490fad904b6014e8459b9c2a5960</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>intp_set</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ae4e6154813861c353472f60af634c45a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>itype</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ad64d2bc3f5b6df03b386581ca8da9262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interp_vec&lt; vec_t &gt; *</type>
      <name>si</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>ad18e61735c6633069f10615d7e602891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>intp_colx</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>aeed00ec83448f79a56a7d7103c4cf94b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>intp_coly</name>
      <anchorfile>classo2scl_1_1table.html</anchorfile>
      <anchor>a3b89b473c3d32c96442e67dbeff3316a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::table3d</name>
    <filename>classo2scl_1_1table3d.html</filename>
    <member kind="function">
      <type></type>
      <name>table3d</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a599b1de095e73779d7ac04ba97f47098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>table3d</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a1269e0ee30db1f9a054e42a37e79dc86</anchor>
      <arglist>(o2scl::table_units&lt;&gt; &amp;t, std::string colx, std::string coly)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_gen3_list</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a681f51bf49ff6fd69047189db4269d75</anchor>
      <arglist>(std::istream &amp;fin, int verbose=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_size_set</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ac4f10daad27728e1696dd1111ca36619</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_xy_set</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab38662ceeb0b0f71b6af4ac68fab2914</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>afb6d465bc27d6a59baccee3e3ac33fb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_xy</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a67ae147451089e53f3558a7f61551f5d</anchor>
      <arglist>(std::string x_name, size_t nx, const vec_t &amp;x, std::string y_name, size_t ny, const vec2_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_xy</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a43e68896901184c84a7b0bff289f4445</anchor>
      <arglist>(std::string x_name, uniform_grid&lt; double &gt; gx, std::string y_name, uniform_grid&lt; double &gt; gy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad5e436e5b3bfd5ca40f15115f83d5016</anchor>
      <arglist>(size_t nx, size_t ny)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a7bcb02592fe0b38da3a592ffed91e797</anchor>
      <arglist>(size_t ix, size_t iy, std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a0f6310be39d3d8add04dc076b45be7e7</anchor>
      <arglist>(size_t ix, size_t iy, size_t z, double val)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a13015c23627f7ceba8a3572b8b704f7a</anchor>
      <arglist>(size_t ix, size_t iy, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a3b69fd2aa18eba8c090e1c115abd689e</anchor>
      <arglist>(size_t ix, size_t iy, std::string name) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a8ef9c6a237b642bd8dc723f6d2d09685</anchor>
      <arglist>(size_t ix, size_t iy, size_t z)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>acd7d025e040bafd58ae2104334065c1b</anchor>
      <arglist>(size_t ix, size_t iy, size_t z) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab7396f08d9d3d1d3d4e34ad759ff2ab3</anchor>
      <arglist>(double x, double y, std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a98a5cddf150d88709bfca5e04875a693</anchor>
      <arglist>(double x, double y, size_t z, double val)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab345cd80e8fe3811cc795d4fdfcd90cd</anchor>
      <arglist>(double x, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ac45ff36f2ca64c8043758ad772bbdbfb</anchor>
      <arglist>(double x, double y, std::string name) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aac7708d4007c48f5d6866fad28d0c554</anchor>
      <arglist>(double x, double y, size_t z)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a46f30ac76f83b96d24aaa1104de658e8</anchor>
      <arglist>(double x, double y, size_t z) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_slices</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a65b7a225912d587e624c14e418c86d28</anchor>
      <arglist>(double x, double y, size_t nv, vec_t &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_slices</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a09433a03cfde5eedc412b0dbc709c4f6</anchor>
      <arglist>(double x, double y, size_t nv, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af66a71fcf77654db8cef7bae76dc4d95</anchor>
      <arglist>(double &amp;x, double &amp;y, std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a9d82efc1368548c660759a2c0f28f726</anchor>
      <arglist>(double &amp;x, double &amp;y, size_t z, double val)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aafd707bcb804896ae96d0dcec463bc62</anchor>
      <arglist>(double &amp;x, double &amp;y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a3b6921c7154e78dd004b1be8420e8efd</anchor>
      <arglist>(double &amp;x, double &amp;y, std::string name) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a677267c2d13cf6d1d0e78dd792c9ccb5</anchor>
      <arglist>(double &amp;x, double &amp;y, size_t z)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5943aba47dde4829a258782cbdbacd75</anchor>
      <arglist>(double &amp;x, double &amp;y, size_t z) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_slice_from_table</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>afea8ebaae0388ec2a6bdf1a4e711023d</anchor>
      <arglist>(table3d &amp;source, std::string slice, std::string dest_slice=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_slices_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a6abb0f83ad2a84264ce866a3a11e59bc</anchor>
      <arglist>(double &amp;x, double &amp;y, size_t nv, vec_t &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_slices_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a837865e141631f97e92df8e5c987144e</anchor>
      <arglist>(double &amp;x, double &amp;y, size_t nv, vec_t &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a80c5f987ec6c0795d6a714b0a1f98e92</anchor>
      <arglist>(size_t ix, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a23be81d923fb08095f6a965cd667316e</anchor>
      <arglist>(size_t iy, double val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_grid_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a50515852ae3d9010d8d23179e55a7fe8</anchor>
      <arglist>(size_t ix)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_grid_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad9bee4a03736a4a4133477761896d8b1</anchor>
      <arglist>(size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_x_name</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af651a9850724db2c52da8b624cde87a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_y_name</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a6ca69c75c7998f2d6b977a3ea4d9b3a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x_name</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>adb2426b6f6d382af30456e369fd9eb60</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_y_name</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a436ad6ef4407ed0f4dc1496c3b2d8cd2</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_x_data</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a9f7fea44bc82df73a5100b72d77e2219</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_y_data</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a13101d209f28ec59d2405db024b5e63a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_size</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a856055a5019344954660b7e9ec32fd11</anchor>
      <arglist>(size_t &amp;nx, size_t &amp;ny) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nx</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5ccd2ca50cba141633ba2fcb0ff27105</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_ny</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a7420bcb1966c8166a066fdcc170eb9df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nslices</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a95f56a20d8d27beb552623aec33019ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>line_of_names</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>afcc0faee6669ff79d3e28e5d7527936a</anchor>
      <arglist>(std::string names)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_slice_name</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a9bed020a4b49f98c588d0c4f82175df1</anchor>
      <arglist>(size_t z) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>new_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>adfef6516557374f88020cac4e65d53af</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_slice_all</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a0c7be7dfe47802f83de2ae84ceadbe80</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a0402a5d180142928745f3cca590c0651</anchor>
      <arglist>(std::string name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ac3f4a403bf6367bccde6339a9225f5ce</anchor>
      <arglist>(std::string name, size_t &amp;ix) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rename_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a444fff8bcb6b09223334ad2b62062f29</anchor>
      <arglist>(std::string olds, std::string news)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a641a1b017e9f48cb807ca912aecb3ee3</anchor>
      <arglist>(std::string src, std::string dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>adb1254ae79be34d91c0dabfb125c7f5d</anchor>
      <arglist>(std::string scol, double val)</arglist>
    </member>
    <member kind="function">
      <type>const ubmatrix &amp;</type>
      <name>get_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ac0ccc464e98eff4be1cc3847c684cfd9</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>const ubmatrix &amp;</type>
      <name>get_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a97317fbd200f6fba4d7c933d106e681e</anchor>
      <arglist>(size_t iz) const</arglist>
    </member>
    <member kind="function">
      <type>ubmatrix &amp;</type>
      <name>get_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af8467933aae640945bc456d08e49a114</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>ubmatrix &amp;</type>
      <name>get_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a7041ce72f467e1a9852776b8572ad8cc</anchor>
      <arglist>(size_t iz)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ubmatrix &gt; &amp;</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aaa878a8650a227c0fdd349b15f8d27d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_to_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>abfa7350e6304e499b609e5ff646ab511</anchor>
      <arglist>(mat_t &amp;m, std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookup_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab2d5f0d7f0b1d38e301c6ffbdc2ed21d</anchor>
      <arglist>(double val, size_t &amp;ix) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookup_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab45c1e0a8670984554c892c7d3d0277c</anchor>
      <arglist>(double val, size_t &amp;iy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookup</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a8382ffea2eee5d610e44a2e459dba190</anchor>
      <arglist>(double val, std::string slice, size_t &amp;ix, size_t &amp;iy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interp_type</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a6894e24af7cd37c693bdd550ac45cdc0</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_interp_type</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a0110dbc28db07fb40db9e905dfc5b9bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a78b3f5bbecabbfd6533e2b196fff1dc4</anchor>
      <arglist>(double x, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a6520a9ce90ebdfc0240de9fa643bf293</anchor>
      <arglist>(double x, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a165586fbe8cb512ddc284f0f3345e967</anchor>
      <arglist>(double x, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_xy</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab4f6f30c039985eae30c42d382c9fd2f</anchor>
      <arglist>(double x, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab6be315ad7eadf7debacc34c166e0637</anchor>
      <arglist>(double x1, double x2, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5779f59fbc892c658679ec87f3e04d0d</anchor>
      <arglist>(double x, double y1, double y2, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interp_slices</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ae3adec28f2be6eaaef1b7debe9718333</anchor>
      <arglist>(double x, double y, size_t nv, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extract_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aa7c625d04a15f2e66c80a17b0fa37a64</anchor>
      <arglist>(double x, table&lt;&gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extract_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad6094dfd2636b4f18ef0eb507a2207bd</anchor>
      <arglist>(double y, table&lt;&gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zero_table</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ae141be7a89be68462a8531d023bf9fe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab63580ce7bb52d7208c3ee07ca23311d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_data</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a0b1401ce611c8ffd26c89b2f2a504440</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>summary</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af3ce1e9eb0d4925591053bc75cd15c6a</anchor>
      <arglist>(std::ostream *out, int ncol=79) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slice_contours</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af5210640580f7c12bd9d75ad51b37e70</anchor>
      <arglist>(std::string name, size_t nlev, vec_t &amp;levs, std::vector&lt; contour_line &gt; &amp;clines)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>add_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a92f4fb17a87fbcde4d1931b6ca4d64c7</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a1612b2c6b9aa966b2d73ce7603e0cdee</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>abf119133e29c8de41281908d25ae24b6</anchor>
      <arglist>(std::string name, double val, bool err_on_notfound=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5d46d7fbd75e707abcb338e3963bd706</anchor>
      <arglist>(std::string name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>get_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a199d2b41df0778fd4ddd5030388f8ef9</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>get_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad1b21cf18c0013d4a9a1f1d07c3741de</anchor>
      <arglist>(size_t ix, std::string &amp;name, double &amp;val) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>get_nconsts</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab61279ac9903e9d515f9d744b45daedd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>function_matrix</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a44b12dedc1b2a482a439abdf067a30a5</anchor>
      <arglist>(std::string function, resize_mat_t &amp;mat, bool throw_on_err=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>function_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad42be077d23618119210e82e6b2f0502</anchor>
      <arglist>(std::string function, std::string col)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>map_iter</type>
      <name>begin</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad67b806f27a6cfa51d752ebcfda1bace</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>map_iter</type>
      <name>end</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ac7b9b285a8f1857775874d5aee2b4bda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>map_const_iter</type>
      <name>const_begin</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a6765e2534b30d37356f0e8a31ca8eea1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>map_const_iter</type>
      <name>const_end</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af28269532a8a6f3ec5963319936b49b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interp_vec&lt; ubvector &gt; **</type>
      <name>si</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>adb4b340d798f1ef97c404308d9937794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix_column **</type>
      <name>aci</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5b2a11003c774c07a3f9fa129ec34b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>constants</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5d8c2fd523eb616cd2458b36ad13a5a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numx</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a92ceaa09411e401d3ec6009f7f862d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numy</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aaa5f427de6a7c80cf77a7ef3c3aa87d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, size_t, std::greater&lt; std::string &gt; &gt;</type>
      <name>tree</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aba0b71b842d4edc9d2fd9c0ffe33270f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>xname</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a009a6fb4a970a03efb155f07424cbd73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>yname</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a2376b1b16430bedbb6617d11b482e1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ubmatrix &gt;</type>
      <name>list</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad07b2638dd965477e2400e0ce9d712c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>xval</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a90eccdeaacdf8e9e288f68248ddfaa8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>yval</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a64e86407a559b6bff6efb3308d09c76a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>xy_set</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aafa24bac8e40eb37cfd21a2fcbce81ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>size_set</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ae6e25ae85c5415f432d2f0ad1be0c69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a4ecfd885480a029401d17aacd0e1b511</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_xy</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a67ae147451089e53f3558a7f61551f5d</anchor>
      <arglist>(std::string x_name, size_t nx, const vec_t &amp;x, std::string y_name, size_t ny, const vec2_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_xy</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a43e68896901184c84a7b0bff289f4445</anchor>
      <arglist>(std::string x_name, uniform_grid&lt; double &gt; gx, std::string y_name, uniform_grid&lt; double &gt; gy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad5e436e5b3bfd5ca40f15115f83d5016</anchor>
      <arglist>(size_t nx, size_t ny)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a7bcb02592fe0b38da3a592ffed91e797</anchor>
      <arglist>(size_t ix, size_t iy, std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a0f6310be39d3d8add04dc076b45be7e7</anchor>
      <arglist>(size_t ix, size_t iy, size_t z, double val)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a13015c23627f7ceba8a3572b8b704f7a</anchor>
      <arglist>(size_t ix, size_t iy, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a3b69fd2aa18eba8c090e1c115abd689e</anchor>
      <arglist>(size_t ix, size_t iy, std::string name) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a8ef9c6a237b642bd8dc723f6d2d09685</anchor>
      <arglist>(size_t ix, size_t iy, size_t z)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>acd7d025e040bafd58ae2104334065c1b</anchor>
      <arglist>(size_t ix, size_t iy, size_t z) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab7396f08d9d3d1d3d4e34ad759ff2ab3</anchor>
      <arglist>(double x, double y, std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a98a5cddf150d88709bfca5e04875a693</anchor>
      <arglist>(double x, double y, size_t z, double val)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab345cd80e8fe3811cc795d4fdfcd90cd</anchor>
      <arglist>(double x, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ac45ff36f2ca64c8043758ad772bbdbfb</anchor>
      <arglist>(double x, double y, std::string name) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aac7708d4007c48f5d6866fad28d0c554</anchor>
      <arglist>(double x, double y, size_t z)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a46f30ac76f83b96d24aaa1104de658e8</anchor>
      <arglist>(double x, double y, size_t z) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_slices</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a65b7a225912d587e624c14e418c86d28</anchor>
      <arglist>(double x, double y, size_t nv, vec_t &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_slices</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a09433a03cfde5eedc412b0dbc709c4f6</anchor>
      <arglist>(double x, double y, size_t nv, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af66a71fcf77654db8cef7bae76dc4d95</anchor>
      <arglist>(double &amp;x, double &amp;y, std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a9d82efc1368548c660759a2c0f28f726</anchor>
      <arglist>(double &amp;x, double &amp;y, size_t z, double val)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aafd707bcb804896ae96d0dcec463bc62</anchor>
      <arglist>(double &amp;x, double &amp;y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a3b6921c7154e78dd004b1be8420e8efd</anchor>
      <arglist>(double &amp;x, double &amp;y, std::string name) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a677267c2d13cf6d1d0e78dd792c9ccb5</anchor>
      <arglist>(double &amp;x, double &amp;y, size_t z)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get_val_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5943aba47dde4829a258782cbdbacd75</anchor>
      <arglist>(double &amp;x, double &amp;y, size_t z) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_slice_from_table</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>afea8ebaae0388ec2a6bdf1a4e711023d</anchor>
      <arglist>(table3d &amp;source, std::string slice, std::string dest_slice=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_slices_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a6abb0f83ad2a84264ce866a3a11e59bc</anchor>
      <arglist>(double &amp;x, double &amp;y, size_t nv, vec_t &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_slices_ret</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a837865e141631f97e92df8e5c987144e</anchor>
      <arglist>(double &amp;x, double &amp;y, size_t nv, vec_t &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a80c5f987ec6c0795d6a714b0a1f98e92</anchor>
      <arglist>(size_t ix, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a23be81d923fb08095f6a965cd667316e</anchor>
      <arglist>(size_t iy, double val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_grid_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a50515852ae3d9010d8d23179e55a7fe8</anchor>
      <arglist>(size_t ix)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_grid_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad9bee4a03736a4a4133477761896d8b1</anchor>
      <arglist>(size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_x_name</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af651a9850724db2c52da8b624cde87a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_y_name</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a6ca69c75c7998f2d6b977a3ea4d9b3a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x_name</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>adb2426b6f6d382af30456e369fd9eb60</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_y_name</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a436ad6ef4407ed0f4dc1496c3b2d8cd2</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_x_data</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a9f7fea44bc82df73a5100b72d77e2219</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ubvector &amp;</type>
      <name>get_y_data</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a13101d209f28ec59d2405db024b5e63a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_size</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a856055a5019344954660b7e9ec32fd11</anchor>
      <arglist>(size_t &amp;nx, size_t &amp;ny) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nx</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5ccd2ca50cba141633ba2fcb0ff27105</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_ny</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a7420bcb1966c8166a066fdcc170eb9df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nslices</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a95f56a20d8d27beb552623aec33019ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>line_of_names</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>afcc0faee6669ff79d3e28e5d7527936a</anchor>
      <arglist>(std::string names)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_slice_name</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a9bed020a4b49f98c588d0c4f82175df1</anchor>
      <arglist>(size_t z) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>new_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>adfef6516557374f88020cac4e65d53af</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_slice_all</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a0c7be7dfe47802f83de2ae84ceadbe80</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a0402a5d180142928745f3cca590c0651</anchor>
      <arglist>(std::string name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ac3f4a403bf6367bccde6339a9225f5ce</anchor>
      <arglist>(std::string name, size_t &amp;ix) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rename_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a444fff8bcb6b09223334ad2b62062f29</anchor>
      <arglist>(std::string olds, std::string news)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a641a1b017e9f48cb807ca912aecb3ee3</anchor>
      <arglist>(std::string src, std::string dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>adb1254ae79be34d91c0dabfb125c7f5d</anchor>
      <arglist>(std::string scol, double val)</arglist>
    </member>
    <member kind="function">
      <type>const ubmatrix &amp;</type>
      <name>get_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ac0ccc464e98eff4be1cc3847c684cfd9</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>const ubmatrix &amp;</type>
      <name>get_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a97317fbd200f6fba4d7c933d106e681e</anchor>
      <arglist>(size_t iz) const</arglist>
    </member>
    <member kind="function">
      <type>ubmatrix &amp;</type>
      <name>get_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af8467933aae640945bc456d08e49a114</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>ubmatrix &amp;</type>
      <name>get_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a7041ce72f467e1a9852776b8572ad8cc</anchor>
      <arglist>(size_t iz)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ubmatrix &gt; &amp;</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aaa878a8650a227c0fdd349b15f8d27d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_to_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>abfa7350e6304e499b609e5ff646ab511</anchor>
      <arglist>(mat_t &amp;m, std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookup_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab2d5f0d7f0b1d38e301c6ffbdc2ed21d</anchor>
      <arglist>(double val, size_t &amp;ix) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookup_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab45c1e0a8670984554c892c7d3d0277c</anchor>
      <arglist>(double val, size_t &amp;iy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookup</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a8382ffea2eee5d610e44a2e459dba190</anchor>
      <arglist>(double val, std::string slice, size_t &amp;ix, size_t &amp;iy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interp_type</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a6894e24af7cd37c693bdd550ac45cdc0</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_interp_type</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a0110dbc28db07fb40db9e905dfc5b9bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a78b3f5bbecabbfd6533e2b196fff1dc4</anchor>
      <arglist>(double x, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a6520a9ce90ebdfc0240de9fa643bf293</anchor>
      <arglist>(double x, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a165586fbe8cb512ddc284f0f3345e967</anchor>
      <arglist>(double x, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deriv_xy</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab4f6f30c039985eae30c42d382c9fd2f</anchor>
      <arglist>(double x, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab6be315ad7eadf7debacc34c166e0637</anchor>
      <arglist>(double x1, double x2, double y, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integ_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5779f59fbc892c658679ec87f3e04d0d</anchor>
      <arglist>(double x, double y1, double y2, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interp_slices</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ae3adec28f2be6eaaef1b7debe9718333</anchor>
      <arglist>(double x, double y, size_t nv, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extract_x</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aa7c625d04a15f2e66c80a17b0fa37a64</anchor>
      <arglist>(double x, table&lt;&gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extract_y</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad6094dfd2636b4f18ef0eb507a2207bd</anchor>
      <arglist>(double y, table&lt;&gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zero_table</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ae141be7a89be68462a8531d023bf9fe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab63580ce7bb52d7208c3ee07ca23311d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_data</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a0b1401ce611c8ffd26c89b2f2a504440</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>summary</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af3ce1e9eb0d4925591053bc75cd15c6a</anchor>
      <arglist>(std::ostream *out, int ncol=79) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slice_contours</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af5210640580f7c12bd9d75ad51b37e70</anchor>
      <arglist>(std::string name, size_t nlev, vec_t &amp;levs, std::vector&lt; contour_line &gt; &amp;clines)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>add_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a92f4fb17a87fbcde4d1931b6ca4d64c7</anchor>
      <arglist>(std::string name, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a1612b2c6b9aa966b2d73ce7603e0cdee</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>set_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>abf119133e29c8de41281908d25ae24b6</anchor>
      <arglist>(std::string name, double val, bool err_on_notfound=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5d46d7fbd75e707abcb338e3963bd706</anchor>
      <arglist>(std::string name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>get_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a199d2b41df0778fd4ddd5030388f8ef9</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>get_constant</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad1b21cf18c0013d4a9a1f1d07c3741de</anchor>
      <arglist>(size_t ix, std::string &amp;name, double &amp;val) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>get_nconsts</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ab61279ac9903e9d515f9d744b45daedd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>function_matrix</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a44b12dedc1b2a482a439abdf067a30a5</anchor>
      <arglist>(std::string function, resize_mat_t &amp;mat, bool throw_on_err=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>function_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad42be077d23618119210e82e6b2f0502</anchor>
      <arglist>(std::string function, std::string col)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>interp_vec&lt; ubvector &gt; **</type>
      <name>si</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>adb4b340d798f1ef97c404308d9937794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubmatrix_column **</type>
      <name>aci</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5b2a11003c774c07a3f9fa129ec34b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>constants</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a5d8c2fd523eb616cd2458b36ad13a5a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numx</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a92ceaa09411e401d3ec6009f7f862d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numy</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aaa5f427de6a7c80cf77a7ef3c3aa87d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, size_t, std::greater&lt; std::string &gt; &gt;</type>
      <name>tree</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aba0b71b842d4edc9d2fd9c0ffe33270f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>xname</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a009a6fb4a970a03efb155f07424cbd73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>yname</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a2376b1b16430bedbb6617d11b482e1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ubmatrix &gt;</type>
      <name>list</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad07b2638dd965477e2400e0ce9d712c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>xval</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a90eccdeaacdf8e9e288f68248ddfaa8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ubvector</type>
      <name>yval</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a64e86407a559b6bff6efb3308d09c76a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>xy_set</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>aafa24bac8e40eb37cfd21a2fcbce81ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>size_set</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ae6e25ae85c5415f432d2f0ad1be0c69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_slice</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a4ecfd885480a029401d17aacd0e1b511</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>map_iter</type>
      <name>begin</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ad67b806f27a6cfa51d752ebcfda1bace</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>map_iter</type>
      <name>end</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>ac7b9b285a8f1857775874d5aee2b4bda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>map_const_iter</type>
      <name>const_begin</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>a6765e2534b30d37356f0e8a31ca8eea1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>map_const_iter</type>
      <name>const_end</name>
      <anchorfile>classo2scl_1_1table3d.html</anchorfile>
      <anchor>af28269532a8a6f3ec5963319936b49b2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::table_units</name>
    <filename>classo2scl_1_1table__units.html</filename>
    <templarg>vec_t</templarg>
    <base>o2scl::table</base>
    <member kind="function">
      <type></type>
      <name>table_units</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a34446760abdeae64e68e66b5f033a433</anchor>
      <arglist>(int cmaxlines=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_rows</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a3cd59a484924c333a664f8eadab0a32e</anchor>
      <arglist>(std::string func, table_units&lt; vec2_t &gt; &amp;dest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>type</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a08704e3ec77eedcd578cd15cbb8b6ecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy_column</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>af26b000a23b3e210a5a60a27f960a7d5</anchor>
      <arglist>(std::string src, std::string dest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>read_generic</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a9fdab2260a56cc7c8684c369b72b04b2</anchor>
      <arglist>(std::istream &amp;fin, int verbose=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_table</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>afac15d2305ad2907a53c4725ed35e74e</anchor>
      <arglist>(table_units&lt; vec2_t &gt; &amp;source, std::string src_index, bool allow_extrap=true, std::string dest_index=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>table_units</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a526412506dd6e883363b0fcfb981e5bc</anchor>
      <arglist>(const table_units &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>table_units</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a1d0c01c085bb041eecc04b8c72f26b00</anchor>
      <arglist>(const table&lt; vec_t &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>table_units &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>aa9bed22393d6574abd4204f272209c6e</anchor>
      <arglist>(const table_units &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>table_units &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>ad8b02f7848433e0562f11f9408e0e0a6</anchor>
      <arglist>(const table&lt; vec_t &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_unit</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>af97e764c771a98043925d9a0042c5170</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_unit</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a00183102a2df251051bd85b9a7e038fa</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_unit</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a4f35f19268c845ce681ebec2d67b43d4</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_unit</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a452e5368e1f5af14b7ca1525711d2138</anchor>
      <arglist>(std::string scol, std::string unit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>convert_to_unit</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>aa1afcbbeaa3646d4b3b97a26d1961aff</anchor>
      <arglist>(std::string scol, std::string unit, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nunits</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a43f727c7641fbad66bd6dca7b46a6c78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>delete_column</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a5c76a9ae351aa168a4e1e7924494a7c6</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rename_column</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>af2add1c4756d935d0351b940b8d29f9b</anchor>
      <arglist>(std::string src, std::string dest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>summary</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>aa274b0cfbfb27ee4138a20f4a733caa1</anchor>
      <arglist>(std::ostream *out, size_t ncol=79) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>convert_units *</type>
      <name>cup</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a3b79fea7787d206f30d5feb4b9888e15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::string, std::greater&lt; std::string &gt; &gt;</type>
      <name>utree</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a4f616eeda6e9634423fb24ce238341cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>table_units</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a526412506dd6e883363b0fcfb981e5bc</anchor>
      <arglist>(const table_units &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>table_units</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a1d0c01c085bb041eecc04b8c72f26b00</anchor>
      <arglist>(const table&lt; vec_t &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>table_units &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>aa9bed22393d6574abd4204f272209c6e</anchor>
      <arglist>(const table_units &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>table_units &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>ad8b02f7848433e0562f11f9408e0e0a6</anchor>
      <arglist>(const table&lt; vec_t &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_unit</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>af97e764c771a98043925d9a0042c5170</anchor>
      <arglist>(std::string scol) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_unit</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a00183102a2df251051bd85b9a7e038fa</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_unit</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a4f35f19268c845ce681ebec2d67b43d4</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_unit</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a452e5368e1f5af14b7ca1525711d2138</anchor>
      <arglist>(std::string scol, std::string unit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>convert_to_unit</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>aa1afcbbeaa3646d4b3b97a26d1961aff</anchor>
      <arglist>(std::string scol, std::string unit, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nunits</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a43f727c7641fbad66bd6dca7b46a6c78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>delete_column</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>a5c76a9ae351aa168a4e1e7924494a7c6</anchor>
      <arglist>(std::string scol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rename_column</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>af2add1c4756d935d0351b940b8d29f9b</anchor>
      <arglist>(std::string src, std::string dest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>summary</name>
      <anchorfile>classo2scl_1_1table__units.html</anchorfile>
      <anchor>aa274b0cfbfb27ee4138a20f4a733caa1</anchor>
      <arglist>(std::ostream *out, size_t ncol=79) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::tensor</name>
    <filename>classo2scl_1_1tensor.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec_size_t</templarg>
    <member kind="function">
      <type></type>
      <name>tensor</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a535f2304e2519c680da8c413d07d046c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tensor</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>acc321e644785ab34b9660b26d72a96d1</anchor>
      <arglist>(size_t rank, const size_vec_t &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a49e1a5360d3ed37c1e5b6b44b4cd8aad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a0dc510189b98a246f9d2bc663f7af2d6</anchor>
      <arglist>(const size_vec_t &amp;index, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_all</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a659ee64bf00ab160642d44e05dbc38ad</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>ae1d8f3f2c7438725d7f4ec5f4a90ff25</anchor>
      <arglist>(const size_vec_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>double const  &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a6fd94011a17341b49a2797199bd168aa</anchor>
      <arglist>(const size_vec_t &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>ubvector_slice</type>
      <name>vector_slice</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a1dce425f1c57aa00042b5953d1fb3632</anchor>
      <arglist>(size_t ix, const size_vec_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a4a7c754671c34b2063c37e5fa637d904</anchor>
      <arglist>(size_t rank, const size_vec_t &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_rank</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a771f4ca8c615075d3be66a64e7dff630</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_size</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a2614cde00712cb76ce956fa499999da6</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>const vec_size_t &amp;</type>
      <name>get_size_arr</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>ae69bf5db9d51375aad3e9eea257d5ad3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vec_t &amp;</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a8a447c03bc318c8b937004673b88c409</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>total_size</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>ae69a8a496f112b3b379dc02c1f3504a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>pack_indices</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a8c554d41efba0fc3e97d3deeb5c55a1a</anchor>
      <arglist>(const size_vec_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpack_indices</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>aedc0c3254dc559434eb5f0c05667f3ec</anchor>
      <arglist>(size_t ix, size_vec_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>min_value</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a6085c57a69dee354c65c128610768196</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>min_index</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a8b3e045dc216694b35c087231c9d8960</anchor>
      <arglist>(vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>aa2c5ce40c1b769c7482218506a54361b</anchor>
      <arglist>(vec_size_t &amp;index, double &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>max_value</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a8e1206d1b6f0f466d67e6c500e71d4f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max_index</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>ae497cccbc36ed4ab0b5af4d588216f5d</anchor>
      <arglist>(vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a4802889a3ec942694b62ab5bfed8f050</anchor>
      <arglist>(vec_size_t &amp;index, double &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minmax_value</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>afd3b48cb59455f3d000fbc445f2001f3</anchor>
      <arglist>(double &amp;min, double &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minmax_index</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>abaa1f66546b4d4968c50d2e0731eec2c</anchor>
      <arglist>(vec_size_t &amp;index_min, vec_size_t &amp;index_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minmax</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a08bb62fd0f38645a0839971f89c3419b</anchor>
      <arglist>(vec_size_t &amp;index, size_t &amp;index_min, double &amp;min, size_t &amp;index_max, double &amp;max)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>data</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a7a3f55e0f5bc57532b11439c3cdff09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_size_t</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>aef48e2ba38771f1db22aa0fe46465d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>rk</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a841ffada6d60130e15701b2eb77221f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a49e1a5360d3ed37c1e5b6b44b4cd8aad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a0dc510189b98a246f9d2bc663f7af2d6</anchor>
      <arglist>(const size_vec_t &amp;index, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_all</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a659ee64bf00ab160642d44e05dbc38ad</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>ae1d8f3f2c7438725d7f4ec5f4a90ff25</anchor>
      <arglist>(const size_vec_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>double const  &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a6fd94011a17341b49a2797199bd168aa</anchor>
      <arglist>(const size_vec_t &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>ubvector_slice</type>
      <name>vector_slice</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a1dce425f1c57aa00042b5953d1fb3632</anchor>
      <arglist>(size_t ix, const size_vec_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a4a7c754671c34b2063c37e5fa637d904</anchor>
      <arglist>(size_t rank, const size_vec_t &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_rank</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a771f4ca8c615075d3be66a64e7dff630</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_size</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a2614cde00712cb76ce956fa499999da6</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>const vec_size_t &amp;</type>
      <name>get_size_arr</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>ae69bf5db9d51375aad3e9eea257d5ad3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vec_t &amp;</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a8a447c03bc318c8b937004673b88c409</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>total_size</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>ae69a8a496f112b3b379dc02c1f3504a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>pack_indices</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a8c554d41efba0fc3e97d3deeb5c55a1a</anchor>
      <arglist>(const size_vec_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpack_indices</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>aedc0c3254dc559434eb5f0c05667f3ec</anchor>
      <arglist>(size_t ix, size_vec_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>min_value</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a6085c57a69dee354c65c128610768196</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>min_index</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a8b3e045dc216694b35c087231c9d8960</anchor>
      <arglist>(vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>min</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>aa2c5ce40c1b769c7482218506a54361b</anchor>
      <arglist>(vec_size_t &amp;index, double &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>max_value</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a8e1206d1b6f0f466d67e6c500e71d4f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max_index</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>ae497cccbc36ed4ab0b5af4d588216f5d</anchor>
      <arglist>(vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a4802889a3ec942694b62ab5bfed8f050</anchor>
      <arglist>(vec_size_t &amp;index, double &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minmax_value</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>afd3b48cb59455f3d000fbc445f2001f3</anchor>
      <arglist>(double &amp;min, double &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minmax_index</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>abaa1f66546b4d4968c50d2e0731eec2c</anchor>
      <arglist>(vec_size_t &amp;index_min, vec_size_t &amp;index_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minmax</name>
      <anchorfile>classo2scl_1_1tensor.html</anchorfile>
      <anchor>a08bb62fd0f38645a0839971f89c3419b</anchor>
      <arglist>(vec_size_t &amp;index, size_t &amp;index_min, double &amp;min, size_t &amp;index_max, double &amp;max)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::tensor1</name>
    <filename>classo2scl_1_1tensor1.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::tensor</base>
    <member kind="function">
      <type></type>
      <name>tensor1</name>
      <anchorfile>classo2scl_1_1tensor1.html</anchorfile>
      <anchor>afceb3912032bddfcc1a7805aad6310fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tensor1</name>
      <anchorfile>classo2scl_1_1tensor1.html</anchorfile>
      <anchor>a35fa14226f7a6fb811edfd7fb3fdcd5d</anchor>
      <arglist>(size_t sz)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor1.html</anchorfile>
      <anchor>a61b71073c773e798274df5c6580624ff</anchor>
      <arglist>(size_t ix)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor1.html</anchorfile>
      <anchor>a09c13a5f521ffa0cc31138b559199c55</anchor>
      <arglist>(size_t ix) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor1.html</anchorfile>
      <anchor>a974a84dc2696da438cc93e52b83a6d54</anchor>
      <arglist>(size_t index, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor1.html</anchorfile>
      <anchor>a0142341959982e97a1b714558b85aa72</anchor>
      <arglist>(const size_vec_t &amp;index, double val)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1tensor1.html</anchorfile>
      <anchor>a34a7ee64fcb554956b3f3f70a1f77756</anchor>
      <arglist>(size_t ix)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1tensor1.html</anchorfile>
      <anchor>a8e13c819ff8e31db9feb68259bdd7c57</anchor>
      <arglist>(size_t ix) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1tensor1.html</anchorfile>
      <anchor>a533bd9742e18263d452c3d31b41c31c2</anchor>
      <arglist>(size_t ix)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1tensor1.html</anchorfile>
      <anchor>a7ebce12f142721fcb3b6e63d468451d3</anchor>
      <arglist>(size_t ix) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::tensor2</name>
    <filename>classo2scl_1_1tensor2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::tensor</base>
    <member kind="function">
      <type></type>
      <name>tensor2</name>
      <anchorfile>classo2scl_1_1tensor2.html</anchorfile>
      <anchor>a72d1d2bee102f87cfbf57e814fd2894a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tensor2</name>
      <anchorfile>classo2scl_1_1tensor2.html</anchorfile>
      <anchor>ae30b8a03cc77935599eb9d151f7f5a54</anchor>
      <arglist>(size_t sz, size_t sz2)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor2.html</anchorfile>
      <anchor>a8f1b0c47f5717d4107fc3c55ed4e288b</anchor>
      <arglist>(size_t ix1, size_t ix2)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor2.html</anchorfile>
      <anchor>a1583e22ae80a3f2367e201baff4ce202</anchor>
      <arglist>(size_t ix1, size_t ix2) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor2.html</anchorfile>
      <anchor>a7f2bc562621fce2918ec10ff4baf1838</anchor>
      <arglist>(size_t ix1, size_t ix2, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor2.html</anchorfile>
      <anchor>a0a613f4d40d312b668433f7ac30e5661</anchor>
      <arglist>(const size_vec_t &amp;index, double val)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1tensor2.html</anchorfile>
      <anchor>ac7db1a2be918a5681e7c482c3e3c9478</anchor>
      <arglist>(size_t ix, size_t iy)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1tensor2.html</anchorfile>
      <anchor>ac5645f155d6196538bc6f0499fe327c1</anchor>
      <arglist>(size_t ix, size_t iy) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::tensor3</name>
    <filename>classo2scl_1_1tensor3.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec_size_t</templarg>
    <base>o2scl::tensor</base>
    <member kind="function">
      <type></type>
      <name>tensor3</name>
      <anchorfile>classo2scl_1_1tensor3.html</anchorfile>
      <anchor>a0f99a7f07ecaaad0953084870a9f682f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tensor3</name>
      <anchorfile>classo2scl_1_1tensor3.html</anchorfile>
      <anchor>a305a85cb369e94fb6d9c6bd9c1973f07</anchor>
      <arglist>(size_t sz, size_t sz2, size_t sz3)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor3.html</anchorfile>
      <anchor>ae06244fdd4ee8b4f78a4db866f388586</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor3.html</anchorfile>
      <anchor>a8fb92484fb293704ba94efddfb419d4b</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor3.html</anchorfile>
      <anchor>a0500cb5801a1d69f1a694e0560038b03</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor3.html</anchorfile>
      <anchor>a7f7113b351bc90d1e64ab81ec3d52cd8</anchor>
      <arglist>(const size_vec_t &amp;index, double val)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::tensor4</name>
    <filename>classo2scl_1_1tensor4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::tensor</base>
    <member kind="function">
      <type></type>
      <name>tensor4</name>
      <anchorfile>classo2scl_1_1tensor4.html</anchorfile>
      <anchor>aee0ad51191141617a6acc50bfbe8b5ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tensor4</name>
      <anchorfile>classo2scl_1_1tensor4.html</anchorfile>
      <anchor>a049601405d01216c2702fde561e3d72a</anchor>
      <arglist>(size_t sz, size_t sz2, size_t sz3, size_t sz4)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor4.html</anchorfile>
      <anchor>a650081d2bb39c61ded6fd0b28ef80dd2</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3, size_t ix4)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor4.html</anchorfile>
      <anchor>abd2de5f7c0615d1bf2584d280e7cab0f</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3, size_t ix4) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor4.html</anchorfile>
      <anchor>af5768d6c242eb6f7ae126ee54e6c0e7c</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3, size_t ix4, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor4.html</anchorfile>
      <anchor>a9254c29e845e3e8ebc90d7cde6e873a5</anchor>
      <arglist>(const size_vec_t &amp;index, double val)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::tensor_grid</name>
    <filename>classo2scl_1_1tensor__grid.html</filename>
    <templarg>vec_t</templarg>
    <templarg>vec_size_t</templarg>
    <base>o2scl::tensor</base>
    <member kind="function">
      <type></type>
      <name>tensor_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>ae7c75c75c2238b27cbcfc7fe16bb62ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tensor_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a2ee0f521c70217ecdbf85631abb7dffe</anchor>
      <arglist>(size_t rank, const size_vec_t &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>vec_t &amp;</type>
      <name>get_data</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>ae759615ce1a9997c180887cefe584d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>aeb241a3ce10a03a68f05d4bd7bb971bf</anchor>
      <arglist>(const vec2_t &amp;grdp, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>acd420d9f5a817fa78852cb947f359ac6</anchor>
      <arglist>(const vec2_t &amp;grdp, double val, vec3_t &amp;closest)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a337beafd73858d2362b0f7147fe173c8</anchor>
      <arglist>(const vec2_t &amp;gridp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a6db9470d976f880ac63463341509b7a9</anchor>
      <arglist>(const vec2_t &amp;gridp, vec3_t &amp;closest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a1055303ffbf33cffa1f570c0c4825231</anchor>
      <arglist>(size_t rank, const size_vec2_t &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_grid_set</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a81a4919410d1f4df19229ebbcda5a6a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid_packed</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a0f354fc2bd5e438c29a3bacfeda6c8b4</anchor>
      <arglist>(const vec2_t &amp;grid_vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a2a448d76f46eaad5c5a3e46939eeb8ed</anchor>
      <arglist>(const vec_vec_t &amp;grid_vecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a3a54ee501fa213900251ea847ffea77d</anchor>
      <arglist>(size_t i, rvec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a64c986b0c6c4bc46f67939548f23eb12</anchor>
      <arglist>(size_t i, size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a10f11fbf394d64dd6005bfeb3be4e0d0</anchor>
      <arglist>(size_t i, size_t j, double val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>af44d57d689371abc400098a11cc72220</anchor>
      <arglist>(size_t i, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookup_grid_vec</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>ab27ac22bbd77e6fa368475d40a6b7305</anchor>
      <arglist>(const vec2_t &amp;vals, size_vec2_t &amp;indices) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_grid_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>ac88a7d64353bdd69c101711969fedcd9</anchor>
      <arglist>(size_t i, const double &amp;val, double &amp;val2)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_grid_packed</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a93cd4842fb14ae548c7660d3fdfaaf47</anchor>
      <arglist>(size_t i, double val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_grid_packed_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a44972e9b32813c4c738fe3b71ae30b3a</anchor>
      <arglist>(size_t i, double val, double &amp;val2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_slice_align</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>aeca897539bbec1d9881f071bd5840e97</anchor>
      <arglist>(size_t ix_x, size_t ix_y, size_vec2_t &amp;index, table3d &amp;tab, std::string slice_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_slice_interp</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a2eef0dd5700a572f1e9857e5ccea0ec5</anchor>
      <arglist>(size_t ix_x, size_t ix_y, size_vec2_t &amp;index, table3d &amp;tab, std::string slice_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a92b28ac998e0eeed5a2916b365344dca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interp_type</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a2012189f8967c09a9ace732c51d3161c</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interpolate</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a7e61258f1d3eeed50b36427fd266b5e9</anchor>
      <arglist>(double *vals)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_linear</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a0033e060028fd2fb3f4b0c3f7ca4c58a</anchor>
      <arglist>(vec2_size_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_linear_power_two</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a1feefc39be6e1573d78d09130550d821</anchor>
      <arglist>(vec2_size_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interp_linear_vec0</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a6ab6eb1754ed333c5156d40dcdeaca10</anchor>
      <arglist>(vec2_size_t &amp;v, vec2_t &amp;res)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interp_linear_power_two_vec0</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>ac2972fef8096ebf5617acdc99b4bf244</anchor>
      <arglist>(vec2_size_t &amp;v, vec2_t &amp;res)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interp_linear_vec</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>ad6081930a47aaa38f93dc2935d72dbde</anchor>
      <arglist>(vec2_size_t &amp;v, size_t ifree, vec2_t &amp;res)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t</type>
      <name>grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a50796673a493cbc4657786dd40bceace</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>grid_set</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a4049c2273408bcc119cf8b5cdb2ed282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>itype</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>aff2aa00498f8ce3e9083997968ac831e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>aeb241a3ce10a03a68f05d4bd7bb971bf</anchor>
      <arglist>(const vec2_t &amp;grdp, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>acd420d9f5a817fa78852cb947f359ac6</anchor>
      <arglist>(const vec2_t &amp;grdp, double val, vec3_t &amp;closest)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a337beafd73858d2362b0f7147fe173c8</anchor>
      <arglist>(const vec2_t &amp;gridp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a6db9470d976f880ac63463341509b7a9</anchor>
      <arglist>(const vec2_t &amp;gridp, vec3_t &amp;closest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a1055303ffbf33cffa1f570c0c4825231</anchor>
      <arglist>(size_t rank, const size_vec2_t &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_grid_set</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a81a4919410d1f4df19229ebbcda5a6a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid_packed</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a0f354fc2bd5e438c29a3bacfeda6c8b4</anchor>
      <arglist>(const vec2_t &amp;grid_vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a2a448d76f46eaad5c5a3e46939eeb8ed</anchor>
      <arglist>(const vec_vec_t &amp;grid_vecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a3a54ee501fa213900251ea847ffea77d</anchor>
      <arglist>(size_t i, rvec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a64c986b0c6c4bc46f67939548f23eb12</anchor>
      <arglist>(size_t i, size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a10f11fbf394d64dd6005bfeb3be4e0d0</anchor>
      <arglist>(size_t i, size_t j, double val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_grid</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>af44d57d689371abc400098a11cc72220</anchor>
      <arglist>(size_t i, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookup_grid_vec</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>ab27ac22bbd77e6fa368475d40a6b7305</anchor>
      <arglist>(const vec2_t &amp;vals, size_vec2_t &amp;indices) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_grid_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>ac88a7d64353bdd69c101711969fedcd9</anchor>
      <arglist>(size_t i, const double &amp;val, double &amp;val2)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_grid_packed</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a93cd4842fb14ae548c7660d3fdfaaf47</anchor>
      <arglist>(size_t i, double val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lookup_grid_packed_val</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a44972e9b32813c4c738fe3b71ae30b3a</anchor>
      <arglist>(size_t i, double val, double &amp;val2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_slice_align</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>aeca897539bbec1d9881f071bd5840e97</anchor>
      <arglist>(size_t ix_x, size_t ix_y, size_vec2_t &amp;index, table3d &amp;tab, std::string slice_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_slice_interp</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a2eef0dd5700a572f1e9857e5ccea0ec5</anchor>
      <arglist>(size_t ix_x, size_t ix_y, size_vec2_t &amp;index, table3d &amp;tab, std::string slice_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a92b28ac998e0eeed5a2916b365344dca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interp_type</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a2012189f8967c09a9ace732c51d3161c</anchor>
      <arglist>(size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interpolate</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a7e61258f1d3eeed50b36427fd266b5e9</anchor>
      <arglist>(double *vals)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_linear</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a0033e060028fd2fb3f4b0c3f7ca4c58a</anchor>
      <arglist>(vec2_size_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_linear_power_two</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a1feefc39be6e1573d78d09130550d821</anchor>
      <arglist>(vec2_size_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interp_linear_vec0</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>a6ab6eb1754ed333c5156d40dcdeaca10</anchor>
      <arglist>(vec2_size_t &amp;v, vec2_t &amp;res)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interp_linear_power_two_vec0</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>ac2972fef8096ebf5617acdc99b4bf244</anchor>
      <arglist>(vec2_size_t &amp;v, vec2_t &amp;res)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interp_linear_vec</name>
      <anchorfile>classo2scl_1_1tensor__grid.html</anchorfile>
      <anchor>ad6081930a47aaa38f93dc2935d72dbde</anchor>
      <arglist>(vec2_size_t &amp;v, size_t ifree, vec2_t &amp;res)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::tensor_grid1</name>
    <filename>classo2scl_1_1tensor__grid1.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::tensor_grid</base>
    <member kind="function">
      <type></type>
      <name>tensor_grid1</name>
      <anchorfile>classo2scl_1_1tensor__grid1.html</anchorfile>
      <anchor>a61281cdda4df60feff3114322ab38c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tensor_grid1</name>
      <anchorfile>classo2scl_1_1tensor__grid1.html</anchorfile>
      <anchor>a355711ea52c1f39b12b0b88c5f351f73</anchor>
      <arglist>(size_t sz)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor__grid1.html</anchorfile>
      <anchor>ae972407496590c90d08ad4a9b9c20c08</anchor>
      <arglist>(size_t ix1)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor__grid1.html</anchorfile>
      <anchor>a08fb5b082c73f8397dd3408289820765</anchor>
      <arglist>(size_t ix1) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor__grid1.html</anchorfile>
      <anchor>a2b54ec661ce3962627c51977ee48cac5</anchor>
      <arglist>(size_t ix1, double val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1tensor__grid1.html</anchorfile>
      <anchor>a697fac5e5ec90e4f5676bb1158845eef</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_linear</name>
      <anchorfile>classo2scl_1_1tensor__grid1.html</anchorfile>
      <anchor>af3a78ab5d521c69a805cd84ecaa27c5d</anchor>
      <arglist>(double x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::tensor_grid2</name>
    <filename>classo2scl_1_1tensor__grid2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::tensor_grid</base>
    <member kind="function">
      <type></type>
      <name>tensor_grid2</name>
      <anchorfile>classo2scl_1_1tensor__grid2.html</anchorfile>
      <anchor>aa9244f610b8324207b75556dce6bc5ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tensor_grid2</name>
      <anchorfile>classo2scl_1_1tensor__grid2.html</anchorfile>
      <anchor>abfd9aaf20e9f847573c457266f296087</anchor>
      <arglist>(size_t sz, size_t sz2)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor__grid2.html</anchorfile>
      <anchor>aeedaf14727bc5b76d9a49b90f568d8f4</anchor>
      <arglist>(size_t ix1, size_t ix2)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor__grid2.html</anchorfile>
      <anchor>a5d8c2aaa25ddebcc43ad6e099a0a8d9a</anchor>
      <arglist>(size_t ix1, size_t ix2) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor__grid2.html</anchorfile>
      <anchor>a38935b2eab7732cfcb7d5b5288cd7271</anchor>
      <arglist>(size_t ix1, size_t ix2, double val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1tensor__grid2.html</anchorfile>
      <anchor>aa1854fbfbcd4764d083dc8dd1dd6f8d3</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_linear</name>
      <anchorfile>classo2scl_1_1tensor__grid2.html</anchorfile>
      <anchor>aee3eac7e9a6fbdeb29f3a63259b7395c</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::tensor_grid3</name>
    <filename>classo2scl_1_1tensor__grid3.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::tensor_grid</base>
    <member kind="function">
      <type></type>
      <name>tensor_grid3</name>
      <anchorfile>classo2scl_1_1tensor__grid3.html</anchorfile>
      <anchor>a3b837a4083c329a255fbb6e495f894a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tensor_grid3</name>
      <anchorfile>classo2scl_1_1tensor__grid3.html</anchorfile>
      <anchor>a5e61d6e4267289031032d3d04014ba62</anchor>
      <arglist>(size_t sz, size_t sz2, size_t sz3)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor__grid3.html</anchorfile>
      <anchor>a5de67811df80495703cf3ad216ed66a9</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor__grid3.html</anchorfile>
      <anchor>a6f9f06ab4eef751a9c3dec3ff1a0a956</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor__grid3.html</anchorfile>
      <anchor>a14e5d37a183d9e09eb10e9c8ca1f2dec</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3, double val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1tensor__grid3.html</anchorfile>
      <anchor>af9db614059423754d2ba91a6be4e8e61</anchor>
      <arglist>(double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_linear</name>
      <anchorfile>classo2scl_1_1tensor__grid3.html</anchorfile>
      <anchor>aef57b3928e3b09fcfa33ec43ea4bc0cd</anchor>
      <arglist>(double x, double y, double z)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::tensor_grid4</name>
    <filename>classo2scl_1_1tensor__grid4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>o2scl::tensor_grid</base>
    <member kind="function">
      <type></type>
      <name>tensor_grid4</name>
      <anchorfile>classo2scl_1_1tensor__grid4.html</anchorfile>
      <anchor>a07fc643b4f8814f3b65b66c177299bca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tensor_grid4</name>
      <anchorfile>classo2scl_1_1tensor__grid4.html</anchorfile>
      <anchor>a36419e36f973912fae1fab8434c28a0f</anchor>
      <arglist>(size_t sz, size_t sz2, size_t sz3, size_t sz4)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor__grid4.html</anchorfile>
      <anchor>acbabc4465c5ecb946c4e65f3742de38c</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3, size_t ix4)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>get</name>
      <anchorfile>classo2scl_1_1tensor__grid4.html</anchorfile>
      <anchor>a2a3856c2b49d39c11603d61ee8afe42a</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3, size_t ix4) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classo2scl_1_1tensor__grid4.html</anchorfile>
      <anchor>a0aa5f383590fb4a5d89431fda7b95261</anchor>
      <arglist>(size_t ix1, size_t ix2, size_t ix3, size_t ix4, double val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp</name>
      <anchorfile>classo2scl_1_1tensor__grid4.html</anchorfile>
      <anchor>a8adaa93b05d4014d1f8712d2344b3868</anchor>
      <arglist>(double x, double y, double z, double a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>interp_linear</name>
      <anchorfile>classo2scl_1_1tensor__grid4.html</anchorfile>
      <anchor>ad94c1ad1b6df170d33a22ae6cb335df1</anchor>
      <arglist>(double x, double y, double z, double a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::test_mgr</name>
    <filename>classo2scl_1_1test__mgr.html</filename>
    <member kind="function">
      <type></type>
      <name>test_mgr</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a56e4e640511ac3ddea23ddf2ecf4caef</anchor>
      <arglist>(bool success_l=true, std::string last_fail_l=&quot;&quot;, int ntests_l=0, int output_level_l=1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>report</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a104423a4fca7c95fa7838a2d36677c9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_rel_nonzero_table</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a74f329eee4ee7b044b0a99a3f7eed27e</anchor>
      <arglist>(const table_units&lt; vec_t &gt; &amp;result, const table_units&lt; vec_t &gt; &amp;expected, data_t error, data_t zero_tol, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_success</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a50dbc2f9a2932e2e14b3c39eda91785e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_last_fail</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ab0cf4d2de8d9dec11396d660f3b51646</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_output_level</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a10b37156b16754003b6aaf83f8588751</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_last_fail</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a8357c6868dd464f80a666502ed2ae8f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_output_level</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a86b731ae47395b7eb0d887e50e4a6d52</anchor>
      <arglist>(int l)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_ntests</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>adc5221a0148be007de665a9f8571e9cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_rel</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ad979e8fe3720e002fac81670083e453f</anchor>
      <arglist>(data_t result, data_t expected, data_t rel_error, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_abs</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a85d30965532109c160fcaabfa4729b3c</anchor>
      <arglist>(data_t result, data_t expected, data_t abs_error, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_fact</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ad6697d56a91d7aa74519467d30735361</anchor>
      <arglist>(data_t result, data_t expected, data_t factor, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_str</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>aca533f3fc553336f4b5b283a0c636d80</anchor>
      <arglist>(std::string result, std::string expected, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_gen</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a73a639a5b35b4b5eebd4da3bfaf9ca8a</anchor>
      <arglist>(bool value, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_rel_vec</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ac137eaa3f2bd30e3f46a5f524220aaef</anchor>
      <arglist>(int nv, const vec_t &amp;result, const vec2_t &amp;expected, data_t rel_error, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_abs_vec</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a17ba3ee065f2dd5bd14de6b356a79f17</anchor>
      <arglist>(int nv, const vec_t &amp;result, const vec2_t &amp;expected, data_t abs_error, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_fact_vec</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ac2fcc08b83bcbbe37b36f60003d5bd5c</anchor>
      <arglist>(int nv, const vec_t &amp;result, const vec2_t &amp;expected, data_t factor, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_gen_vec</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a982d9be1baa819fa1495d36540e9ae6e</anchor>
      <arglist>(int nv, const vec_t &amp;result, const vec_t &amp;expected, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_rel_mat</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ae2cf6a4c0b721cdffef2ab6083029b00</anchor>
      <arglist>(int nr, int nc, const mat_t &amp;result, const mat2_t &amp;expected, data_t rel_error, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_rel_nonzero_mat</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>abae5d487a264e0b3c8c978385f002ed0</anchor>
      <arglist>(int nr, int nc, const mat_t &amp;result, const mat2_t &amp;expected, data_t error, data_t zero_tol, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_abs_mat</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>aaf44b56ad4f7b43053c4ea514fae5437</anchor>
      <arglist>(int nr, int nc, const mat_t &amp;result, const mat2_t &amp;expected, data_t abs_error, std::string description)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>process_test</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a3a9fcc085d39e2df0dc7ada3ade26427</anchor>
      <arglist>(bool ret, std::string d2, std::string description)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ntests</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a212de64fb627b2cd63d6f438709bfab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>output_level</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a5d52732641b1ce85c6110859ebe895dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>success</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a82d0bd3d20b9b777437b9f38ee3bfaad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>last_fail</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>aadb54a4f02c939eeafef6fd64ee894bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend const test_mgr</type>
      <name>operator+</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a321bf6f4f27beaac93bed0b13d59d4f0</anchor>
      <arglist>(const test_mgr &amp;left, const test_mgr &amp;right)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_success</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a50dbc2f9a2932e2e14b3c39eda91785e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_last_fail</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ab0cf4d2de8d9dec11396d660f3b51646</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_output_level</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a10b37156b16754003b6aaf83f8588751</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_last_fail</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a8357c6868dd464f80a666502ed2ae8f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_output_level</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a86b731ae47395b7eb0d887e50e4a6d52</anchor>
      <arglist>(int l)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_ntests</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>adc5221a0148be007de665a9f8571e9cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_rel</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ad979e8fe3720e002fac81670083e453f</anchor>
      <arglist>(data_t result, data_t expected, data_t rel_error, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_abs</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a85d30965532109c160fcaabfa4729b3c</anchor>
      <arglist>(data_t result, data_t expected, data_t abs_error, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_fact</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ad6697d56a91d7aa74519467d30735361</anchor>
      <arglist>(data_t result, data_t expected, data_t factor, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_str</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>aca533f3fc553336f4b5b283a0c636d80</anchor>
      <arglist>(std::string result, std::string expected, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_gen</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a73a639a5b35b4b5eebd4da3bfaf9ca8a</anchor>
      <arglist>(bool value, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_rel_vec</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ac137eaa3f2bd30e3f46a5f524220aaef</anchor>
      <arglist>(int nv, const vec_t &amp;result, const vec2_t &amp;expected, data_t rel_error, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_abs_vec</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a17ba3ee065f2dd5bd14de6b356a79f17</anchor>
      <arglist>(int nv, const vec_t &amp;result, const vec2_t &amp;expected, data_t abs_error, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_fact_vec</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ac2fcc08b83bcbbe37b36f60003d5bd5c</anchor>
      <arglist>(int nv, const vec_t &amp;result, const vec2_t &amp;expected, data_t factor, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_gen_vec</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>a982d9be1baa819fa1495d36540e9ae6e</anchor>
      <arglist>(int nv, const vec_t &amp;result, const vec_t &amp;expected, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_rel_mat</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>ae2cf6a4c0b721cdffef2ab6083029b00</anchor>
      <arglist>(int nr, int nc, const mat_t &amp;result, const mat2_t &amp;expected, data_t rel_error, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_rel_nonzero_mat</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>abae5d487a264e0b3c8c978385f002ed0</anchor>
      <arglist>(int nr, int nc, const mat_t &amp;result, const mat2_t &amp;expected, data_t error, data_t zero_tol, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_abs_mat</name>
      <anchorfile>classo2scl_1_1test__mgr.html</anchorfile>
      <anchor>aaf44b56ad4f7b43053c4ea514fae5437</anchor>
      <arglist>(int nr, int nc, const mat_t &amp;result, const mat2_t &amp;expected, data_t abs_error, std::string description)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::Token</name>
    <filename>classo2scl_1_1Token.html</filename>
    <templarg></templarg>
    <base>o2scl::TokenBase</base>
    <member kind="function">
      <type></type>
      <name>Token</name>
      <anchorfile>classo2scl_1_1Token.html</anchorfile>
      <anchor>a7e95fc24585d87af033d7ea96c7ca42a</anchor>
      <arglist>(T t, tokType type)</arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>val</name>
      <anchorfile>classo2scl_1_1Token.html</anchorfile>
      <anchor>acee4903fb573e34f19d52e738179a21f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>o2scl::TokenBase</name>
    <filename>structo2scl_1_1TokenBase.html</filename>
    <member kind="variable">
      <type>tokType</type>
      <name>type</name>
      <anchorfile>structo2scl_1_1TokenBase.html</anchorfile>
      <anchor>a1ab0f36519c59998851ec6c148eee37d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::ubvector_2_mem</name>
    <filename>classo2scl__linalg_1_1ubvector__2__mem.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::ubvector_4_mem</name>
    <filename>classo2scl__linalg_1_1ubvector__4__mem.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl_linalg::ubvector_5_mem</name>
    <filename>classo2scl__linalg_1_1ubvector__5__mem.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl::uniform_grid</name>
    <filename>classo2scl_1_1uniform__grid.html</filename>
    <templarg>data_t</templarg>
    <member kind="function">
      <type></type>
      <name>uniform_grid</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>aca2afbdc383d2265054a2aef909e2430</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nbins</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>a0cf30b31479d75edd429153c37f9600b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_npoints</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>acc8a1994538ecd16bff9c29620709142</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_log</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>ad89f8644f98b377fff1de7893e942b7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>ab382235a2f2b4bd309717825c5ef3dea</anchor>
      <arglist>(resize_vec_t &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>const data_t</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>a4d0b9103453da7b6812a2540af0d0d12</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>uniform_grid</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>a750e8f78204d50f3133c7fb336a6c180</anchor>
      <arglist>(const uniform_grid &amp;ug)</arglist>
    </member>
    <member kind="function">
      <type>uniform_grid &amp;</type>
      <name>operator=</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>ad1ba38a66f908613704fc70808a20ef1</anchor>
      <arglist>(const uniform_grid &amp;ug)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>uniform_grid</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>ad3c4c8d2972b6ac4f05faa402665d081</anchor>
      <arglist>(data_t start, data_t end, data_t width, size_t n_bins, bool log=false)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>data_t</type>
      <name>g_start</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>a9ecab76b6e6ba74540a7c0ed3dfefd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>data_t</type>
      <name>g_end</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>a11fb6c5e14989ed37d69d768284264d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>data_t</type>
      <name>g_width</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>a704c6265aaf28910ae3a2e83495d29af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>g_n_bins</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>ae18a21017f71ce4ec07a8a44fbbb76d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>g_log</name>
      <anchorfile>classo2scl_1_1uniform__grid.html</anchorfile>
      <anchor>a71f6adc538427204d2600b27bfdedf9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::uniform_grid_end</name>
    <filename>classo2scl_1_1uniform__grid__end.html</filename>
    <templarg>data_t</templarg>
    <base>o2scl::uniform_grid</base>
    <member kind="function">
      <type></type>
      <name>uniform_grid_end</name>
      <anchorfile>classo2scl_1_1uniform__grid__end.html</anchorfile>
      <anchor>ad387f3e796743071e613252c78c38475</anchor>
      <arglist>(data_t start, data_t end, size_t n_bins)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::uniform_grid_end_width</name>
    <filename>classo2scl_1_1uniform__grid__end__width.html</filename>
    <templarg></templarg>
    <base>o2scl::uniform_grid</base>
    <member kind="function">
      <type></type>
      <name>uniform_grid_end_width</name>
      <anchorfile>classo2scl_1_1uniform__grid__end__width.html</anchorfile>
      <anchor>a9fa88db9cac3a65c4393fb66a1f622be</anchor>
      <arglist>(data_t start, data_t end, data_t width)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::uniform_grid_log_end</name>
    <filename>classo2scl_1_1uniform__grid__log__end.html</filename>
    <templarg></templarg>
    <base>o2scl::uniform_grid</base>
    <member kind="function">
      <type></type>
      <name>uniform_grid_log_end</name>
      <anchorfile>classo2scl_1_1uniform__grid__log__end.html</anchorfile>
      <anchor>a89f5613840e30bf141f3986554cbe8fe</anchor>
      <arglist>(data_t start, data_t end, size_t n_bins)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::uniform_grid_log_end_width</name>
    <filename>classo2scl_1_1uniform__grid__log__end__width.html</filename>
    <templarg></templarg>
    <base>o2scl::uniform_grid</base>
    <member kind="function">
      <type></type>
      <name>uniform_grid_log_end_width</name>
      <anchorfile>classo2scl_1_1uniform__grid__log__end__width.html</anchorfile>
      <anchor>ae1cd62c5ea5efe2aaefc892f2b84eff5</anchor>
      <arglist>(data_t start, data_t end, data_t width)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::uniform_grid_log_width</name>
    <filename>classo2scl_1_1uniform__grid__log__width.html</filename>
    <templarg></templarg>
    <base>o2scl::uniform_grid</base>
    <member kind="function">
      <type></type>
      <name>uniform_grid_log_width</name>
      <anchorfile>classo2scl_1_1uniform__grid__log__width.html</anchorfile>
      <anchor>af7a444127b826c913658c72b35250bdf</anchor>
      <arglist>(data_t start, data_t width, size_t n_bins)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::uniform_grid_width</name>
    <filename>classo2scl_1_1uniform__grid__width.html</filename>
    <templarg></templarg>
    <base>o2scl::uniform_grid</base>
    <member kind="function">
      <type></type>
      <name>uniform_grid_width</name>
      <anchorfile>classo2scl_1_1uniform__grid__width.html</anchorfile>
      <anchor>a50b89f373dd33648afb7534a373719a1</anchor>
      <arglist>(data_t start, data_t width, size_t n_bins)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::uniform_prior</name>
    <filename>classo2scl_1_1uniform__prior.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1uniform__prior.html</anchorfile>
      <anchor>af3df9fc934af4901123ebe3e56e2689b</anchor>
      <arglist>(size_t npar, const vec_t &amp;par)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>o2scl::convert_units::unit_t</name>
    <filename>structo2scl_1_1convert__units_1_1unit__t.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>f</name>
      <anchorfile>structo2scl_1_1convert__units_1_1unit__t.html</anchorfile>
      <anchor>a87b5af97fa0b0766a425aa1d0c2997da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>t</name>
      <anchorfile>structo2scl_1_1convert__units_1_1unit__t.html</anchorfile>
      <anchor>a097ffb713e422ec9584baf9a995e54e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>c</name>
      <anchorfile>structo2scl_1_1convert__units_1_1unit__t.html</anchorfile>
      <anchor>ae1d6cb96a289a9690b8cf7d38ad2c1b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>o2scl::vec_index</name>
    <filename>classo2scl_1_1vec__index.html</filename>
    <member kind="function">
      <type></type>
      <name>vec_index</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>adcca23e952c64c26489265d0b69e60d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vec_index</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>a3e101d4dd37ee285b93a04cd85c683c7</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vec_index</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>adcaf517e44b27bf4376a944131aabc5a</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>a6b393014464ae3cf24cfdef803e1fe79</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>operator()</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>aaa495958fb8e28482a350b0153dae8db</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>aff9ba9e2a56e45a68dba79bb6bffe8b7</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>a09d3698d0de3ccdfbd8faa480814942e</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>ae31364ec8d5767ad240c1e92eb2bcb4c</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>a92b112d0a1c7986f0f95adbda35432ea</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; list)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, size_t, std::greater&lt; std::string &gt; &gt;</type>
      <name>tmap</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>a564af1eebb804133f33f83eaccd7df0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>tvec</name>
      <anchorfile>classo2scl_1_1vec__index.html</anchorfile>
      <anchor>afb2f9d6de146c1b4ba56863fe1c619aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::numeric::ublas::vector</name>
    <filename>classboost_1_1numeric_1_1ublas_1_1vector.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>vector&lt; double &gt;</name>
    <filename>classboost_1_1numeric_1_1ublas_1_1vector.html</filename>
  </compound>
  <compound kind="class">
    <name>vector&lt; int &gt;</name>
    <filename>classboost_1_1numeric_1_1ublas_1_1vector.html</filename>
  </compound>
  <compound kind="class">
    <name>vector&lt; size_t &gt;</name>
    <filename>classboost_1_1numeric_1_1ublas_1_1vector.html</filename>
  </compound>
  <compound kind="class">
    <name>o2scl::vector_range_gen</name>
    <filename>classo2scl_1_1vector__range__gen.html</filename>
    <templarg>vec_t</templarg>
    <member kind="function">
      <type></type>
      <name>vector_range_gen</name>
      <anchorfile>classo2scl_1_1vector__range__gen.html</anchorfile>
      <anchor>a72600f86d3351c91c1fd69fd8ff7f3b1</anchor>
      <arglist>(vec_t &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector_range_gen</name>
      <anchorfile>classo2scl_1_1vector__range__gen.html</anchorfile>
      <anchor>a31a947c079a5308197c038af95d4578d</anchor>
      <arglist>(const vector_range_gen &amp;v2, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classo2scl_1_1vector__range__gen.html</anchorfile>
      <anchor>aa5ca78ee58f6a797ee84b7b7cc9cc5fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1vector__range__gen.html</anchorfile>
      <anchor>aba8cd08b2affa228f833799e81b00719</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classo2scl_1_1vector__range__gen.html</anchorfile>
      <anchor>a92a7e48640a79f250069c815f9c16848</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vec_t &amp;</type>
      <name>v_</name>
      <anchorfile>classo2scl_1_1vector__range__gen.html</anchorfile>
      <anchor>a901299dffee81e02b8d2dcb61d5db4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>start_</name>
      <anchorfile>classo2scl_1_1vector__range__gen.html</anchorfile>
      <anchor>aef74bb75ef1e82737aea20bc45d309cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>last_</name>
      <anchorfile>classo2scl_1_1vector__range__gen.html</anchorfile>
      <anchor>a3b70ef35164a3177cc617f2b6278a3d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>boost</name>
    <filename>namespaceboost.html</filename>
    <namespace>boost::numeric</namespace>
  </compound>
  <compound kind="namespace">
    <name>boost::numeric</name>
    <filename>namespaceboost_1_1numeric.html</filename>
    <namespace>boost::numeric::ublas</namespace>
  </compound>
  <compound kind="namespace">
    <name>boost::numeric::ublas</name>
    <filename>namespaceboost_1_1numeric_1_1ublas.html</filename>
    <class kind="class">boost::numeric::ublas::matrix</class>
    <class kind="class">boost::numeric::ublas::vector</class>
  </compound>
  <compound kind="namespace">
    <name>o2scl</name>
    <filename>namespaceo2scl.html</filename>
    <class kind="class">o2scl::anneal_base</class>
    <class kind="class">o2scl::anneal_gsl</class>
    <class kind="class">o2scl::anneal_mt</class>
    <class kind="class">o2scl::astep_base</class>
    <class kind="class">o2scl::astep_gsl</class>
    <class kind="class">o2scl::astep_nonadapt</class>
    <class kind="class">o2scl::calculator</class>
    <class kind="class">o2scl::cheb_approx</class>
    <class kind="class">o2scl::chi_fit_funct</class>
    <class kind="class">o2scl::cli</class>
    <class kind="class">o2scl::cli_readline</class>
    <class kind="struct">o2scl::cmd_line_arg</class>
    <class kind="class">o2scl::columnify</class>
    <class kind="class">o2scl::comm_option_fptr</class>
    <class kind="class">o2scl::comm_option_funct</class>
    <class kind="class">o2scl::comm_option_mfptr</class>
    <class kind="struct">o2scl::comm_option_s</class>
    <class kind="class">o2scl::const_vector_range_gen</class>
    <class kind="class">o2scl::contour</class>
    <class kind="class">o2scl::contour_line</class>
    <class kind="class">o2scl::convert_units</class>
    <class kind="class">o2scl::cubic_complex</class>
    <class kind="class">o2scl::cubic_complex_std</class>
    <class kind="class">o2scl::cubic_real</class>
    <class kind="class">o2scl::cubic_real_coeff</class>
    <class kind="class">o2scl::cubic_real_coeff_cern</class>
    <class kind="class">o2scl::cubic_real_coeff_gsl</class>
    <class kind="class">o2scl::deriv_base</class>
    <class kind="class">o2scl::deriv_cern</class>
    <class kind="class">o2scl::deriv_eqi</class>
    <class kind="class">o2scl::deriv_gsl</class>
    <class kind="class">o2scl::diff_evo</class>
    <class kind="class">o2scl::diff_evo_adapt</class>
    <class kind="class">o2scl::edge_crossings</class>
    <class kind="class">o2scl::err_hnd_cpp</class>
    <class kind="class">o2scl::err_hnd_gsl</class>
    <class kind="class">o2scl::err_hnd_type</class>
    <class kind="class">o2scl::exc_exception</class>
    <class kind="class">o2scl::exc_invalid_argument</class>
    <class kind="class">o2scl::exc_ios_failure</class>
    <class kind="class">o2scl::exc_logic_error</class>
    <class kind="class">o2scl::exc_overflow_error</class>
    <class kind="class">o2scl::exc_range_error</class>
    <class kind="class">o2scl::exc_runtime_error</class>
    <class kind="class">o2scl::expval_base</class>
    <class kind="class">o2scl::expval_matrix</class>
    <class kind="class">o2scl::expval_scalar</class>
    <class kind="class">o2scl::expval_vector</class>
    <class kind="class">o2scl::fit_base</class>
    <class kind="class">o2scl::fit_bayes</class>
    <class kind="class">o2scl::fit_fix_pars</class>
    <class kind="class">o2scl::fit_funct_strings</class>
    <class kind="class">o2scl::fit_linear</class>
    <class kind="class">o2scl::fit_min</class>
    <class kind="class">o2scl::fit_nonlin</class>
    <class kind="class">o2scl::fit_nonlin_b</class>
    <class kind="class">o2scl::format_float</class>
    <class kind="class">o2scl::funct_gsl</class>
    <class kind="class">o2scl::funct_string</class>
    <class kind="class">o2scl::gen_fit_funct</class>
    <class kind="class">o2scl::gen_test_number</class>
    <class kind="class">o2scl::gradient</class>
    <class kind="class">o2scl::gradient_gsl</class>
    <class kind="class">o2scl::gsl_matrix_wrap</class>
    <class kind="class">o2scl::gsl_tolerance</class>
    <class kind="class">o2scl::gsl_vector_wrap</class>
    <class kind="class">o2scl::hist</class>
    <class kind="class">o2scl::hist_2d</class>
    <class kind="class">o2scl::inte</class>
    <class kind="class">o2scl::inte_adapt_cern</class>
    <class kind="class">o2scl::inte_cauchy_cern</class>
    <class kind="class">o2scl::inte_cheb_gsl</class>
    <class kind="class">o2scl::inte_cubature_base</class>
    <class kind="class">o2scl::inte_gauss56_cern</class>
    <class kind="class">o2scl::inte_gauss_cern</class>
    <class kind="class">o2scl::inte_gen</class>
    <class kind="class">o2scl::inte_gsl</class>
    <class kind="class">o2scl::inte_hcubature</class>
    <class kind="class">o2scl::inte_kronrod_gsl</class>
    <class kind="class">o2scl::inte_multi</class>
    <class kind="class">o2scl::inte_pcubature</class>
    <class kind="class">o2scl::inte_qag_gsl</class>
    <class kind="class">o2scl::inte_qagi_gsl</class>
    <class kind="class">o2scl::inte_qagil_gsl</class>
    <class kind="class">o2scl::inte_qagiu_gsl</class>
    <class kind="class">o2scl::inte_qags_gsl</class>
    <class kind="class">o2scl::inte_qawc_gsl</class>
    <class kind="class">o2scl::inte_qawf_gsl_cos</class>
    <class kind="class">o2scl::inte_qawf_gsl_sin</class>
    <class kind="class">o2scl::inte_qawo_gsl_cos</class>
    <class kind="class">o2scl::inte_qawo_gsl_sin</class>
    <class kind="class">o2scl::inte_qaws_gsl</class>
    <class kind="class">o2scl::inte_qng_gsl</class>
    <class kind="class">o2scl::inte_singular_gsl</class>
    <class kind="class">o2scl::inte_transform_gsl</class>
    <class kind="class">o2scl::inte_workspace_gsl</class>
    <class kind="class">o2scl::interp</class>
    <class kind="class">o2scl::interp2_base</class>
    <class kind="class">o2scl::interp2_direct</class>
    <class kind="class">o2scl::interp2_eqi</class>
    <class kind="class">o2scl::interp2_neigh</class>
    <class kind="class">o2scl::interp2_planar</class>
    <class kind="class">o2scl::interp2_seq</class>
    <class kind="class">o2scl::interp_akima</class>
    <class kind="class">o2scl::interp_akima_peri</class>
    <class kind="class">o2scl::interp_array</class>
    <class kind="class">o2scl::interp_array_vec</class>
    <class kind="class">o2scl::interp_base</class>
    <class kind="class">o2scl::interp_cspline</class>
    <class kind="class">o2scl::interp_cspline_peri</class>
    <class kind="class">o2scl::interp_krige</class>
    <class kind="class">o2scl::interp_linear</class>
    <class kind="class">o2scl::interp_monotonic</class>
    <class kind="class">o2scl::interp_steffen</class>
    <class kind="class">o2scl::interp_vec</class>
    <class kind="class">o2scl::interpm_idw</class>
    <class kind="class">o2scl::interpm_krige</class>
    <class kind="class">o2scl::interpm_krige_nn</class>
    <class kind="class">o2scl::jacobian</class>
    <class kind="class">o2scl::jacobian_exact</class>
    <class kind="class">o2scl::jacobian_gsl</class>
    <class kind="class">o2scl::lib_settings_class</class>
    <class kind="class">o2scl::matrix_column_gen</class>
    <class kind="class">o2scl::matrix_row_gen</class>
    <class kind="class">o2scl::mcarlo</class>
    <class kind="class">o2scl::mcarlo_miser</class>
    <class kind="class">o2scl::mcarlo_plain</class>
    <class kind="class">o2scl::mcarlo_vegas</class>
    <class kind="class">o2scl::mcmc_base</class>
    <class kind="class">o2scl::mcmc_cli</class>
    <class kind="class">o2scl::mcmc_mpi</class>
    <class kind="class">o2scl::mcmc_para_base</class>
    <class kind="class">o2scl::mcmc_para_table</class>
    <class kind="class">o2scl::mcmc_table</class>
    <class kind="class">o2scl::min_base</class>
    <class kind="class">o2scl::min_bkt_base</class>
    <class kind="class">o2scl::min_brent_boost</class>
    <class kind="class">o2scl::min_brent_gsl</class>
    <class kind="class">o2scl::min_cern</class>
    <class kind="class">o2scl::min_de_base</class>
    <class kind="class">o2scl::min_quad_golden</class>
    <class kind="class">o2scl::mm_funct_strings</class>
    <class kind="class">o2scl::mmin_base</class>
    <class kind="class">o2scl::mmin_bfgs2</class>
    <class kind="class">o2scl::mmin_conf</class>
    <class kind="class">o2scl::mmin_conp</class>
    <class kind="class">o2scl::mmin_constr</class>
    <class kind="class">o2scl::mmin_constr_gencan</class>
    <class kind="class">o2scl::mmin_constr_pgrad</class>
    <class kind="class">o2scl::mmin_constr_spg</class>
    <class kind="class">o2scl::mmin_fix_params</class>
    <class kind="class">o2scl::mmin_gsl_base</class>
    <class kind="class">o2scl::mmin_linmin_gsl</class>
    <class kind="class">o2scl::mmin_simp2</class>
    <class kind="class">o2scl::mmin_wrap_gsl</class>
    <class kind="class">o2scl::mmin_wrapper_gsl</class>
    <class kind="class">o2scl::mroot</class>
    <class kind="class">o2scl::mroot_broyden</class>
    <class kind="class">o2scl::mroot_cern</class>
    <class kind="class">o2scl::mroot_hybrids</class>
    <class kind="class">o2scl::mroot_hybrids_arma_qr_econ</class>
    <class kind="class">o2scl::mroot_hybrids_base</class>
    <class kind="class">o2scl::mroot_hybrids_eigen</class>
    <class kind="class">o2scl::multi_funct_strings</class>
    <class kind="class">o2scl::ode_bsimp_gsl</class>
    <class kind="class">o2scl::ode_bv_mshoot</class>
    <class kind="class">o2scl::ode_bv_multishoot</class>
    <class kind="class">o2scl::ode_bv_shoot</class>
    <class kind="class">o2scl::ode_bv_shoot_grid</class>
    <class kind="class">o2scl::ode_bv_solve</class>
    <class kind="class">o2scl::ode_control_gsl</class>
    <class kind="class">o2scl::ode_funct_strings</class>
    <class kind="class">o2scl::ode_it_solve</class>
    <class kind="class">o2scl::ode_iv_solve</class>
    <class kind="class">o2scl::ode_iv_table</class>
    <class kind="class">o2scl::ode_rk8pd_gsl</class>
    <class kind="class">o2scl::ode_rkck_gsl</class>
    <class kind="class">o2scl::ode_rkf45_gsl</class>
    <class kind="class">o2scl::ode_step</class>
    <class kind="class">o2scl::permutation</class>
    <class kind="class">o2scl::pinside</class>
    <class kind="class">o2scl::poly_complex</class>
    <class kind="class">o2scl::poly_real_coeff</class>
    <class kind="class">o2scl::poly_real_coeff_gsl</class>
    <class kind="class">o2scl::polylog</class>
    <class kind="class">o2scl::prob_cond_mdim</class>
    <class kind="class">o2scl::prob_cond_mdim_gaussian</class>
    <class kind="class">o2scl::prob_cond_mdim_invar</class>
    <class kind="class">o2scl::prob_cond_mdim_rand_walk</class>
    <class kind="class">o2scl::prob_dens_frange</class>
    <class kind="class">o2scl::prob_dens_func</class>
    <class kind="class">o2scl::prob_dens_gaussian</class>
    <class kind="class">o2scl::prob_dens_hist</class>
    <class kind="class">o2scl::prob_dens_lognormal</class>
    <class kind="class">o2scl::prob_dens_mdim</class>
    <class kind="class">o2scl::prob_dens_mdim_factor</class>
    <class kind="class">o2scl::prob_dens_mdim_gaussian</class>
    <class kind="class">o2scl::prob_dens_mdim_gproc</class>
    <class kind="class">o2scl::prob_dens_positive</class>
    <class kind="class">o2scl::prob_dens_uniform</class>
    <class kind="class">o2scl::quadratic_complex</class>
    <class kind="class">o2scl::quadratic_complex_std</class>
    <class kind="class">o2scl::quadratic_real</class>
    <class kind="class">o2scl::quadratic_real_coeff</class>
    <class kind="class">o2scl::quadratic_real_coeff_gsl</class>
    <class kind="class">o2scl::quartic_complex</class>
    <class kind="class">o2scl::quartic_complex_simple</class>
    <class kind="class">o2scl::quartic_real</class>
    <class kind="class">o2scl::quartic_real_coeff</class>
    <class kind="class">o2scl::quartic_real_coeff_cern</class>
    <class kind="class">o2scl::quartic_real_gsl</class>
    <class kind="class">o2scl::quartic_real_gsl2</class>
    <class kind="class">o2scl::quartic_real_simple</class>
    <class kind="class">o2scl::rng_gsl</class>
    <class kind="class">o2scl::rng_gsl_uniform_real</class>
    <class kind="class">o2scl::root</class>
    <class kind="class">o2scl::root_bkt</class>
    <class kind="class">o2scl::root_bkt_cern</class>
    <class kind="class">o2scl::root_brent_gsl</class>
    <class kind="class">o2scl::root_cern</class>
    <class kind="class">o2scl::root_de</class>
    <class kind="class">o2scl::root_stef</class>
    <class kind="class">o2scl::root_toms748</class>
    <class kind="class">o2scl::search_vec</class>
    <class kind="class">o2scl::search_vec_ext</class>
    <class kind="class">o2scl::series_acc</class>
    <class kind="class">o2scl::smooth_gsl</class>
    <class kind="class">o2scl::table</class>
    <class kind="class">o2scl::table3d</class>
    <class kind="class">o2scl::table_units</class>
    <class kind="class">o2scl::tensor</class>
    <class kind="class">o2scl::tensor1</class>
    <class kind="class">o2scl::tensor2</class>
    <class kind="class">o2scl::tensor3</class>
    <class kind="class">o2scl::tensor4</class>
    <class kind="class">o2scl::tensor_grid</class>
    <class kind="class">o2scl::tensor_grid1</class>
    <class kind="class">o2scl::tensor_grid2</class>
    <class kind="class">o2scl::tensor_grid3</class>
    <class kind="class">o2scl::tensor_grid4</class>
    <class kind="class">o2scl::test_mgr</class>
    <class kind="class">o2scl::Token</class>
    <class kind="struct">o2scl::TokenBase</class>
    <class kind="class">o2scl::uniform_grid</class>
    <class kind="class">o2scl::uniform_grid_end</class>
    <class kind="class">o2scl::uniform_grid_end_width</class>
    <class kind="class">o2scl::uniform_grid_log_end</class>
    <class kind="class">o2scl::uniform_grid_log_end_width</class>
    <class kind="class">o2scl::uniform_grid_log_width</class>
    <class kind="class">o2scl::uniform_grid_width</class>
    <class kind="class">o2scl::uniform_prior</class>
    <class kind="class">o2scl::vec_index</class>
    <class kind="class">o2scl::vector_range_gen</class>
    <member kind="typedef">
      <type>std::function&lt; double(double)&gt;</type>
      <name>funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3d8b83e4be7e3a661c66cffd6b9d8a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; int(size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::vector&lt; double &gt; &amp;) &gt;</type>
      <name>mm_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a422958f46c53214be7016ee1744877b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; double(size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;)&gt;</type>
      <name>multi_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a64e3760cc91a574c24f98ba84eed7faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::queue&lt; TokenBase * &gt;</type>
      <name>TokenQueue_t</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a44162b7fb15edb6ced42e806982662cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; double(size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;, double)&gt;</type>
      <name>fit_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2b99cb726fbbf87acd8c76e84e7cd180</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; int(size_t, boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::vector&lt; double &gt; &amp;)&gt;</type>
      <name>grad_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad90e0b05aa00e237c0999c6b32869167</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; int(size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;, const boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::vector&lt; double &gt; &amp;)&gt;</type>
      <name>ool_hfunct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a52d118c7ec6a071c04fd3314d81b2b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; int(double, size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::vector&lt; double &gt; &amp;)&gt;</type>
      <name>ode_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aac0d728bf00540c8969b4dae2fd570ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; double(size_t, double, boost::numeric::ublas::matrix_row&lt; boost::numeric::ublas::matrix&lt; double &gt; &gt; &amp;)&gt;</type>
      <name>ode_it_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac4fc2fbca228be2e272b0ade909e7908</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; int(double, size_t, const boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::matrix&lt; double &gt; &amp;, boost::numeric::ublas::vector&lt; double &gt; &amp;) &gt;</type>
      <name>ode_jac_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a734077820d58969f583eb9d4fad5fd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; int(size_t, boost::numeric::ublas::vector&lt; double &gt; &amp;, size_t, boost::numeric::ublas::vector&lt; double &gt; &amp;, boost::numeric::ublas::matrix&lt; double &gt; &amp;) &gt;</type>
      <name>jac_funct</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a16d0b2b6b2fc4deeca3246f972324885</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>success</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a7a49055f35e1049fb8f9f9503e376ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gsl_failure</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ad43bd8e7f9f53d42468a5cd530ac58a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gsl_continue</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091aadf9413e528a745f21d902ab1d4a4748</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_edom</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a028a5927ddd574adb5a4e8811f818143</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_erange</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ab77536b4a30404e18f9acf0e079369d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_efault</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a6919adaeccdd52cc274dece43c23a868</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_einval</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ae2e00e6b4a62cdfd837800ebf432a4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_efailed</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091af2106aeda5cb343214ab48b970e14bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_efactor</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ac92c1f7e809a661a473a095964d8c5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_esanity</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a851475c2569709e276e806c3eb8711c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_enomem</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a5991eb81a32bf8eda9ef4f9a6ed773ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ebadfunc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a6fda744d5f22556dab072ba8ab5e6bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_erunaway</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a9f357cf36e3f2a7c779bdcf38d705ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_emaxiter</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ab584fb5ade7927daa81479472b2e0e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ezerodiv</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091af877429eb614cc8ed4ff779dbfb58f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ebadtol</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091afe3cc785622693df92c01146f34e5b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_etol</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a5d3c214c351d5c153937a5d900952ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eundrflw</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a4a2ce732fc4be4199eb889297137fec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eovrflw</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a316144f0ecd495ff828f981b8525e63c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eloss</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a97ee7c9625d56553acb1ddee6184c0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eround</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a72e98a7559e2ea051f85a35b29833c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ebadlen</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a48c93e5d7c1ca6d97e6c5f896a5e5362</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_enotsqr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a816751a23a538165fc7ab52de1e626a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_esing</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091adb2a9e20d68fa767ee4fc06b7e4fa995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ediverge</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a7b2c2d75344dff1c7f49f78e65729929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eunsup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091aa1eb232fdc25e667729c5b8ee9131e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eunimpl</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a42ca41e60f86e133b4dbb0ed682db423</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ecache</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a93f18cd46cafaa848e8ded0ebfbd085e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_etable</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a2106bfaacc4aa2dca8434857c03b6cb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_enoprog</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a6526a26915d946bdb8b85e260ed77032</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_enoprogj</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091af204473bf8219b53955bee23c082fb5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_etolf</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a8a531f6cd5416fa7d666e1c5458fbab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_etolx</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ab58c04a0046943dea976f65b7bac06b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_etolg</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a2e1ced97e708c24f5f592036b91b34d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eof</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a6932f484754e1f72f53b694489f9a9cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_enotfound</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a711ebe3ebe83e286a4948b26dec8b3a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_ememtype</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091ae1ff0072e3b2db55d97867127475b407</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_efilenotfound</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a32a60cc0ced87ca393f065a787900bb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_eindex</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a101edf49ff26757455f31d576d80d377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>exc_outsidecons</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a000e554ca357b4e493b12882f44ab091a634a31fbafbfc56516cc92990e418905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_linear</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78a255b406669c12ca79df6be9eb3d1ff96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_cspline</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78ac8a8e58a51faa593ec7e83f9b7fbca10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_cspline_peri</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78a113fe66b3dff1a5a5242d105c1cf5fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_akima</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78aabcee78c427348fb2b16bc979a98eaa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_akima_peri</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78a70f36f21cb8b54d713aea5a92763d11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_monotonic</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78aa6cfd6c2163d610c242dd9ceafc2af57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>itp_steffen</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51905d0a53bd5216ff6aaba6e8bf0f78ad29e9283c4dd30003fa7585f929775db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>tokType</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae0f6f533472442d0763060f6dcd53f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error_update</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a54576b609eccddacba07b5239c48ceec</anchor>
      <arglist>(int &amp;ret, int err)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_level_count</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa6f230f44998e0752367c07d9dc57247</anchor>
      <arglist>(double level, size_t n, vec_t &amp;x, vec2_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_find_level</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8455c1454e35a49c2cf3bc08c412b040</anchor>
      <arglist>(double level, size_t n, vec_t &amp;x, vec2_t &amp;y, std::vector&lt; double &gt; &amp;locs)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_linear</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a28a1470c475cea29e98a3daceeadd4b6</anchor>
      <arglist>(size_t n, vec_t &amp;x, vec2_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_invert_enclosed_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8d1724edc48b92ce7e3e6f877c35ff7e</anchor>
      <arglist>(double sum, size_t n, vec_t &amp;x, vec2_t &amp;y, double &amp;lev, int verbose=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_region_parint</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4f93d157d98b8fe992445c06b995a151</anchor>
      <arglist>(size_t n, vec_t &amp;x, vec2_t &amp;y, double frac, std::vector&lt; double &gt; &amp;locs, int verbose=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_bound_parint</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1a516926a4747a8661d90908705339ac</anchor>
      <arglist>(size_t n, vec_t &amp;x, vec2_t &amp;y, double frac, double &amp;low, double &amp;high)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>quadratic_extremum_x</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a514efbfa23d06e94bd7daf205ca03c0b</anchor>
      <arglist>(const data_t x1, const data_t x2, const data_t x3, const data_t y1, const data_t y2, const data_t y3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadratic_extremum_y_full</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adc1a3bcdf0c66bf7aff38e3a75764c2f</anchor>
      <arglist>(const data_t x1, const data_t x2, const data_t x3, const data_t y1, const data_t y2, const data_t y3, const data_t &amp;xmin, const data_t &amp;ymin, const data_t &amp;a, const data_t &amp;b, const data_t &amp;c, const data_t &amp;den)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>quadratic_extremum_y</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6d16293457c7a75922ac2794bfb5619e</anchor>
      <arglist>(const data_t x1, const data_t x2, const data_t x3, const data_t y1, const data_t y2, const data_t y3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadratic_extremum_xy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a37447f74dc14055228a0a72e8b524ac4</anchor>
      <arglist>(const data_t x1, const data_t x2, const data_t x3, const data_t y1, const data_t y2, const data_t y3, data_t &amp;x, data_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadratic_extremum_coeffs</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9534c7a2e881fde8d1dfa28d43a3a326</anchor>
      <arglist>(const data_t x1, const data_t x2, const data_t x3, const data_t y1, const data_t y2, const data_t y3, data_t &amp;a, data_t &amp;b, data_t &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8968e542fe7b86c353eb2efbd5a6eb58</anchor>
      <arglist>(std::ostream &amp;os, const permutation &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>constraint</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7cbe75c44704d17436a155d3bdd0c4ad</anchor>
      <arglist>(double x, double center, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cont_constraint</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1d066e73d46c910b5623671246b2c12d</anchor>
      <arglist>(double x, double center, double width, double height, double tightness=40.0, double exp_arg_limit=50.0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lower_bound</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad0dc0371a51a3a0ffe9c049c4c5b6a18</anchor>
      <arglist>(double x, double center, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cont_lower_bound</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9adb221a091098330c68d729ff214a56</anchor>
      <arglist>(double x, double center, double width, double height, double tightness=40.0, double exp_arg_limit=50.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad74e3d017246096a1f09c3028c1ed715</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5ba85478a00ad6bd9af0b1d405cae4d3</anchor>
      <arglist>(std::ostream &amp;os, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3b2661ac0976abc98ee87be00e9e0a1f</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7679a6fd90449f30b49344e32022a9a6</anchor>
      <arglist>(std::ostream &amp;os, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_2d_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a34809f0da2fc2653e4b102655c36c50f</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_2d_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2e4195bd40a6fe3612aa36a317163d28</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_err_fn</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a967ce342acd79cc9453c7697034dd443</anchor>
      <arglist>(const char *desc, const char *file, int line, int errnum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>fermi_function</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8a2c69ef08fca5a16ca41dfdebeaa310</anchor>
      <arglist>(double E, double mu, double T, double limit=40.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pipe_cmd_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a09b56a2b5f7a846d87868ec7d8088bdd</anchor>
      <arglist>(std::string cmd, std::string &amp;result, bool err_on_fail=true, int nmax=80)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pipe_cmd_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afada3607a1d3d633ee47366431768681</anchor>
      <arglist>(std::string cmd, int nmax=80)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>screenify</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aad3cb142933e460acba6694c6edcaa18</anchor>
      <arglist>(size_t nin, const string_arr_t &amp;in_cols, std::vector&lt; std::string &gt; &amp;out_cols, size_t max_size=80)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>count_words</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a321b38cc7488845a84187982917d4986</anchor>
      <arglist>(std::string str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_whitespace</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1c4b9ab50337c0fcd5df21b081f52f8d</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>binary_to_hex</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf7b38453474c1d54f7bc88e54a88261</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RGBtoHSV</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae9d5cb5c639803ef4add58f38ae2b2de</anchor>
      <arglist>(double r, double g, double b, double &amp;h, double &amp;s, double &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HSVtoRGB</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac5395cf1e49228ae74149a048be6472d</anchor>
      <arglist>(double h, double s, double v, double &amp;r, double &amp;g, double &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ptos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7308531665edce5919dd14311a9a40ff</anchor>
      <arglist>(void *p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>itos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a968e4143466c3aed25a6316847cbedef</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>szttos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae0ffc968ed86964c3222b2d8648e3ae9</anchor>
      <arglist>(size_t x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>btos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af75ca967a26913e32589568bf9a9bf6c</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>dtos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa55666c3656eff29a7099be05db41ef0</anchor>
      <arglist>(double x, int prec=6, bool auto_prec=false)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size_of_exponent</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a58ad04cc01625e33fb00301291117b50</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>dtos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8cffc44b54905f5274034086e87b645b</anchor>
      <arglist>(double x, std::ostream &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoi</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a223766b21432bafff14007a126fd40ba</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoi_nothrow</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a002a2b0e00e67eca082f1f154e593fbd</anchor>
      <arglist>(std::string s, int &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>stoszt</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a174b00b7e123a6db365adac2aedcdf6b</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoszt_nothrow</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aabf1a8d3ff6290e83309bd7c23ee8682</anchor>
      <arglist>(std::string s, size_t &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stob</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adadfa85e55a943113bc836a1631ceaf0</anchor>
      <arglist>(std::string s, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>stod</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7c4946400fc2e5f2c04403fb609b45ec</anchor>
      <arglist>(std::string s, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_minus_sign</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2afbd13cadbc6ac8c9bf69fa284bfb68</anchor>
      <arglist>(double *x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_number</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a98c17c6473daf7ac1d9062bf284b0c24</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>function_to_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab1571bf8025b44e55d12be6d5470b122</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ade45b50d37f9cb625a865f9176bcdf96</anchor>
      <arglist>(std::string str, std::vector&lt; std::string &gt; &amp;sv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewrap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a611de09c5a2931e19acaee4e8e2bfba2</anchor>
      <arglist>(std::string str, std::vector&lt; std::string &gt; &amp;sv, size_t ncol=79)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a02417d2b00aa005ff04574aa8c03bb34</anchor>
      <arglist>(const vec_t &amp;src, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8b8b22544b4fcae8f2647c674a8d4683</anchor>
      <arglist>(size_t N, const vec_t &amp;src, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8ade334b191ec197ea0d84667d8cc07a</anchor>
      <arglist>(mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af930eca46d1cfd5d2cf30b344e8b1793</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf219302bef071227fc2366a17c9807e</anchor>
      <arglist>(mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7b4e73c788f3abed3cade57f464e610e</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abdd9e041d8c92abd474286b95cade743</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6110137ef5e62e52f4b07538e99db63f</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d592ba1a2c4f39d903c1d2d4233962b</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a791530a87d122c8ecf926a4f35bf590a</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a12a94c2604b3bb6d9fa18b84c0d8e8a4</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51246b21a0abb7b1c455f9f8af016257</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aecfc647a653026041df7f5c25e569c7c</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a16b85cce1af037e6f239dee75db3cfd6</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abd1175d497c4131fe04f019fee043614</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a28ac2bf6bf0f45ecd892066bf19afe88</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e104ce58de7f972e6dfc0a4b12d37b5</anchor>
      <arglist>(size_t N, vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a873935dc6a2855f6013b2f2e15553c41</anchor>
      <arglist>(vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a32ff5d327fd44b4267f7912c50b393d1</anchor>
      <arglist>(size_t N, vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae4dc3da53e15838324d6f8ecce7868d9</anchor>
      <arglist>(vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6b776c86146387aabf0608faadf5ecdc</anchor>
      <arglist>(vec_t &amp;v, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7f34bc39958141634896828ccbad8ee3</anchor>
      <arglist>(vec_t &amp;v, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aae5f940899bda5c7cad74222537c2786</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;v1, mat2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acdf07cebc59be91f5ba1dd21427cfda3</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;m1, mat2_t &amp;m2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f8b47529c133ab2c93dbd454c69a2d1</anchor>
      <arglist>(mat_t &amp;m, size_t i1, size_t j1, size_t i2, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a25c04833b162adba8d7ebb7d1052fc6c</anchor>
      <arglist>(mat_t &amp;m, size_t i1, size_t j1, size_t i2, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_cols</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4d89d5f130917b6de091f933c4cbb576</anchor>
      <arglist>(size_t M, mat_t &amp;m, size_t j1, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_cols_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab2458563fabbe1f3bc45281d85ac24a9</anchor>
      <arglist>(size_t M, mat_t &amp;m, size_t j1, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_rows</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7a3db5aaf404a9346461562f4b94bebc</anchor>
      <arglist>(size_t N, mat_t &amp;m, size_t i1, size_t i2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_rows_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9fb14871ab6f495c82e39afed6555b44</anchor>
      <arglist>(size_t N, mat_t &amp;m, size_t i1, size_t i2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_downheap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a590219137f7b0f2f7d5c0b66e875fbde</anchor>
      <arglist>(vec_t &amp;data, size_t n, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a35e1d6ca3c938c9e11922bac862a9ea8</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_index_downheap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aebfca331d7cb98960504fb04939d8e29</anchor>
      <arglist>(size_t N, const vec_t &amp;data, vec_size_t &amp;order, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a59db05b504255c1db9b56564c1d5171b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, vec_size_t &amp;order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a962a787042c35b410ca98da754f396ba</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adc9b307111fc7f4cfbfb3d3eadd5796f</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_t &amp;smallest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4712c3a5782c1879f53a940535f6df37</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_t &amp;smallest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a02dff2a07712e4c82b9dcb9b5c5237ff</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa41b6eb354683086623a3af2ecf47e08</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_largest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a910ca6b7e9211703645e622e6a426ac8</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_t &amp;largest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_largest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acc0afa96f770e47b4a2c66dc6d19c894</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_t &amp;largest)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e091cec30eebfedd2bc6a746c2b4334</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf495cc21664cdbb43ce41dbb1939792</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4e8502232fa819c09a92df065170bd1d</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7ac2e5836b263416c7501cd0aec96f82</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t &amp;index, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0459bb607004c255b5bf78bf37629015</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6da2b423e652ea59625cba6e708dec61</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac02f2901f5037cf7d928eab29be79b7a</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6c5635c7850e3b25e2349ac2c0474eb8</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t &amp;index, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>addffe66f62b1e24285d67e8b1bb6ceee</anchor>
      <arglist>(size_t n, vec_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3e753be737bdeaa751d3e7969c0cbda9</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t &amp;ix_min, size_t &amp;ix_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4c3cc22f9d2cb4e4ce34d955d9bbd169</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t &amp;ix_min, data_t &amp;min, size_t &amp;ix_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a264705af22d140f37b30c76f9ec5c850</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3f81b9baf1cb13a1c23becdaf19a6faf</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad_loc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa3a282dd58a9a3c64381b3eb3a501dcc</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4312f3fbe12b124cece5fb777bbf30f2</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a73966881351e95480835d94b565e8b5a</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad_loc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a030f1123ad32d3fa33f9222973fdb0d8</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a755b769f84643cfb804476380fec84a6</anchor>
      <arglist>(size_t m, const size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3aa80f6d4ec775ee12ec8305fdf98524</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max_value_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab063719a1d776103deb6ed2827057d24</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad1d8600ba911a7dadcea14482a017932</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a254ad183db60b84c247f86a5b4b08654</anchor>
      <arglist>(const mat_t &amp;data, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae3d757d4dc0fd020183b54c0301f07da</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a451c9a109a7527fb5617ef5961233384</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min_value_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a56b281b2412cc876fe5c395670dd2299</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a01968adab44fc20c8ece2b6bb0f77962</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4734664ec871c86a87c2d5ff60ba99b9</anchor>
      <arglist>(const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adccb49e43daed33897500de6a649333d</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a136653db5fa08c1061b6539c4606fdb2</anchor>
      <arglist>(const mat_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a03f2ceb1c4a3ed6761f66c12009d97ac</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3f64004b4ce82381a95ebfe539d9635d</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ade159bd27be1da8e1fc5b285537b18a0</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9992b6d3a4d51a74baa869fdc5654c78</anchor>
      <arglist>(size_t n, const vec_t &amp;x, double x0)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa8883ccd1efc961db614d025882264e4</anchor>
      <arglist>(const vec_t &amp;x, double x0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad59087b3d8c1a838e4279e54e373f471</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;A, double x0, size_t &amp;i, size_t &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae5cc6c08d9a9d131af18b46b6aeeee73</anchor>
      <arglist>(const mat_t &amp;A, double x0, size_t &amp;i, size_t &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch_inc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad535d0e50ddc8a34739b39ea66516f52</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch_dec</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab32ca9cb4847fd24f129b97afbd03aa0</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab80f56ba9e5fa1c4f5fc5719433565bd</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aba4bbf78c02d79ceba94d54ea284f47d</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9bf42ebb5ed415c81d2b568c1f5c1d38</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a82c11fca2e8b00c00e72c363dd892bc8</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sum_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af1cb847a613d4d38b45aee949b060fa2</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sum_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4bcc389b6e02e42af921e9d67a2ac488</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_norm</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aef3d50bf6921fd3b8f3080181bc3a744</anchor>
      <arglist>(size_t n, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_norm</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a752b88f2520691cc6c5232111f547c55</anchor>
      <arglist>(const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_norm_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a80b0f747da373d2a7a2e7da1149bd80b</anchor>
      <arglist>(size_t n, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_norm_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aeee678d03e5acdecb608cd119c9df825</anchor>
      <arglist>(const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_set_all</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a22bcebaf5ffc9f8164f2fc42ef9e8499</anchor>
      <arglist>(size_t N, vec_t &amp;src, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_set_all</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9ce48b3aed0ca1f7f60d29d5ea0d173a</anchor>
      <arglist>(vec_t &amp;src, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy_jackknife</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a75714fb3f4e48a8b206ff203159711eb</anchor>
      <arglist>(const vec_t &amp;src, size_t iout, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_rotate</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a76a955210fe82397637ef30e4e7f5a29</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab2547005690dd0e65a16f17dd479320c</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a50944f84816903639f06377d04bbbd66</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a94d0e885f82f0f7a1cc20a9105eb0f42</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a291edca9e836e1def1f3fb08325c0a18</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mat_row_t</type>
      <name>matrix_row</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae00ac0006773b47946a7ee79f3c587d0</anchor>
      <arglist>(mat_t &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>mat_column_t</type>
      <name>matrix_column</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3e9129657cc37ba282ee22e4fd00401e</anchor>
      <arglist>(mat_t &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afd4bc1b029d2511453101e70b220c2fc</anchor>
      <arglist>(std::ostream &amp;os, size_t n, const vec_t &amp;v, bool endline=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6ff07983c873315033cc9b859fca4636</anchor>
      <arglist>(std::ostream &amp;os, const vec_t &amp;v, bool endline=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_grid</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d642aa06be8ece1c80f237f93b01546</anchor>
      <arglist>(uniform_grid&lt; data_t &gt; g, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_set_identity</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae8795a06ae0f4f0eaa779e3fd39f61bb</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>dat_t *</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5c36a3ae58644a7ca409d9899d0c5706</anchor>
      <arglist>(dat_t *v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const dat_t *</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac209e8d3b22174ce5171d49f7088df43</anchor>
      <arglist>(const dat_t *v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4ce8f5d361dd82c7a78e3e1809ae28c1</anchor>
      <arglist>(boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a074521a3971eda03eb1e3b1fe9c5e795</anchor>
      <arglist>(boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aefcd7f01dc4b02216fa8b76e43e1528d</anchor>
      <arglist>(const boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af42f9caeb4a1e3c5c1cc61ad1bf99bb5</anchor>
      <arglist>(boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa8e9549380a13d1a78adbfdad2b95035</anchor>
      <arglist>(boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad5efc04e610729a7c29a1cc6515770d0</anchor>
      <arglist>(const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad2a68a37e9ba84f61cb623ff5642a6ec</anchor>
      <arglist>(const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abdffd4f4a2cdd5f54bbee8803f049185</anchor>
      <arglist>(std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7c536d4c9ad20d12adfbc9ee870077b7</anchor>
      <arglist>(const std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6d127958c4272900d129cfcb097922e8</anchor>
      <arglist>(std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>vector_range_gen&lt; vec_t &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6ea1545cde5f531af67a7deb24c761bd</anchor>
      <arglist>(vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4f82de8ac5cde886cb0a64642d97ce63</anchor>
      <arglist>(vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3592261c902618f3a9c32dc18243e141</anchor>
      <arglist>(const vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1a2e0f764d5c7fced80d8fbcebd26c71</anchor>
      <arglist>(const const_vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; dat_t &gt;</type>
      <name>vector_range_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aea3baa635c82e72919d3ec0d3c957f59</anchor>
      <arglist>(const std::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; dat_t &gt;</type>
      <name>vector_range_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa69306863a1359ed692855e4fc4e4000</anchor>
      <arglist>(const std::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0f52ef1f2196bfdc7f06a7229a1970f6</anchor>
      <arglist>(const arma::mat &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afd453895c4328fa1bfc09063d1bc186c</anchor>
      <arglist>(const arma::mat &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>arma::subview_row&lt; double &gt;</type>
      <name>matrix_row&lt; arma::mat, arma::subview_row&lt; double &gt; &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abcb2c0f0e2963e3016d8856e51d3af9c</anchor>
      <arglist>(arma::mat &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>arma::subview_col&lt; double &gt;</type>
      <name>matrix_column&lt; arma::mat, arma::subview_col&lt; double &gt; &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad59e4f8e12b2d76089bea25feeca45d9</anchor>
      <arglist>(arma::mat &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a661103a085b6e52f758aee8ccd37bc84</anchor>
      <arglist>(const Eigen::MatrixXd &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9510690f4dedea6183746bc891230de4</anchor>
      <arglist>(const Eigen::MatrixXd &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::MatrixXd::RowXpr</type>
      <name>matrix_row&lt; Eigen::MatrixXd, Eigen::MatrixXd::RowXpr &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a242ee88fabfddd0415ea9faeb376a0b4</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::MatrixXd::ColXpr</type>
      <name>matrix_column&lt; Eigen::MatrixXd, Eigen::MatrixXd::ColXpr &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab79db31213dfc4dad3fc7486b662f229</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_threept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a62c773774ef32755f6945fcfafef9c2f</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_threept_tap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a102faf254e0f8517a900210f31bb6268</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_fivept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8cd96d73bfe6fd075a3ca2ad8c310a91</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_fivept_tap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a56ea6814a9b84b88a12697658c4ead9b</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1fe7ce540f4accd4cc6df485650268a3</anchor>
      <arglist>(size_t n, ovec_t &amp;v, vec2_t &amp;dv, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a28fc6c03e8111e563ad96aa484ad02cc</anchor>
      <arglist>(size_t n, vec_t &amp;vx, vec2_t &amp;vy, vec3_t &amp;dv, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_trap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9a2eea92100f61a87efdc1d565573249</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_threept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3a843a4294295b0fe282300a4f66884a</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_extended4</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a525f0f08bc58541832af96cf5a4662e0</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_durand</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae45c98b2ff9f07ec33a56400c89b49ec</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_extended8</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af495c0a7752e70f1eb852bb0aea417de</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac8b81f9b2828f02573f2cb674adfeb67</anchor>
      <arglist>(size_t n, ovec_t &amp;v, size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9039b8887a88a6d259e5200ac783d263</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5ed4cf6ed870b578794a085b2f142811</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a25b01c01b0a95c710a76021c1cea0090</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a468efe33ff1acc5e1c5fc88d91cc2a30</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a32fa77b580428db64127f179e2cb8b61</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6e0c5be2399256a7cd3f559fba853abe</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae04c9e635187120d5df32153d33793a8</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a65691df6ec02f523e4389ac165b3012a</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a26a9dafb811ea69e76d0cc054551c309</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a33bf177e88b7e3c87f838469736e50b7</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a52d34ec959f53ce4d4616ae19c80242e</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab039d9dc7560d67af104450ca19420ba</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a788da9afcbe52c49e3034293cd4c6a0d</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac0be129fee9961223c287215694be2aa</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa56a6d0efbf1ebdcfa4322a3a0bfa4ec</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a456abc6ce504a3b1c47974e4dfe86f11</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a26f14d05845a86e572193e579f81f0c9</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a69e809900a9a236f4578148415859830</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae9ff0a054e0adcc5094f6c74fd970ece</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f8958d6e76a466a45960f797d0934f5</anchor>
      <arglist>(const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51053ed4567d8278db980fd2c0238d37</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5a2b51691501e6b11bc0fe04b488d9fd</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0512bc6e59d6ba4a0ffd7f76a05438f1</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afc058d49fda2251ddcf7e7b33d7e570d</anchor>
      <arglist>(const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a120cb8596b7e3253bd3d457f488741d7</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a937e7c576bf8d5ef31939fceb2f44cbc</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a29d508067691e4f8ce13803ac2035047</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa702ce60cae7139b309d11c38a81815d</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7088d981adbd1533ad2f45f3f5b61368</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1b0c4c61f8e0c2100790810f43658ca3</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e6e2fbae681ce8fe5502a6e3e7ddbf9</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t k, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9b81207ddb9c420e4f72359ce12ed6fb</anchor>
      <arglist>(const vec_t &amp;data, size_t k, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5c2f867f85c0c893544e34cc901f4b37</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5fa5e772c61cd2a2775fc491bcb4bdfa</anchor>
      <arglist>(const vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a46251eac7ba6423978e6abe630169aea</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2, double mean1, double mean2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad6f92f417d19dd6fbafb57e1288f18cb</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2, double mean1, double mean2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1629cb68736fca0461fa548447614a5c</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ada7be2b6ee08c365d1b911ce7a6735d2</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_correlation</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6a7e5bffe045f7449e6c803968720c4a</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_correlation</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a31c821331c50254070dd167d56cac299</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_pvariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac902edbd0a73d6a51b1f1d308b70a88e</anchor>
      <arglist>(size_t n1, const vec_t &amp;data1, size_t n2, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_pvariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6029f0c45c550e0a46256a320c4815fc</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_quantile_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0e62a8e50b224a15e87174c9702675e6</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_quantile_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d800190c0b2e95eb994c95fa5d89904</anchor>
      <arglist>(const vec_t &amp;data, const double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_median_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a10ff3da3200154c7d3dabdde2fb4bdb8</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_median_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a35211ab2475763f139fd9d9724ef8d42</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_chi_squared</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6d7c8ad3861fdf5efb8d5fe0e367d8d8</anchor>
      <arglist>(size_t n, const vec_t &amp;obs, const vec2_t &amp;exp, const vec3_t &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_chi_squared</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6f463ade721bdbddfb6a842dd89d22da</anchor>
      <arglist>(const vec_t &amp;obs, const vec2_t &amp;exp, const vec3_t &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_scott</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8e715f1e636912085e91e460b0d22a4d</anchor>
      <arglist>(size_t n, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_scott</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa12ad4877c8debadabd92a91df0a5350</anchor>
      <arglist>(const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sorted_quantile</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad17d794aea92cef56a60798a88eb4c38</anchor>
      <arglist>(size_t n, const vec_t &amp;v, double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_freedman</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a298803331b28f5b3ecb91689e478123e</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_freedman</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac699a9c2003c7aa4b145d59174f70ae2</anchor>
      <arglist>(vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e7cf6bbb09e9323a1817d113e5fc428</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adadd9d58a8905e3e663314799c9f74bb</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_factor</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a392ebdf3e97d1564863cadc69dd9e4f2</anchor>
      <arglist>(size_t n, const vec_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_factor</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a77f6a7fae8aed493d6f167590bb01fe8</anchor>
      <arglist>(const vec_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae061c1b6a4a3bfcdf20615e065c02708</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6b34852828f6f097312274d55cf90923</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2d1278f53704ca4b2619a4bc39cf3c10</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab40e03c0b3d2aef852203848b7b6cd15</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a45845be10ec25f6727ab837ed492ed4f</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adf0467a8810d63b9d517568d61aff58b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad923a2a804221d762610f2b5eb7ffe04</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2, const vec3_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae15c628654db2f2866b46a0132864508</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2, const vec3_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a375d3a056d02d2c70662db60a5cfd019</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2c3454a30cba5f3d9eb5e568735abfce</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a69afc4a8bced753baa5058fd58e8a9b5</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af72357d2fd030655aaa69a2e0a2f769e</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5509fab4f6a937d4d2807b991eea619f</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6c87191b765247b2b0f69e5894f15bd0</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abe78b7efb9f8896e5ce6a356d54f375b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a42137830d5ee72152d8907bb5abf0273</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e01e0d8f126a2b2e3beeb6443269f3b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e57edd9e8c168ff8a8020e5be3b6747</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a96632b85d74ea1672b11195f895dfe97</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad44e4ae6f12d173676355ff1c5375ab8</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a235274cf25437069d908a4cb78385dfe</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4881ac69e9f35ca4443cd8fdad7e4b7b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac3ef3add1ba5583c5cc25e82c832167b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a263aacc5ccf56f2fde6f45ac26d5460b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7f4bb3af27a4e0ed27ae8600cf030836</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abc576e7fe7a6574fc5c18941be9177cc</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a890c5bb163fd79181e87158b64250591</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a372f90023cb8fb5e0e862eb17ec55767</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f9e1c7ed7bf66d976166f3449d1f164</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a461f4e4bee778fb3f2b580c2002a7313</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="variable">
      <type>err_hnd_type *</type>
      <name>err_hnd</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adcd60e45e495084dda3ed6b6d81609dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>err_hnd_gsl</type>
      <name>alt_err_hnd</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4e88f03beb8a6bee57ce1cc67fb003e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>err_hnd_cpp</type>
      <name>def_err_hnd</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adb46f38d30aa221bb7d5bca3dfc7bb92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lib_settings_class</type>
      <name>o2scl_settings</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d992c6663b22309673c22009e44a942</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad74e3d017246096a1f09c3028c1ed715</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5ba85478a00ad6bd9af0b1d405cae4d3</anchor>
      <arglist>(std::ostream &amp;os, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3b2661ac0976abc98ee87be00e9e0a1f</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>matrix_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7679a6fd90449f30b49344e32022a9a6</anchor>
      <arglist>(std::ostream &amp;os, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_2d_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a34809f0da2fc2653e4b102655c36c50f</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_2d_trans_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2e4195bd40a6fe3612aa36a317163d28</anchor>
      <arglist>(std::ostream &amp;os, size_t nrows, size_t ncols, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_err_fn</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a967ce342acd79cc9453c7697034dd443</anchor>
      <arglist>(const char *desc, const char *file, int line, int errnum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>fermi_function</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8a2c69ef08fca5a16ca41dfdebeaa310</anchor>
      <arglist>(double E, double mu, double T, double limit=40.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pipe_cmd_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a09b56a2b5f7a846d87868ec7d8088bdd</anchor>
      <arglist>(std::string cmd, std::string &amp;result, bool err_on_fail=true, int nmax=80)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pipe_cmd_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afada3607a1d3d633ee47366431768681</anchor>
      <arglist>(std::string cmd, int nmax=80)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>screenify</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aad3cb142933e460acba6694c6edcaa18</anchor>
      <arglist>(size_t nin, const string_arr_t &amp;in_cols, std::vector&lt; std::string &gt; &amp;out_cols, size_t max_size=80)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>count_words</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a321b38cc7488845a84187982917d4986</anchor>
      <arglist>(std::string str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_whitespace</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1c4b9ab50337c0fcd5df21b081f52f8d</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>binary_to_hex</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf7b38453474c1d54f7bc88e54a88261</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RGBtoHSV</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae9d5cb5c639803ef4add58f38ae2b2de</anchor>
      <arglist>(double r, double g, double b, double &amp;h, double &amp;s, double &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HSVtoRGB</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac5395cf1e49228ae74149a048be6472d</anchor>
      <arglist>(double h, double s, double v, double &amp;r, double &amp;g, double &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ptos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7308531665edce5919dd14311a9a40ff</anchor>
      <arglist>(void *p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>itos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a968e4143466c3aed25a6316847cbedef</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>szttos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae0ffc968ed86964c3222b2d8648e3ae9</anchor>
      <arglist>(size_t x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>btos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af75ca967a26913e32589568bf9a9bf6c</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>dtos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa55666c3656eff29a7099be05db41ef0</anchor>
      <arglist>(double x, int prec=6, bool auto_prec=false)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size_of_exponent</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a58ad04cc01625e33fb00301291117b50</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>dtos</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8cffc44b54905f5274034086e87b645b</anchor>
      <arglist>(double x, std::ostream &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoi</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a223766b21432bafff14007a126fd40ba</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoi_nothrow</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a002a2b0e00e67eca082f1f154e593fbd</anchor>
      <arglist>(std::string s, int &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>stoszt</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a174b00b7e123a6db365adac2aedcdf6b</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stoszt_nothrow</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aabf1a8d3ff6290e83309bd7c23ee8682</anchor>
      <arglist>(std::string s, size_t &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stob</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adadfa85e55a943113bc836a1631ceaf0</anchor>
      <arglist>(std::string s, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>stod</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7c4946400fc2e5f2c04403fb609b45ec</anchor>
      <arglist>(std::string s, bool err_on_fail=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_minus_sign</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2afbd13cadbc6ac8c9bf69fa284bfb68</anchor>
      <arglist>(double *x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_number</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a98c17c6473daf7ac1d9062bf284b0c24</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>function_to_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab1571bf8025b44e55d12be6d5470b122</anchor>
      <arglist>(std::string s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split_string</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ade45b50d37f9cb625a865f9176bcdf96</anchor>
      <arglist>(std::string str, std::vector&lt; std::string &gt; &amp;sv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewrap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a611de09c5a2931e19acaee4e8e2bfba2</anchor>
      <arglist>(std::string str, std::vector&lt; std::string &gt; &amp;sv, size_t ncol=79)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a02417d2b00aa005ff04574aa8c03bb34</anchor>
      <arglist>(const vec_t &amp;src, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8b8b22544b4fcae8f2647c674a8d4683</anchor>
      <arglist>(size_t N, const vec_t &amp;src, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8ade334b191ec197ea0d84667d8cc07a</anchor>
      <arglist>(mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af930eca46d1cfd5d2cf30b344e8b1793</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf219302bef071227fc2366a17c9807e</anchor>
      <arglist>(mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7b4e73c788f3abed3cade57f464e610e</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src, mat2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abdd9e041d8c92abd474286b95cade743</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_transpose</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6110137ef5e62e52f4b07538e99db63f</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d592ba1a2c4f39d903c1d2d4233962b</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a791530a87d122c8ecf926a4f35bf590a</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a12a94c2604b3bb6d9fa18b84c0d8e8a4</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51246b21a0abb7b1c455f9f8af016257</anchor>
      <arglist>(mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aecfc647a653026041df7f5c25e569c7c</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matrix_is_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a16b85cce1af037e6f239dee75db3cfd6</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_lower</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abd1175d497c4131fe04f019fee043614</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_make_upper</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a28ac2bf6bf0f45ecd892066bf19afe88</anchor>
      <arglist>(size_t m, size_t n, mat_t &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e104ce58de7f972e6dfc0a4b12d37b5</anchor>
      <arglist>(size_t N, vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a873935dc6a2855f6013b2f2e15553c41</anchor>
      <arglist>(vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a32ff5d327fd44b4267f7912c50b393d1</anchor>
      <arglist>(size_t N, vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae4dc3da53e15838324d6f8ecce7868d9</anchor>
      <arglist>(vec_t &amp;v1, vec2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6b776c86146387aabf0608faadf5ecdc</anchor>
      <arglist>(vec_t &amp;v, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7f34bc39958141634896828ccbad8ee3</anchor>
      <arglist>(vec_t &amp;v, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aae5f940899bda5c7cad74222537c2786</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;v1, mat2_t &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acdf07cebc59be91f5ba1dd21427cfda3</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;m1, mat2_t &amp;m2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f8b47529c133ab2c93dbd454c69a2d1</anchor>
      <arglist>(mat_t &amp;m, size_t i1, size_t j1, size_t i2, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a25c04833b162adba8d7ebb7d1052fc6c</anchor>
      <arglist>(mat_t &amp;m, size_t i1, size_t j1, size_t i2, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_cols</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4d89d5f130917b6de091f933c4cbb576</anchor>
      <arglist>(size_t M, mat_t &amp;m, size_t j1, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_cols_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab2458563fabbe1f3bc45281d85ac24a9</anchor>
      <arglist>(size_t M, mat_t &amp;m, size_t j1, size_t j2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_rows</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7a3db5aaf404a9346461562f4b94bebc</anchor>
      <arglist>(size_t N, mat_t &amp;m, size_t i1, size_t i2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_swap_rows_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9fb14871ab6f495c82e39afed6555b44</anchor>
      <arglist>(size_t N, mat_t &amp;m, size_t i1, size_t i2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_downheap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a590219137f7b0f2f7d5c0b66e875fbde</anchor>
      <arglist>(vec_t &amp;data, size_t n, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a35e1d6ca3c938c9e11922bac862a9ea8</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_index_downheap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aebfca331d7cb98960504fb04939d8e29</anchor>
      <arglist>(size_t N, const vec_t &amp;data, vec_size_t &amp;order, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a59db05b504255c1db9b56564c1d5171b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, vec_size_t &amp;order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_sort_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a962a787042c35b410ca98da754f396ba</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adc9b307111fc7f4cfbfb3d3eadd5796f</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_t &amp;smallest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4712c3a5782c1879f53a940535f6df37</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_t &amp;smallest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a02dff2a07712e4c82b9dcb9b5c5237ff</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_smallest_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa41b6eb354683086623a3af2ecf47e08</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_size_t &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_largest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a910ca6b7e9211703645e622e6a426ac8</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k, vec_t &amp;largest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_largest</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acc0afa96f770e47b4a2c66dc6d19c894</anchor>
      <arglist>(vec_t &amp;data, size_t k, vec_t &amp;largest)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e091cec30eebfedd2bc6a746c2b4334</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>acf495cc21664cdbb43ce41dbb1939792</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4e8502232fa819c09a92df065170bd1d</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7ac2e5836b263416c7501cd0aec96f82</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t &amp;index, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0459bb607004c255b5bf78bf37629015</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6da2b423e652ea59625cba6e708dec61</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac02f2901f5037cf7d928eab29be79b7a</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6c5635c7850e3b25e2349ac2c0474eb8</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t &amp;index, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>addffe66f62b1e24285d67e8b1bb6ceee</anchor>
      <arglist>(size_t n, vec_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3e753be737bdeaa751d3e7969c0cbda9</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t &amp;ix_min, size_t &amp;ix_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4c3cc22f9d2cb4e4ce34d955d9bbd169</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t &amp;ix_min, data_t &amp;min, size_t &amp;ix_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a264705af22d140f37b30c76f9ec5c850</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3f81b9baf1cb13a1c23becdaf19a6faf</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_max_quad_loc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa3a282dd58a9a3c64381b3eb3a501dcc</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4312f3fbe12b124cece5fb777bbf30f2</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a73966881351e95480835d94b565e8b5a</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_min_quad_loc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a030f1123ad32d3fa33f9222973fdb0d8</anchor>
      <arglist>(size_t n, const vec_t &amp;x, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a755b769f84643cfb804476380fec84a6</anchor>
      <arglist>(size_t m, const size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_max_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3aa80f6d4ec775ee12ec8305fdf98524</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max_value_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab063719a1d776103deb6ed2827057d24</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad1d8600ba911a7dadcea14482a017932</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_max_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a254ad183db60b84c247f86a5b4b08654</anchor>
      <arglist>(const mat_t &amp;data, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae3d757d4dc0fd020183b54c0301f07da</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_min_value</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a451c9a109a7527fb5617ef5961233384</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min_value_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a56b281b2412cc876fe5c395670dd2299</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a01968adab44fc20c8ece2b6bb0f77962</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_min_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4734664ec871c86a87c2d5ff60ba99b9</anchor>
      <arglist>(const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adccb49e43daed33897500de6a649333d</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a136653db5fa08c1061b6539c4606fdb2</anchor>
      <arglist>(const mat_t &amp;data, data_t &amp;min, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_minmax_index</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a03f2ceb1c4a3ed6761f66c12009d97ac</anchor>
      <arglist>(size_t n, size_t m, const mat_t &amp;data, size_t &amp;i_min, size_t &amp;j_min, data_t &amp;min, size_t &amp;i_max, size_t &amp;j_max, data_t &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3f64004b4ce82381a95ebfe539d9635d</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>matrix_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ade159bd27be1da8e1fc5b285537b18a0</anchor>
      <arglist>(const mat_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9992b6d3a4d51a74baa869fdc5654c78</anchor>
      <arglist>(size_t n, const vec_t &amp;x, double x0)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa8883ccd1efc961db614d025882264e4</anchor>
      <arglist>(const vec_t &amp;x, double x0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad59087b3d8c1a838e4279e54e373f471</anchor>
      <arglist>(size_t m, size_t n, const mat_t &amp;A, double x0, size_t &amp;i, size_t &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_lookup</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae5cc6c08d9a9d131af18b46b6aeeee73</anchor>
      <arglist>(const mat_t &amp;A, double x0, size_t &amp;i, size_t &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch_inc</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad535d0e50ddc8a34739b39ea66516f52</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch_dec</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab32ca9cb4847fd24f129b97afbd03aa0</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab80f56ba9e5fa1c4f5fc5719433565bd</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x, size_t lo, size_t hi)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vector_bsearch</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aba4bbf78c02d79ceba94d54ea284f47d</anchor>
      <arglist>(const data_t x0, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9bf42ebb5ed415c81d2b568c1f5c1d38</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_sum</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a82c11fca2e8b00c00e72c363dd892bc8</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sum_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af1cb847a613d4d38b45aee949b060fa2</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sum_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4bcc389b6e02e42af921e9d67a2ac488</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_norm</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aef3d50bf6921fd3b8f3080181bc3a744</anchor>
      <arglist>(size_t n, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>data_t</type>
      <name>vector_norm</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a752b88f2520691cc6c5232111f547c55</anchor>
      <arglist>(const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_norm_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a80b0f747da373d2a7a2e7da1149bd80b</anchor>
      <arglist>(size_t n, const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_norm_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aeee678d03e5acdecb608cd119c9df825</anchor>
      <arglist>(const vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_set_all</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a22bcebaf5ffc9f8164f2fc42ef9e8499</anchor>
      <arglist>(size_t N, vec_t &amp;src, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_set_all</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9ce48b3aed0ca1f7f60d29d5ea0d173a</anchor>
      <arglist>(vec_t &amp;src, data_t &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_copy_jackknife</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a75714fb3f4e48a8b206ff203159711eb</anchor>
      <arglist>(const vec_t &amp;src, size_t iout, vec2_t &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_rotate</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a76a955210fe82397637ef30e4e7f5a29</anchor>
      <arglist>(size_t n, vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab2547005690dd0e65a16f17dd479320c</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a50944f84816903639f06377d04bbbd66</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a94d0e885f82f0f7a1cc20a9105eb0f42</anchor>
      <arglist>(size_t n, vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_reverse_double</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a291edca9e836e1def1f3fb08325c0a18</anchor>
      <arglist>(vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mat_row_t</type>
      <name>matrix_row</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae00ac0006773b47946a7ee79f3c587d0</anchor>
      <arglist>(mat_t &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>mat_column_t</type>
      <name>matrix_column</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3e9129657cc37ba282ee22e4fd00401e</anchor>
      <arglist>(mat_t &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afd4bc1b029d2511453101e70b220c2fc</anchor>
      <arglist>(std::ostream &amp;os, size_t n, const vec_t &amp;v, bool endline=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_out</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6ff07983c873315033cc9b859fca4636</anchor>
      <arglist>(std::ostream &amp;os, const vec_t &amp;v, bool endline=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_grid</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d642aa06be8ece1c80f237f93b01546</anchor>
      <arglist>(uniform_grid&lt; data_t &gt; g, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matrix_set_identity</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae8795a06ae0f4f0eaa779e3fd39f61bb</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>dat_t *</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5c36a3ae58644a7ca409d9899d0c5706</anchor>
      <arglist>(dat_t *v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const dat_t *</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac209e8d3b22174ce5171d49f7088df43</anchor>
      <arglist>(const dat_t *v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4ce8f5d361dd82c7a78e3e1809ae28c1</anchor>
      <arglist>(boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a074521a3971eda03eb1e3b1fe9c5e795</anchor>
      <arglist>(boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aefcd7f01dc4b02216fa8b76e43e1528d</anchor>
      <arglist>(const boost::numeric::ublas::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af42f9caeb4a1e3c5c1cc61ad1bf99bb5</anchor>
      <arglist>(boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa8e9549380a13d1a78adbfdad2b95035</anchor>
      <arglist>(boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad5efc04e610729a7c29a1cc6515770d0</anchor>
      <arglist>(const boost::numeric::ublas::vector_range&lt; boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad2a68a37e9ba84f61cb623ff5642a6ec</anchor>
      <arglist>(const boost::numeric::ublas::vector_range&lt; const boost::numeric::ublas::vector&lt; dat_t &gt; &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abdffd4f4a2cdd5f54bbee8803f049185</anchor>
      <arglist>(std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7c536d4c9ad20d12adfbc9ee870077b7</anchor>
      <arglist>(const std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; std::vector&lt; data_t &gt; &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6d127958c4272900d129cfcb097922e8</anchor>
      <arglist>(std::vector&lt; data_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>vector_range_gen&lt; vec_t &gt;</type>
      <name>vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6ea1545cde5f531af67a7deb24c761bd</anchor>
      <arglist>(vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4f82de8ac5cde886cb0a64642d97ce63</anchor>
      <arglist>(vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3592261c902618f3a9c32dc18243e141</anchor>
      <arglist>(const vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const const_vector_range_gen&lt; vec_t &gt;</type>
      <name>const_vector_range</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1a2e0f764d5c7fced80d8fbcebd26c71</anchor>
      <arglist>(const const_vector_range_gen&lt; vec_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; dat_t &gt;</type>
      <name>vector_range_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aea3baa635c82e72919d3ec0d3c957f59</anchor>
      <arglist>(const std::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; dat_t &gt;</type>
      <name>vector_range_copy</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa69306863a1359ed692855e4fc4e4000</anchor>
      <arglist>(const std::vector&lt; dat_t &gt; &amp;v, size_t start, size_t last)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0f52ef1f2196bfdc7f06a7229a1970f6</anchor>
      <arglist>(const arma::mat &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afd453895c4328fa1bfc09063d1bc186c</anchor>
      <arglist>(const arma::mat &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>arma::subview_row&lt; double &gt;</type>
      <name>matrix_row&lt; arma::mat, arma::subview_row&lt; double &gt; &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abcb2c0f0e2963e3016d8856e51d3af9c</anchor>
      <arglist>(arma::mat &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>arma::subview_col&lt; double &gt;</type>
      <name>matrix_column&lt; arma::mat, arma::subview_col&lt; double &gt; &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad59e4f8e12b2d76089bea25feeca45d9</anchor>
      <arglist>(arma::mat &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_max</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a661103a085b6e52f758aee8ccd37bc84</anchor>
      <arglist>(const Eigen::MatrixXd &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>matrix_min</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9510690f4dedea6183746bc891230de4</anchor>
      <arglist>(const Eigen::MatrixXd &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::MatrixXd::RowXpr</type>
      <name>matrix_row&lt; Eigen::MatrixXd, Eigen::MatrixXd::RowXpr &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a242ee88fabfddd0415ea9faeb376a0b4</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, size_t row)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::MatrixXd::ColXpr</type>
      <name>matrix_column&lt; Eigen::MatrixXd, Eigen::MatrixXd::ColXpr &gt;</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab79db31213dfc4dad3fc7486b662f229</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, size_t column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_threept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a62c773774ef32755f6945fcfafef9c2f</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_threept_tap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a102faf254e0f8517a900210f31bb6268</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_fivept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8cd96d73bfe6fd075a3ca2ad8c310a91</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_fivept_tap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a56ea6814a9b84b88a12697658c4ead9b</anchor>
      <arglist>(size_t n, vec_t &amp;v, vec2_t &amp;dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1fe7ce540f4accd4cc6df485650268a3</anchor>
      <arglist>(size_t n, ovec_t &amp;v, vec2_t &amp;dv, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vector_deriv_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a28fc6c03e8111e563ad96aa484ad02cc</anchor>
      <arglist>(size_t n, vec_t &amp;vx, vec2_t &amp;vy, vec3_t &amp;dv, size_t interp_type=itp_cspline)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_trap</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9a2eea92100f61a87efdc1d565573249</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_threept</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a3a843a4294295b0fe282300a4f66884a</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_extended4</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a525f0f08bc58541832af96cf5a4662e0</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_durand</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae45c98b2ff9f07ec33a56400c89b49ec</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_extended8</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af495c0a7752e70f1eb852bb0aea417de</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_integ_interp</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac8b81f9b2828f02573f2cb674adfeb67</anchor>
      <arglist>(size_t n, ovec_t &amp;v, size_t interp_type)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9039b8887a88a6d259e5200ac783d263</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5ed4cf6ed870b578794a085b2f142811</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a25b01c01b0a95c710a76021c1cea0090</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a468efe33ff1acc5e1c5fc88d91cc2a30</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a32fa77b580428db64127f179e2cb8b61</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6e0c5be2399256a7cd3f559fba853abe</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae04c9e635187120d5df32153d33793a8</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a65691df6ec02f523e4389ac165b3012a</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a26a9dafb811ea69e76d0cc054551c309</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a33bf177e88b7e3c87f838469736e50b7</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a52d34ec959f53ce4d4616ae19c80242e</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab039d9dc7560d67af104450ca19420ba</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a788da9afcbe52c49e3034293cd4c6a0d</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac0be129fee9961223c287215694be2aa</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa56a6d0efbf1ebdcfa4322a3a0bfa4ec</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a456abc6ce504a3b1c47974e4dfe86f11</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a26f14d05845a86e572193e579f81f0c9</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a69e809900a9a236f4578148415859830</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae9ff0a054e0adcc5094f6c74fd970ece</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f8958d6e76a466a45960f797d0934f5</anchor>
      <arglist>(const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a51053ed4567d8278db980fd2c0238d37</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5a2b51691501e6b11bc0fe04b488d9fd</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0512bc6e59d6ba4a0ffd7f76a05438f1</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>afc058d49fda2251ddcf7e7b33d7e570d</anchor>
      <arglist>(const vec_t &amp;data, double mean, double stddev)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a120cb8596b7e3253bd3d457f488741d7</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a937e7c576bf8d5ef31939fceb2f44cbc</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a29d508067691e4f8ce13803ac2035047</anchor>
      <arglist>(size_t n, const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa702ce60cae7139b309d11c38a81815d</anchor>
      <arglist>(const vec_t &amp;data, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7088d981adbd1533ad2f45f3f5b61368</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lag1_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1b0c4c61f8e0c2100790810f43658ca3</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e6e2fbae681ce8fe5502a6e3e7ddbf9</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t k, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9b81207ddb9c420e4f72359ce12ed6fb</anchor>
      <arglist>(const vec_t &amp;data, size_t k, double mean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5c2f867f85c0c893544e34cc901f4b37</anchor>
      <arglist>(size_t n, const vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_lagk_autocorr</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5fa5e772c61cd2a2775fc491bcb4bdfa</anchor>
      <arglist>(const vec_t &amp;data, size_t k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a46251eac7ba6423978e6abe630169aea</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2, double mean1, double mean2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad6f92f417d19dd6fbafb57e1288f18cb</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2, double mean1, double mean2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1629cb68736fca0461fa548447614a5c</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ada7be2b6ee08c365d1b911ce7a6735d2</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_correlation</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6a7e5bffe045f7449e6c803968720c4a</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_correlation</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a31c821331c50254070dd167d56cac299</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_pvariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac902edbd0a73d6a51b1f1d308b70a88e</anchor>
      <arglist>(size_t n1, const vec_t &amp;data1, size_t n2, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_pvariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6029f0c45c550e0a46256a320c4815fc</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_quantile_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a0e62a8e50b224a15e87174c9702675e6</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_quantile_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7d800190c0b2e95eb994c95fa5d89904</anchor>
      <arglist>(const vec_t &amp;data, const double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_median_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a10ff3da3200154c7d3dabdde2fb4bdb8</anchor>
      <arglist>(size_t n, const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_median_sorted</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a35211ab2475763f139fd9d9724ef8d42</anchor>
      <arglist>(const vec_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_chi_squared</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6d7c8ad3861fdf5efb8d5fe0e367d8d8</anchor>
      <arglist>(size_t n, const vec_t &amp;obs, const vec2_t &amp;exp, const vec3_t &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_chi_squared</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6f463ade721bdbddfb6a842dd89d22da</anchor>
      <arglist>(const vec_t &amp;obs, const vec2_t &amp;exp, const vec3_t &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_scott</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8e715f1e636912085e91e460b0d22a4d</anchor>
      <arglist>(size_t n, const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_scott</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>aa12ad4877c8debadabd92a91df0a5350</anchor>
      <arglist>(const vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_sorted_quantile</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad17d794aea92cef56a60798a88eb4c38</anchor>
      <arglist>(size_t n, const vec_t &amp;v, double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_freedman</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a298803331b28f5b3ecb91689e478123e</anchor>
      <arglist>(size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_bin_size_freedman</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac699a9c2003c7aa4b145d59174f70ae2</anchor>
      <arglist>(vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e7cf6bbb09e9323a1817d113e5fc428</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_mean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adadd9d58a8905e3e663314799c9f74bb</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_factor</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a392ebdf3e97d1564863cadc69dd9e4f2</anchor>
      <arglist>(size_t n, const vec_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_factor</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a77f6a7fae8aed493d6f167590bb01fe8</anchor>
      <arglist>(const vec_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae061c1b6a4a3bfcdf20615e065c02708</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6b34852828f6f097312274d55cf90923</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2d1278f53704ca4b2619a4bc39cf3c10</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ab40e03c0b3d2aef852203848b7b6cd15</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a45845be10ec25f6727ab837ed492ed4f</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_variance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>adf0467a8810d63b9d517568d61aff58b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad923a2a804221d762610f2b5eb7ffe04</anchor>
      <arglist>(size_t n, const vec_t &amp;data1, const vec2_t &amp;data2, const vec3_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_covariance</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ae15c628654db2f2866b46a0132864508</anchor>
      <arglist>(const vec_t &amp;data1, const vec2_t &amp;data2, const vec3_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a375d3a056d02d2c70662db60a5cfd019</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev_fmean</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a2c3454a30cba5f3d9eb5e568735abfce</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a69afc4a8bced753baa5058fd58e8a9b5</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>af72357d2fd030655aaa69a2e0a2f769e</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a5509fab4f6a937d4d2807b991eea619f</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_stddev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a6c87191b765247b2b0f69e5894f15bd0</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abe78b7efb9f8896e5ce6a356d54f375b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a42137830d5ee72152d8907bb5abf0273</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a9e01e0d8f126a2b2e3beeb6443269f3b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_sumsq</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a1e57edd9e8c168ff8a8020e5be3b6747</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a96632b85d74ea1672b11195f895dfe97</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ad44e4ae6f12d173676355ff1c5375ab8</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a235274cf25437069d908a4cb78385dfe</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_absdev</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a4881ac69e9f35ca4443cd8fdad7e4b7b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>ac3ef3add1ba5583c5cc25e82c832167b</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a263aacc5ccf56f2fde6f45ac26d5460b</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a7f4bb3af27a4e0ed27ae8600cf030836</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_skew</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>abc576e7fe7a6574fc5c18941be9177cc</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a890c5bb163fd79181e87158b64250591</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a372f90023cb8fb5e0e862eb17ec55767</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights, double wmean, double wsd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a8f9e1c7ed7bf66d976166f3449d1f164</anchor>
      <arglist>(size_t n, const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wvector_kurtosis</name>
      <anchorfile>namespaceo2scl.html</anchorfile>
      <anchor>a461f4e4bee778fb3f2b580c2002a7313</anchor>
      <arglist>(const vec_t &amp;data, const vec2_t &amp;weights)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_acol</name>
    <filename>namespaceo2scl__acol.html</filename>
    <class kind="class">o2scl_acol::acol_manager</class>
  </compound>
  <compound kind="namespace">
    <name>o2scl_cblas</name>
    <filename>namespaceo2scl__cblas.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>o2cblas_order</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a7657f6208dd45c3e055b36ea57fc5601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>o2cblas_transpose</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab0ab2f48c928084b7323374616caa05a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>o2cblas_uplo</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a915487a43578090cbdb3ae969595bf44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>o2cblas_diag</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab63e572f270e6127f3cee34aebbb33ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>o2cblas_side</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a37d339f0291c2076f15f991882efa160</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dasum</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ac077d393fba3013cebb311d75ad78591</anchor>
      <arglist>(const size_t N, const vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a42573bbc0f81c11861d948ee676adcac</anchor>
      <arglist>(const double alpha, const size_t N, const vec_t &amp;X, vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a4d9cb0a0f110fb1a2fdf2e1e5eee82cf</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a7a31b86a26be2310c8792d1f6ddb348b</anchor>
      <arglist>(const size_t N, const vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a55051b4516709c32e86d72057d4a7ef8</anchor>
      <arglist>(const double alpha, const size_t N, vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dgemv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a5537efdae904ec720971c2fa0f04b704</anchor>
      <arglist>(const enum o2cblas_order order, const enum o2cblas_transpose TransA, const size_t M, const size_t N, const double alpha, const mat_t &amp;A, const vec_t &amp;X, const double beta, vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dtrsv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a428732bda108f5a529656792a711c660</anchor>
      <arglist>(const enum o2cblas_order order, const enum o2cblas_uplo Uplo, const enum o2cblas_transpose TransA, const enum o2cblas_diag Diag, const size_t M, const size_t N, const mat_t &amp;A, vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dtrmv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a4916d26574a74a9d2cd55769e7ade038</anchor>
      <arglist>(const enum o2cblas_order Order, const enum o2cblas_uplo Uplo, const enum o2cblas_transpose TransA, const enum o2cblas_diag Diag, const size_t N, const mat_t &amp;A, vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dgemm</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ac9a4de007bb23b6e6664b31c0ba4920a</anchor>
      <arglist>(const enum o2cblas_order Order, const enum o2cblas_transpose TransA, const enum o2cblas_transpose TransB, const size_t M, const size_t N, const size_t K, const double alpha, const mat_t &amp;A, const mat_t &amp;B, const double beta, mat_t &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a1081da2a9ae830b9be55fc866364952b</anchor>
      <arglist>(const double alpha, const size_t N, const vec_t &amp;X, vec2_t &amp;Y, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a3a7c166ccebad0dd2effe9348d21b337</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const vec2_t &amp;Y, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a855cc5e1e78f0ec916ac90cdf1b00ec7</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ae10a3a2b27a7f222627642e273d29297</anchor>
      <arglist>(const double alpha, const size_t N, vec_t &amp;X, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a759f2656f2470c50ec13cb3ca6cd75dc</anchor>
      <arglist>(const double alpha, const size_t M, const mat_t &amp;X, const size_t ir, const size_t ic, vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab617e1401bf22c3fd7e7af2b3152f2ca</anchor>
      <arglist>(const size_t M, const mat_t &amp;X, const size_t ir, const size_t ic, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a725ccd7ff094a830db8bcff8c7bf408a</anchor>
      <arglist>(const mat_t &amp;A, const size_t ir, const size_t ic, const size_t M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a74efdb618d9a8c23f982ea29b4a32b29</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t M, const double alpha)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dasum_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ad42f89acb089444d831a122ce229aa2a</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>aa75d324dc3fa9b830b45e3bcbf9fe454</anchor>
      <arglist>(const double alpha, const size_t N, const mat_t &amp;X, const size_t ir, const size_t ic, vec_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab41158c698a37c0e5ffb5fff87e8d3fe</anchor>
      <arglist>(const size_t N, const mat_t &amp;X, const size_t ir, const size_t ic, const vec_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a9467f5fb47766763a9eabc50c9d8b324</anchor>
      <arglist>(const mat_t &amp;M, const size_t ir, const size_t ic, const size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>acf4291db25341aebafefa720728f3d2a</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t N, const double alpha)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dasum</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ac077d393fba3013cebb311d75ad78591</anchor>
      <arglist>(const size_t N, const vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a42573bbc0f81c11861d948ee676adcac</anchor>
      <arglist>(const double alpha, const size_t N, const vec_t &amp;X, vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a4d9cb0a0f110fb1a2fdf2e1e5eee82cf</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a7a31b86a26be2310c8792d1f6ddb348b</anchor>
      <arglist>(const size_t N, const vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a55051b4516709c32e86d72057d4a7ef8</anchor>
      <arglist>(const double alpha, const size_t N, vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dgemv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a5537efdae904ec720971c2fa0f04b704</anchor>
      <arglist>(const enum o2cblas_order order, const enum o2cblas_transpose TransA, const size_t M, const size_t N, const double alpha, const mat_t &amp;A, const vec_t &amp;X, const double beta, vec2_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dtrsv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a428732bda108f5a529656792a711c660</anchor>
      <arglist>(const enum o2cblas_order order, const enum o2cblas_uplo Uplo, const enum o2cblas_transpose TransA, const enum o2cblas_diag Diag, const size_t M, const size_t N, const mat_t &amp;A, vec_t &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dtrmv</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a4916d26574a74a9d2cd55769e7ade038</anchor>
      <arglist>(const enum o2cblas_order Order, const enum o2cblas_uplo Uplo, const enum o2cblas_transpose TransA, const enum o2cblas_diag Diag, const size_t N, const mat_t &amp;A, vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dgemm</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ac9a4de007bb23b6e6664b31c0ba4920a</anchor>
      <arglist>(const enum o2cblas_order Order, const enum o2cblas_transpose TransA, const enum o2cblas_transpose TransB, const size_t M, const size_t N, const size_t K, const double alpha, const mat_t &amp;A, const mat_t &amp;B, const double beta, mat_t &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a1081da2a9ae830b9be55fc866364952b</anchor>
      <arglist>(const double alpha, const size_t N, const vec_t &amp;X, vec2_t &amp;Y, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a3a7c166ccebad0dd2effe9348d21b337</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const vec2_t &amp;Y, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a855cc5e1e78f0ec916ac90cdf1b00ec7</anchor>
      <arglist>(const size_t N, const vec_t &amp;X, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subvec</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ae10a3a2b27a7f222627642e273d29297</anchor>
      <arglist>(const double alpha, const size_t N, vec_t &amp;X, const size_t ie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a759f2656f2470c50ec13cb3ca6cd75dc</anchor>
      <arglist>(const double alpha, const size_t M, const mat_t &amp;X, const size_t ir, const size_t ic, vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab617e1401bf22c3fd7e7af2b3152f2ca</anchor>
      <arglist>(const size_t M, const mat_t &amp;X, const size_t ir, const size_t ic, const vec_t &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a725ccd7ff094a830db8bcff8c7bf408a</anchor>
      <arglist>(const mat_t &amp;A, const size_t ir, const size_t ic, const size_t M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a74efdb618d9a8c23f982ea29b4a32b29</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t M, const double alpha)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dasum_subcol</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ad42f89acb089444d831a122ce229aa2a</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>daxpy_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>aa75d324dc3fa9b830b45e3bcbf9fe454</anchor>
      <arglist>(const double alpha, const size_t N, const mat_t &amp;X, const size_t ir, const size_t ic, vec_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ddot_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>ab41158c698a37c0e5ffb5fff87e8d3fe</anchor>
      <arglist>(const size_t N, const mat_t &amp;X, const size_t ir, const size_t ic, const vec_t &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dnrm2_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>a9467f5fb47766763a9eabc50c9d8b324</anchor>
      <arglist>(const mat_t &amp;M, const size_t ir, const size_t ic, const size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dscal_subrow</name>
      <anchorfile>namespaceo2scl__cblas.html</anchorfile>
      <anchor>acf4291db25341aebafefa720728f3d2a</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t N, const double alpha)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_cblas_bracket</name>
    <filename>namespaceo2scl__cblas__bracket.html</filename>
  </compound>
  <compound kind="namespace">
    <name>o2scl_cgs</name>
    <filename>namespaceo2scl__cgs.html</filename>
    <member kind="variable">
      <type>const double</type>
      <name>schwarzchild_radius</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a92033f0d694a989077061b98f861e3c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speed_of_light</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a621093afbf93826bf77e8e34bde8d273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gravitational_constant</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab6b896fc85e665edf75373e83d21e64c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_h</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a45cf7da8a725625becf0406e8f96b4c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_hbar</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a1c54ee1298652d082afbfa278fefc6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>astronomical_unit</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>abe77163ac9316582fc516e79dd7c9f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>light_year</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a51e317deaec10445ae3a1036b88b96fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>parsec</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a3ad8e3ba1723aac41bed03881cf188bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>grav_accel</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a274e070267d85ba1f09aa42b24cdce86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_volt</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a810390a20aa41b8e2eb111900e736e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_electron</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6fe76d9f33f6402dec23c51a10d3fdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_muon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a208f9479e812c9be4b64741df15ae355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_proton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a663d22fdcb70e94d2e2d7bb6bb01b021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_neutron</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a4e1cc50e473057c06cbf23569f2754c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_deuteron</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a36f052aeedfd3b2584af98db05bcf6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_triton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>abda62f22e1716fd649c5bc7253df1040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_helion</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac0dbdd36fc819e6e166f7511abf332f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_alpha</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aa44cb21e1512ce657638ac2ffeb2d70a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rydberg</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a1eea6d59936798a0a9963e956b24e96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>boltzmann</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a307e04b67c8cca7381619d6691975caf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>molar_gas</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aef2b926aa45a6c7d8aa40ce8a4673ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>standard_gas_volume</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>adb55c3bd9a54e2027240ee62c02b6ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>minute</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a58150dd912dad1448238c4bac9819459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hour</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aa0e9c0cb2555f49c2c8b15b03cbf8cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>day</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae95df2647bae6cb29f5e385b627e6daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>week</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a5b5eb0b2b9c612144280d835893f00c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a0f033853f964d7fd3b778b21c24693f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>foot</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6392590b062b4b58457bd92fe9e59e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>yard</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a1130d6015b50aa460e22628ab5eec0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mile</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a40596effb32e69e607f6aa05b05679ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nautical_mile</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a34b52919261853a404dda43e94cc527e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fathom</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>acb426aa97427d8294f072f1757d2acfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mil</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>adbb75ebd3fc0804dc6ccd10a3c6b1dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>point</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a4fdd9b53190ea36da50829256712d90c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>texpoint</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a4a8d16e18c97348733b1393d6c2fc424</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>micron</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ad9455623b744de53671002a8a834f1f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>angstrom</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a46378df359a7d47f6ba45bf1579b2f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hectare</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a89555e964e1042444ef8a49147acf6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>acre</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>abd131c041ba7053d22f7c6528af554ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>barn</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a0951a4b8cd2fa205d924997823d1b6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>liter</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a13c2875962b04f98d17cc6698c4597f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>us_gallon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a95c1ecae8b2c0ed024e97fcffb17217f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>quart</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab25438796cd37b5f79ce45f3473e7ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pint</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>adff30506cd5ce50152d84e5e4f6823cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>cup</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a5014c14e271b1894c2005aab97c326b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fluid_ounce</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab959b26e47f13a385159444cd3eb433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>tablespoon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>afa508bd3ac68480706bf1a8da6e106e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>teaspoon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a21ddf1edc797e1b4b51e6a4d28ab92ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>canadian_gallon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a93d810393e3d8b36c5f768a9aa32c3d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_gallon</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aadcffd3f12a2c265944afaeed30c40c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>miles_per_hour</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a4712e640ba5f846d002a8a0ea408f9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilometers_per_hour</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a9bcfd5f89604a71ef2eb66d9fb41ff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>knot</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aa7bc5c1950c831ec0fb246a4c1f04c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_mass</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae4ca41576a790d234df03a3d1f430f7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ounce_mass</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae21db4b189359db3d94ed02b240a966e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a0540b635f49b30933209cff68d528872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>metric_ton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>af962ddb4c1c00be4de3f361c456015d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_ton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac0524b1839a62374e8c8dd489c45b4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>troy_ounce</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a43190fb24798b0a74a1c09dffc2677b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>carat</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>abc36211c2b70ec7df6b5d110e2158af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>unified_atomic_mass</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6ac9812877a4a6e643cc49f034be28b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gram_force</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a24c5f739e0a4a02efc0c86ccf4c0b3d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_force</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a0051310c222f4a78097c11083ea06e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilopound_force</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a8ea6c64853ce7738ebb69f1a53ad62ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poundal</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac54aebebcf210645a47065e30dd63214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>calorie</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ad938deff179a88ed7d28e43c99a45839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>btu</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>afb5ec380f82d67c77acf0a6719c5fc8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>therm</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ad4cbb44c589e8ffc67eb3a0570bbf1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>horsepower</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac83e231a6ebe7128fc646aeb76957afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bar</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aa20a610df3882e66b70b60445187d36e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>std_atmosphere</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6949d1a7045e776ee236ed19a3f17ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>torr</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>abc0243265312cf6e8fce35fbebf66bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>meter_of_mercury</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a62899b0b462123df96f0f8a1f649b076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_mercury</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac6e69d285dfb156282dff4557f5375b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_water</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ad552be9a5c8ded987a024bfcbf51cc87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>psi</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a69f0e25b989baa93ecaacfa761e73013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poise</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ade15b52080e7e92f2e8dee7678b8477b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stokes</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae5dae003e7d33a00d28c83e6f2beee31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stilb</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab2d136ac266773c9570a3127076b8a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lumen</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6b995f6fdcf48f6b1abc43aa71ec6fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lux</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ad64ef98a6f7fb931d8edfdea0df43c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>phot</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ac4e553b8a4009554a6fa920bfd7a4fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footcandle</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a456fec3655e668d8c3da593f84fb3274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lambert</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab293dc97e44a0fd0d1e01ac8ebefa8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footlambert</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a00a62d18145f159cedbcc42966d6ae53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>curie</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aa15b649d3d0f3d1e827084b276d23355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>roentgen</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae05f57f34cd90ce36efe420403f33463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rad</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ae987e7e1ae681ed97cd9bf0d68795b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>solar_mass</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a72aad60922b01ea20ca9c6981b84cbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_radius</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a6c984e624ef271f10dc7087afa13b17e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>newton</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a1a2e4b1ea53087f3459b3dca628b503f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>dyne</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a80b469342325aec9b96a6278310645d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>joule</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>af8f481a67578cf0d6fbc18d3544a3a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>erg</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>aea77a68eebe561b7c33b181067c53b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stefan_boltzmann_constant</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>afa589a8e428d979f13fa4fb91ede5377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>thomson_cross_section</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>a971b28348b408dbf3dc93e4fb6ea7a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>Gfermi</name>
      <anchorfile>namespaceo2scl__cgs.html</anchorfile>
      <anchor>ab97c66116f4aeeb14c16f24dfb396782</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_cgsm</name>
    <filename>namespaceo2scl__cgsm.html</filename>
    <member kind="variable">
      <type>const double</type>
      <name>schwarzchild_radius</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a153bf0bd14d44dc8fc036aa107860763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speed_of_light</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a0093fe51be203563b4a61289a49ce2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gravitational_constant</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a6de3a8669e59f32bf2a4f2db2c76597d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_h</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a37a71eb2be4188f4a6a3f9483e68bd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_hbar</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aab0a89e1db85c00b193b00b262be0cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>astronomical_unit</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2d4fb15ecf04a223cf7b185bab56c47e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>light_year</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a7bebbd2a808d525ffd85d54bca573b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>parsec</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a1c8b59d37c88a4e59e2dbad620a95029</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>grav_accel</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a47c22e63e43212fd02bcaa6bfa33adf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_volt</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a08cda68718359b4f3d70848b932bc973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_electron</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a78c950b8664b3a22cfcc81a21ba2cc17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_muon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a5152cbe12195d30a9efcee9cf2cb107e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_proton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac16af1b9aca77393dc7c811581173f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_neutron</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a6a187ff4a3cb6cb66a51f09ea19ce483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_deuteron</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a75105e8e807e46c2f83520a72c4e001e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_triton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>adae2225f25d8ac803b10ba0406f86ac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_helion</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aad67089d2681172ed0846f1f5a1482ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_alpha</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a6a3ab932d45134185332dc6ea2ff018c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rydberg</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ade630c07d78d5eea345f1740ad607df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>boltzmann</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac50c1ebd93197edd9e066d387c8aa1a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_magnetic_moment</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>af27122e2aec32a7119bb1cda01287b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>proton_magnetic_moment</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a1e20cf57a3bb21518e7aa0d3e29820fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>molar_gas</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>acbacb4f2f82733dfe441fad7075c3467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>standard_gas_volume</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aa89e9c08302cf2c851c783af73f1755b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>minute</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a584dcdb0b4d7969b0311eba26c2f3c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hour</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac4b79132b4795dbe628f02f777fcb3e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>day</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab1480cf742f988ad728a8837c5ac866f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>week</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aacd3bd0cae33d6f6a277817397f4fb4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a072a65c74f22312423dca3fceb13ecbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>foot</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a172dfe73d8bea44480d263d178ddc642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>yard</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a383d7e2a3496a463f9f1133f8a1c0862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mile</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aeb3270c9130e98e81e619f7bb6a6aae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nautical_mile</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ae4aebb6e3a56728e581782c81fa6600f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fathom</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a8c6dc6f7261c2680b3b44d1c56d39f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mil</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac72fb20dea5acbd774739b62ce9dce3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>point</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2733209d56ea56b157e415f009b35f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>texpoint</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac7f5223412164e9d63f24470f1ea6bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>micron</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a0825f5b01ad36fd96356494f2f4ee6e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>angstrom</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a13b961779decf4846cacaed78c107280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hectare</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a58ce86db62b243ba4ab67b224e32e5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>acre</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>acd42c8c5fc7eb845a38307607d3a4bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>barn</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a6914488c5790134647c0e6007d418bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>liter</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a11c2b3854f9edd5a960e49420d2e871b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>us_gallon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a8c958053b921a3a8755ee10101a2e132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>quart</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a38f4952611a10f55a656bb62dd6b9468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pint</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a0aae9d90137a06f84bb7de66cb0b8b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>cup</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a3f46e416e995e80d7814e83bc1646232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fluid_ounce</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>adf13ed838b9ee2809c27e0c4f7faf991</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>tablespoon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a7174c27f7839b94b51a02e42743a7480</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>teaspoon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a177ab2f1992e3108401c2fbcf732105c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>canadian_gallon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a1e60fcfad5dcda4bfe24123f36acff2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_gallon</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aaf7078e0a05820ed7c6ba90e5941ca69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>miles_per_hour</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab927ce4b7f2741221cab0f6b5fcb4d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilometers_per_hour</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a896232d5808657953b68527a7d8ae391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>knot</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a8e2ee43ddf8ef9a8f5a6eb2b0ae03652</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_mass</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a62afa43a3d4f6881348dd00046eeed2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ounce_mass</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a603bd596c097a7a1b9c0e9ad483c6e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aadf6be99b20ca85ae13dd610f9aed1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>metric_ton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a462f21e2d58eaa50837fbde0eb1f6a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_ton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a4d2197e03c47bb62fe48204c6d9449a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>troy_ounce</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ad9ef76787be2a0c664194143c9b0e362</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>carat</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a95591938e6a598696e11d809512ab5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>unified_atomic_mass</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a90fc88f2bad9cb82a4a199c939d5f457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gram_force</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aa0a988c901f94518810c873fdd1ee620</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_force</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ad182f68ba152cb7cf52d47624576bdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilopound_force</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>abd475edbd35beb7b7f67968354e8f9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poundal</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2493a727bd197a0caaf50d8de0698907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>calorie</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2ace9919bcd99aacd97728ad49701807</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>btu</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a5dde56366493428cbd986c7556a2eca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>therm</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a5b3cad085919c14f9dc36a30178c3367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>horsepower</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ad4c1a39e38e34c9d686e5d58ef870f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bar</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2173b2cc7b793db86ffa998637ce91e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>std_atmosphere</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2aea996f25c2b74e0f820814b20e6223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>torr</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a5f2952757ccb5e2a33291ffc3cbc050b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>meter_of_mercury</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2f57305ddd9d4de4b262a6f0f37b5804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_mercury</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a25b0c89c782efa3c2323d37dad05cb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_water</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a76c8e5fe037027e28cf5c64a14a01b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>psi</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a84c3ba800f750a2a7477719308e94b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poise</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab18581f1767263871fd64aeeddfd694d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stokes</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab745870a97829e56982ec84577733eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>faraday</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>accb89b86b1ab6a2e89908b649772dcb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_charge</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a650730790907ba61d46f7306b7d5f43a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stilb</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a28450aef28ba48bf8ce62419f04fa1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lumen</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aff2369201586656483966083cec27a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lux</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab076e7a47d0ebb16bd32e5c33f712620</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>phot</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac28d7958f28aae3e6f915fac04ac3a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footcandle</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a4a8f0e83da2003fca41714c77d716b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lambert</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a752b3730791848bc7533db19351303b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footlambert</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab7fd16f7542515beebbe1e224412585b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>curie</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab7c11468c3c2c8019ef1d24a5cc15e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>roentgen</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a502ed92afa4020e702f9b41ae2d19ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rad</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ab8530ece0ee21cafc73e879956d32b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>solar_mass</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a71f3baa4aae44cbedef837eaf22fcc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_radius</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>aa6e5318698306167af71a571d73cf643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>newton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a7c33dc5ff03966224a886ba3cb549b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>dyne</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a2797756ea9afd7f28e815c84222f31d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>joule</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a05a2ebaf255b3b1c9a72e3e1a0b0e43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>erg</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ae42f205d91172704aa0deef5c4e7235a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stefan_boltzmann_constant</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a797b9d38b40e2b97030328e4319cdec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>thomson_cross_section</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a7d15a6d9e75c2b82eb0db988acc8895a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_magneton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a4d0a4ea1e2243db8dde6733ae8b2f20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nuclear_magneton</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>a1e70445fc1a6152b6175db1f11386b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>Gfermi</name>
      <anchorfile>namespaceo2scl__cgsm.html</anchorfile>
      <anchor>ac4b5dc847fadc59dc953bf3f4199af66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_const</name>
    <filename>namespaceo2scl__const.html</filename>
    <member kind="variable">
      <type>const double</type>
      <name>fine_structure</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>afc051e9e02054944138f1e1780060b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>avogadro</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>acd9df8f2914c38c1c0ad6c7a1ad19100</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pi</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a0a2a2fafe84acb63c54db18738bea22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pi2</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a0a0e09aa16d0d5fed66c7fe49f97454b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta32</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>adc572e016aba81494dcefc2b4df7864b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta2</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a3de86a03a9b0a7df7b9c2d91f9872f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta52</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>ab15271422687a0f49e69c1e5a59584f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta3</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a9f624a3d84fe8b64905c74257a7e0df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta5</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a844501f4740f323948c0256a7692a092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>zeta7</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a6df3178e8f7e4d475e30c0123fd8e5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>sin2_theta_weak</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>ad031dedd9784d7e16a9ccf688448801a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hc_mev_fm</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a9b260350322bf198b67294eb1e5d01e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hc_mev_cm</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a3b0d6ac7a410407d62395fc7dfdba4f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ec_gauss_fm2</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>ab570404870ab6ac4e9159b56e516961e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gauss2_fm4</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>af6780f06736c9185f837376a08937d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_lambda_MeV</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>ab83096733780d9a12e7443e637e033d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_gaussian</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a5d289f072d67d1ddd8e7da17e49f7ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_hlorentz</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>abdefb744f419e9fcf830346483f8430a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_mksa</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>acef30dc61ca66f415c556fce3972c4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_gaussian</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>a5d289f072d67d1ddd8e7da17e49f7ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_hlorentz</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>abdefb744f419e9fcf830346483f8430a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>e2_mksa</name>
      <anchorfile>namespaceo2scl__const.html</anchorfile>
      <anchor>acef30dc61ca66f415c556fce3972c4c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_hdf</name>
    <filename>namespaceo2scl__hdf.html</filename>
    <class kind="class">o2scl_hdf::cloud_file</class>
    <class kind="class">o2scl_hdf::hdf_file</class>
    <class kind="struct">o2scl_hdf::iterate_parms</class>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aae9226e07a61965c0c7e697e389e625b</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table&lt; vec_t &gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input_data</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a0da877732d7fe66f8302ffc35dde3749</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table&lt; vec_t &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a49af35294bef5f02a943958b18196bae</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table3d &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aadab787413b2b39f020c5a05023a2b37</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table3d &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>af2c365ffa07987243ca245242c940c13</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table_units&lt; vec_t &gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input_data</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a5a5449502cbd3eb44b30f7a965147311</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table_units&lt; vec_t &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>acf5f40501d2269e2b85dfa270357fa1b</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::uniform_grid&lt; double &gt; &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a7d95e5b5f57b42434d378bcc55fc53c1</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::uniform_grid&lt; double &gt; &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>abd830d5c186299a64040f72705e0306e</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table&lt;&gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output_data</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a27b6dda62410f777411383ba310f513c</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table&lt;&gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aa3a4081c11e9aaf213c5dcd52babe91f</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table_units&lt;&gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output_data</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a9983b693add8f38fc4283d84580f23f5</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::table_units&lt;&gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a5b18e2127b22f45d52504fa00bb24496</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a789bc780042cd6858e3b1f6ee2514816</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a03f389a3c1737c4c0abc3a95a5094b44</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist_2d &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a0f5c3df81ab877b01e86a7e830dbf6d8</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::hist_2d &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a2370961ca64035b8bc93af1246dba8d8</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_scalar &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aca3eff9daa63ebbe984f89aa3486cfaa</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_scalar &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>af7cd54cc0c5b0768919f53cf83daa945</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_vector &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a6f6d97b59ee5e3992e263ff8054a538d</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_vector &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a2fb02b265514faa208d5645531e1d222</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_matrix &amp;h, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>ad27e35092fe6ac4956c7912cb7575c09</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::expval_matrix &amp;h, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a4a9455a6c27584eee6d238f26414854d</anchor>
      <arglist>(hdf_file &amp;hf, std::vector&lt; o2scl::contour_line &gt; &amp;cl, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a93144c546054d3f468ee5f31a675c986</anchor>
      <arglist>(hdf_file &amp;hf, std::vector&lt; o2scl::contour_line &gt; &amp;cl, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a825316f26ec7892dbe4ce5260706f494</anchor>
      <arglist>(hdf_file &amp;hf, std::vector&lt; o2scl::edge_crossings &gt; &amp;ec, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aa19e5b64017b67ef14c6a474555c4216</anchor>
      <arglist>(hdf_file &amp;hf, std::vector&lt; o2scl::edge_crossings &gt; &amp;ec, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_output</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a53f46a4d66824a54f5a6cc234f1aaec7</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::tensor_grid&lt; std::vector&lt; double &gt;, std::vector&lt; size_t &gt; &gt; &amp;t, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hdf_input</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>a71b9ba58a6ee2d6e5440f0de74cffa00</anchor>
      <arglist>(hdf_file &amp;hf, o2scl::tensor_grid&lt; std::vector&lt; double &gt;, std::vector&lt; size_t &gt; &gt; &amp;t, std::string name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate_match_type</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aa69dcf597531d82a032eac13ca8cb85d</anchor>
      <arglist>(hid_t loc, const char *name, const H5L_info_t *inf, void *op_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate_match_name</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>adf9155adcc17f447ca0252da97e5017a</anchor>
      <arglist>(hid_t loc, const char *name, const H5L_info_t *inf, void *op_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate_match_type</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>aa69dcf597531d82a032eac13ca8cb85d</anchor>
      <arglist>(hid_t loc, const char *name, const H5L_info_t *inf, void *op_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterate_match_name</name>
      <anchorfile>namespaceo2scl__hdf.html</anchorfile>
      <anchor>adf9155adcc17f447ca0252da97e5017a</anchor>
      <arglist>(hid_t loc, const char *name, const H5L_info_t *inf, void *op_data)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_inte_gk_coeffs</name>
    <filename>namespaceo2scl__inte__gk__coeffs.html</filename>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk15_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>afb8bc21d1aa2a9dbd4d039a94ae5fbb2</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk15_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a15dd2d8dff9cb9d0761b77b1fbfbe0c4</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk15_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a7b2e8a53b1ecab8c8b0aabe5dc48f629</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk21_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a51b69064b1a5c5ce2d287dfeac453d60</anchor>
      <arglist>[11]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk21_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>ada8da24b5c71215656d343c53b0b0583</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk21_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a6d85b20b69f65851144c2860e9eb6784</anchor>
      <arglist>[11]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk31_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a8db7bcabc7a1f97accdb4e98eaad4209</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk31_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a6e580da7ef7d677860ea9199399d1e89</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk31_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>af97255df14f592b66b747094ce6fefc3</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk41_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a175d896bd2eb2ee31f64d232f660efa9</anchor>
      <arglist>[21]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk41_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a43df7d651d8989511baefe3a6d5ddf05</anchor>
      <arglist>[11]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk41_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>ab70dabda9b4ec90f405b4dc57b4e2410</anchor>
      <arglist>[21]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk51_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>aceb8d53e8d31909c5671a7760d7e81c0</anchor>
      <arglist>[26]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk51_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>aa696285ef28a61cfaa50606810ad99cd</anchor>
      <arglist>[13]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk51_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a0b25d8eedf7b99d28ec04e1a5a361199</anchor>
      <arglist>[26]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk61_xgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>af16a54d2cb59cb0e44d1ad95457526f2</anchor>
      <arglist>[31]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk61_wg</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>afafc7130aac6bed38bbfdc978e8fb079</anchor>
      <arglist>[15]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>qk61_wgk</name>
      <anchorfile>namespaceo2scl__inte__gk__coeffs.html</anchorfile>
      <anchor>a83bc77815eaf199e6f8aedbafe27c73f</anchor>
      <arglist>[31]</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_inte_qng_coeffs</name>
    <filename>namespaceo2scl__inte__qng__coeffs.html</filename>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>x1</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>ab1cd6c1569123e2cef6117c05a78d10a</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w10</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a86b4c6ef4da0d6464d5286e0f07b96c2</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>x2</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a12210b57bc63bc1903788cfb5eaec115</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w21a</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a0e217c4262ca898a51fd3500948e5c42</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w21b</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>ada9c0e56a5cc0d94fd0cd3791f08b2f4</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>x3</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a0777931550a3bbb48b057c2213586e45</anchor>
      <arglist>[11]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w43a</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a4e415d90b3ae8e349987173eb9b3f8e5</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w43b</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>aef40ff5d963ee2b3084eeedd1b204c18</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>x4</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a69775c84384f24478826d96b14e45a21</anchor>
      <arglist>[22]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w87a</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a6eea751a9ce5773c97f3dddf5717ca67</anchor>
      <arglist>[21]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>w87b</name>
      <anchorfile>namespaceo2scl__inte__qng__coeffs.html</anchorfile>
      <anchor>a504fcc0ad71095653898578637458839</anchor>
      <arglist>[23]</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_linalg</name>
    <filename>namespaceo2scl__linalg.html</filename>
    <class kind="class">o2scl_linalg::lanczos</class>
    <class kind="class">o2scl_linalg::linear_solver</class>
    <class kind="class">o2scl_linalg::linear_solver_arma</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_colQR</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_fullLU</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_fullQR</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_houseQR</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_LDLT</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_LLT</class>
    <class kind="class">o2scl_linalg::linear_solver_eigen_partLU</class>
    <class kind="class">o2scl_linalg::linear_solver_HH</class>
    <class kind="class">o2scl_linalg::linear_solver_LU</class>
    <class kind="class">o2scl_linalg::linear_solver_QR</class>
    <class kind="class">o2scl_linalg::ubvector_2_mem</class>
    <class kind="class">o2scl_linalg::ubvector_4_mem</class>
    <class kind="class">o2scl_linalg::ubvector_5_mem</class>
    <member kind="function">
      <type>int</type>
      <name>bidiag_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a187185f2c949c9122d30018109d29054</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau_U, vec2_t &amp;tau_V)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a3ab3bc3b12150e0a8b158fec36b5320d</anchor>
      <arglist>(size_t M, size_t N, const mat_t &amp;A, const vec_t &amp;tau_U, mat2_t &amp;U, const vec2_t &amp;tau_V, mat3_t &amp;V, vec3_t &amp;diag, vec4_t &amp;superdiag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack2</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a851f79ebab8ed7f2b472712b3496293b</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau_U, vec2_t &amp;tau_V, mat2_t &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bidiag_unpack_B</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ad1dda44a1c2252a5ea74747ac0d74fa7</anchor>
      <arglist>(size_t M, size_t N, const mat_t &amp;A, vec_t &amp;diag, vec2_t &amp;superdiag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cholesky_decomp&lt; Eigen::MatrixXd &gt;</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a83fc81a8cdf48a243122b47abb3290d5</anchor>
      <arglist>(const size_t M, Eigen::MatrixXd &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cholesky_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4d166572a1cd2e6da85f5d0d50090a61</anchor>
      <arglist>(const size_t M, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cholesky_solve</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a1c7d4da90e7f9526d06e94c30a3d9d48</anchor>
      <arglist>(const size_t N, const mat_t &amp;LLT, const vec_t &amp;b, vec2_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cholesky_svx</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ab94edf124f826a7ebe32912d458375b4</anchor>
      <arglist>(const size_t N, const mat_t &amp;LLT, vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cholesky_invert</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>afce5f0f6fbab801df7fc63f1200ac027</anchor>
      <arglist>(const size_t N, mat_t &amp;LLT)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholesky_decomp_unit</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>af106094528bef943dfe75c2541194185</anchor>
      <arglist>(const size_t N, mat_t &amp;A, vec_t &amp;D)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_givens</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a1c813de822088b1c8ac03818164f2d74</anchor>
      <arglist>(const double a, const double b, double &amp;c, double &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_givens_qr</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a7ea3190e9e6dc21e8fa4a3e832848318</anchor>
      <arglist>(size_t M, size_t N, mat1_t &amp;Q, mat2_t &amp;R, size_t i, size_t j, double c, double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_givens_lq</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a9255c444095d57e7c3119efdf558fdf3</anchor>
      <arglist>(size_t M, size_t N, mat1_t &amp;Q, mat2_t &amp;L, size_t i, size_t j, double c, double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_givens_vec</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a38a6ec5f3a3de8522a507b69a1a2fbd6</anchor>
      <arglist>(vec_t &amp;v, size_t i, size_t j, double c, double s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>HH_svx</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a8a1780213a3f89789b6c7da494247c4f</anchor>
      <arglist>(size_t N, size_t M, mat_t &amp;A, vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>HH_solve</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>af298e12e53dde2d5ee4cb5eaa9e4ee76</anchor>
      <arglist>(size_t n, mat_t &amp;A, const vec_t &amp;b, vec2_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>householder_transform</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a5218da1d1a3b97518afcd63eeb7c4b96</anchor>
      <arglist>(const size_t n, vec_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>householder_transform_subcol</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a902cb2a01e9961b5745812a46123b17a</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t M)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>householder_transform_subrow</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a173c7179cb0a5be576e9034ca75066c3</anchor>
      <arglist>(mat_t &amp;A, const size_t ir, const size_t ic, const size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hm</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>acdb8926a8b6dbc52acfb23bef0c9a9c2</anchor>
      <arglist>(const size_t M, const size_t N, double tau, const vec_t &amp;v, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hm_subcol</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a0d082487242d5d892551ab730f7126f8</anchor>
      <arglist>(mat_t &amp;M, const size_t ir, const size_t ic, const size_t nr, const size_t nc, const mat_t &amp;M2, const size_t ir2, const size_t ic2, double tau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hm_subrow</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a208ce32bd2874399535912e203056e59</anchor>
      <arglist>(mat_t &amp;M, const size_t ir, const size_t ic, const size_t nr, const size_t nc, const mat_t &amp;M2, const size_t ir2, const size_t ic2, double tau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hv</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a359717a04dd10c9fc87bae053523cf2f</anchor>
      <arglist>(const size_t N, double tau, const vec_t &amp;v, vec2_t &amp;w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hv_subcol</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a1e9031d54a0dd408080bea7d148f5762</anchor>
      <arglist>(const mat_t &amp;A, vec_t &amp;w, double tau, const size_t ie, const size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hm1</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a37e6a0eb6805d4b9a790edb644854dd5</anchor>
      <arglist>(const size_t M, const size_t N, double tau, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_hm1_sub</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>acc4925d6f9b14e01dc75edab912634f9</anchor>
      <arglist>(const size_t M, const size_t N, double tau, mat_t &amp;A, size_t ir, size_t ic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_mh</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aa3db065b875a1b873c42c5c790d1f0e2</anchor>
      <arglist>(const size_t M, const size_t N, double tau, const vec_t &amp;v, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>householder_mh_subrow</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a88d49bbb28e37fcb88408cd58854bd77</anchor>
      <arglist>(mat_t &amp;M, const size_t ir, const size_t ic, const size_t nr, const size_t nc, const mat2_t &amp;M2, const size_t ir2, const size_t ic2, double tau)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>diagonal_has_zero</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ac1e075fbd9d9aaddce28df94fcd4baf7</anchor>
      <arglist>(const size_t N, mat_t &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aa5973786eb590c5b078d03d763c5054c</anchor>
      <arglist>(const size_t N, mat_t &amp;A, o2scl::permutation &amp;p, int &amp;signum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_svx</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>abb6fa6e1a27d9c31b8ee92b1341b01d1</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU, const o2scl::permutation &amp;p, vec_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_decomp_alt</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a90a918ae5c2f983de9835b2bf32e8321</anchor>
      <arglist>(const size_t N, mat_t &amp;A, o2scl::permutation &amp;p, int &amp;signum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_solve</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a6061c9646e78d3cd469fe5a8f31d5c8e</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU, const o2scl::permutation &amp;p, const vec_t &amp;b, vec2_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_refine</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4e422d4448433a6182da5ff37d21ca8f</anchor>
      <arglist>(const size_t N, const mat_t &amp;A, const mat2_t &amp;LU, const o2scl::permutation &amp;p, const vec_t &amp;b, vec2_t &amp;x, vec3_t &amp;residual)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_invert</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>af8ceda387c6125f2daaa3ec5ff07bca4</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU, const o2scl::permutation &amp;p, mat2_t &amp;inverse)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>LU_det</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a7955241fbd4a975f2206f4a6a7d012ad</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU, int signum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>LU_lndet</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a1ff6c76948a6ff9e9e5e4d8f3e318a4e</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LU_sgndet</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a5bee71f59276e5382c14d3f55dd3b65d</anchor>
      <arglist>(const size_t N, const mat_t &amp;LU, int signum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_decomp_unpack&lt; arma::mat, arma::mat, arma::mat &gt;</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a93018c00cee28c8c8b9cd5b21ecc682f</anchor>
      <arglist>(const size_t M, const size_t N, arma::mat &amp;A, arma::mat &amp;Q, arma::mat &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_decomp_unpack&lt; Eigen::MatrixXd, Eigen::MatrixXd, Eigen::MatrixXd &gt;</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a8813376d2e48c84f134a5880d5b5bc19</anchor>
      <arglist>(const size_t M, const size_t N, Eigen::MatrixXd &amp;A, Eigen::MatrixXd &amp;Q, Eigen::MatrixXd &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ac9d84ed3a5e0bff52f863d056ba0894b</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_QTvec</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a22786228846e8f4ff6d5f9db89d1f699</anchor>
      <arglist>(const size_t M, const size_t N, const mat_t &amp;QR, const vec_t &amp;tau, vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_unpack</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a92d3ef4178dd4cff31de2e3404029957</anchor>
      <arglist>(const size_t M, const size_t N, const mat1_t &amp;QR, const vec_t &amp;tau, mat2_t &amp;Q, mat3_t &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_svx</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a0da4aa588092693f5fe9471af70199f6</anchor>
      <arglist>(size_t M, size_t N, const mat_t &amp;QR, const vec_t &amp;tau, vec2_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_solve</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4e79f2184f8b901e7fb6927c344b6ada</anchor>
      <arglist>(size_t N, const mat_t &amp;QR, const vec_t &amp;tau, const vec2_t &amp;b, vec3_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_update</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a78da8f058be3e85b901ad9d1a1d671d2</anchor>
      <arglist>(size_t M, size_t N, mat1_t &amp;Q, mat2_t &amp;R, vec1_t &amp;w, vec2_t &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_decomp_unpack</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aab670dc686bfdb814364471e15fec039</anchor>
      <arglist>(const size_t M, const size_t N, mat_t &amp;A, mat2_t &amp;Q, mat3_t &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QRPT_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a0ae2fb75b1a1356209440c033a63b2d2</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;tau, o2scl::permutation &amp;p, int &amp;signum, vec2_t &amp;norm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SV_decomp</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4687b73955364bcecbcc68de772f32ea</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, mat2_t &amp;V, vec_t &amp;S, vec2_t &amp;work)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SV_decomp_mod</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aecc2d7c07fec0f27560462cafe7dff7f</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, mat2_t &amp;X, mat3_t &amp;V, vec_t &amp;S, vec2_t &amp;work)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SV_solve</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ae2e3d8b8d2ab10f6fdaccecb8ca1fbdd</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;U, mat2_t &amp;V, vec_t &amp;S, vec2_t &amp;b, vec3_t &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SV_decomp_jacobi</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a1c8ffde83077590ee8a778c6f510070e</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, mat2_t &amp;Q, vec_t &amp;S)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>balance_columns</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ad57bdf0238e1809427f63972507e3a57</anchor>
      <arglist>(size_t M, size_t N, mat_t &amp;A, vec_t &amp;D)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>chop_small_elements</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a12ef037c607bfd107ccfaf7b4cfc66c5</anchor>
      <arglist>(size_t N, vec_t &amp;d, vec2_t &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>trailing_eigenvalue</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aa8404ace1b30bf263d45fac46a22d0b3</anchor>
      <arglist>(size_t n, const vec_t &amp;d, const vec2_t &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_schur</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a7c0d16f12293d34472bc53435dc91875</anchor>
      <arglist>(double d0, double f0, double d1, double &amp;c, double &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>svd2</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aa360be7ba858d83d1c868c419f19b975</anchor>
      <arglist>(size_t M, size_t N, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;U, mat2_t &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>svd2_sub</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aa671b123e0da85c5746bb58844530ce2</anchor>
      <arglist>(size_t M, size_t N, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;U, mat2_t &amp;V, size_t a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>chase_out_intermediate_zero</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a458d4b02a2aa6bc533dccb4c80397356</anchor>
      <arglist>(size_t M, size_t n, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;U, size_t k0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>chase_out_trailing_zero</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a3214efafd719353088b8629c165f79d9</anchor>
      <arglist>(size_t N, size_t n, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>chase_out_trailing_zero_sub</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>aec59b8dccf3d8e7abd3966f6bc38af87</anchor>
      <arglist>(size_t N, size_t n, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;V, size_t a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qrstep</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>afc85032c94252dcdc52c7e62032b0158</anchor>
      <arglist>(size_t M, size_t N, size_t n, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;U, mat2_t &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qrstep_sub</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ab1c32a3b53b3b67c33b87489d1f305f4</anchor>
      <arglist>(size_t M, size_t N, size_t n, vec_t &amp;d, vec2_t &amp;f, mat_t &amp;U, mat2_t &amp;V, size_t a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_tridiag_sym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4bfe3209ca2d4b0cdd1f2b2a62357b4e</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;offdiag, const vec3_t &amp;b, vec4_t &amp;x, size_t N, mem_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_tridiag_nonsym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>ae1722344a69ea7265a16f56c310cee0a</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;abovediag, const vec3_t &amp;belowdiag, const vec4_t &amp;rhs, vec5_t &amp;x, size_t N, mem_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_cyc_tridiag_sym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a591dd2d261378d3dad5ddd530b1e81ec</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;offdiag, const vec3_t &amp;b, vec4_t &amp;x, size_t N, mem_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_cyc_tridiag_nonsym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a5c5ca01a596698528724a6b4f7ff2b9a</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;abovediag, const vec3_t &amp;belowdiag, const vec4_t &amp;rhs, vec5_t &amp;x, size_t N, mem_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_tridiag_sym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a4daab14c9d2670f1a96f9ac856ad1936</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;offdiag, const vec3_t &amp;b, vec4_t &amp;x, size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_tridiag_nonsym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a150cd9732a35b49c86e99a3e3b96f228</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;abovediag, const vec3_t &amp;belowdiag, const vec4_t &amp;rhs, vec5_t &amp;x, size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_cyc_tridiag_sym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>a831220db53b8904764ff597931b2be4b</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;offdiag, const vec3_t &amp;b, vec4_t &amp;x, size_t N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve_cyc_tridiag_nonsym</name>
      <anchorfile>namespaceo2scl__linalg.html</anchorfile>
      <anchor>af785a50d45ff33ec0f3a6bfd607d8487</anchor>
      <arglist>(const vec_t &amp;diag, const vec2_t &amp;abovediag, const vec3_t &amp;belowdiag, const vec4_t &amp;rhs, vec5_t &amp;x, size_t N)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_linalg_bracket</name>
    <filename>namespaceo2scl__linalg__bracket.html</filename>
    <member kind="function">
      <type>int</type>
      <name>LU_decomp_array_2d</name>
      <anchorfile>namespaceo2scl__linalg__bracket.html</anchorfile>
      <anchor>ab8dbc08043d530bd1faa7b218fefd7e7</anchor>
      <arglist>(const size_t n, double A[][N], o2scl::permutation &amp;p, int &amp;signum)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_mks</name>
    <filename>namespaceo2scl__mks.html</filename>
    <member kind="variable">
      <type>const double</type>
      <name>helgc_tcb</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5ac3bbc1c4cd949578999d5614fec4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>helgc_tdb</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a1c0e2450c01c4874fe64c75edfba6e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>schwarzchild_radius</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aea9c09a159d1fe54703ba93d5d0da638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speed_of_light</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aa3c2322edb78659ed945bd3cdba1e097</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gravitational_constant</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a81a25b10c3ea3ddec1f7af8d596c5710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_h</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a55302e7564c9aa5391fe30ced77e2fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_hbar</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab8b28242f3cf4a2957024081893dc5fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>astronomical_unit</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aad867a13d1d94f0d813a138acc5e7146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>light_year</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a377cd4e21f9185d9e5641b530632f30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>parsec</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a50f61d06b6a2645343a8fd1c381aa735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>grav_accel</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a631a8e1546c961c59ddc7aa93141c03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_volt</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2c422ea99a9979a3e09afae1588f3c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_electron</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a9febd3bb3501948551d6d7edc147c3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_muon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aa36c4a7293abc7921a9e12ce61720abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_proton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>afb207e43d5694dcdae25a7170ff7b09f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_neutron</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ad4b8863d7e407e63ade27e940728679b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_deuteron</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab699e064f916ddc812cf21e0d60c6137</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_triton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a12109544e6feaaab83bb387f16edfb3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_helion</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a93fb2fffb5def540e252bade71247d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_alpha</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2430e944a69f5fb1b92e3d35c8bd46d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rydberg</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>af3780b105d3be466007c1f5746149a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>boltzmann</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a798c90131799c6015080acd0251a106c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_magneton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a08f2a78d2a2c8550d34af359707b456f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nuclear_magneton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a19b3681e23e45a3098002128ebd55ce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_magnetic_moment</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a790220a0f29fd588797830cf1458e431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>proton_magnetic_moment</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a657f93667e7af493122207cfce17bd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>molar_gas</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a1858ac81380b97fdd0cc7302a081466b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>standard_gas_volume</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab3940de0bca684faf71bccd5e87be86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>minute</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a3c311477e34d74280214f44fb76f0a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hour</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>acee084f675ff0460386821d026b94975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>day</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a7c2772b2d7b77490cdf21182dbb7cedb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>week</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab18181775116d718856b074fd448edde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a3c198d2748fe9ba9c80703db62ce76d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>foot</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ac52987428ec4ceea6f772455c2a09331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>yard</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a32cba98670f8483ab01b4a4d2dc61a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mile</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a803bc01c26817701bfb953e40539e094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nautical_mile</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a78e84f6ec237d27bec0bce1be93cfde0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fathom</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>af7f73d0f8974a1c53d7c28225b170f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mil</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a1fe9293c4a6c6cc086794bd78921c7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>point</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a57bae1d21d0fbf66fd5d6721c64e4213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>texpoint</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a24b54e51b7d67fefc7ce1a6b70f4b284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>micron</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a77f9b8ce2b63619874808b7e24393f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>angstrom</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a32aca1481c027f804b829f15ab2df5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hectare</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>af9ee4183b8b5d9b4fcdf10a54391b746</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>acre</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a6d7d1af14d320eaaec1cc0987beb0db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>barn</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aa4a6f207175865c7f72beea776b2d86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>liter</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a12390fd22296925eddb1efab87997683</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>us_gallon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a990746c7028314a1da4dfde8d604d205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>quart</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a520de645feb2d8e7816761b8f15fce88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pint</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a6a74fa757bd8a89b6aebe093c5670524</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>cup</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab7fd22c6d580bfd080dbcc109339b726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fluid_ounce</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a3c96987aa0c700561d0c5a49f19b2a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>tablespoon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a895dacb615cc8e17c0db4a5761bee511</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>teaspoon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aa54bbcbce1fa5fb343c5a2716ae04f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>canadian_gallon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aa9e335e3192d30dfe7c1693757f01bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_gallon</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a3e5a4c3c633146bc5dbc032bfb21db0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>miles_per_hour</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a6715ac0214165171a0c14ff465d9e6e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilometers_per_hour</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>adbd77a5410bfdcca89687f737d947107</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>knot</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>afcd825c948a3ea325817f735c934a2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_mass</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a1ddc68735d87e2cde834aa0e0cbf9add</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ounce_mass</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5ce9f4b91fefb49fca83f1fa0b6307a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2cc17fd7f109229b1fb3d5e913b34e15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>metric_ton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a535d7d1c0c20c2ec8567b34caf50fa62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_ton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a217a37b532f82c677f87873bee0c8803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>troy_ounce</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a177b3e209480cd2fb162f07c461716cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>carat</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a43ae14cec47ec7d3148a08752d11da5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>unified_atomic_mass</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>af81fafd9134a92c6b8e18cff315c4b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gram_force</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2f60b478c844c1cbcdd9cbc0d46a1c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_force</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a447a8b967e9f6ae15ab1e55185e88d1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilopound_force</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>af8ec8118b9c1059372dc046009c7f199</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poundal</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2700870c93f78385a4c23caee5c95f2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>calorie</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a98c00afca1ca16c515c5b418cc0e8081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>btu</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aabe07945229cdfa5c86fe1fba3234851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>therm</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a6bd8d660db94693a1e62fa0568e49b11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>horsepower</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ac1f4311a969edfc239e61f0952035f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bar</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a041be36dba860fc1d984d1edca037521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>std_atmosphere</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a835e09511d5c907b5dd7e52c9696b1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>torr</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5bc9476f992b4834045aabf1b1053990</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>meter_of_mercury</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aea209aaa1e537253203306c89a927832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_mercury</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5b7fe820340da7a8a4faab50bfac64f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_water</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ad1722eb03026f3254494a968355956a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>psi</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a34e9111d6c191ac9c88d405a20d87d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poise</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ae7cc05bb3cb3fb72fa596973b3ac990f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stokes</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a8c5f47e0b965de7eb04de6b55acc203a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>faraday</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5cb8da61ca9b9240a189a473bd4e10c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_charge</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5c461e6c022bff827a32b9d375597650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gauss</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a4f14f4b47a07c1e1da150f4f8e6ceea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stilb</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2a06e8ddd8b1189d6e4810e4883b94a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lumen</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a070216a63df0b3652e2173c58996a5c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lux</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a685df717e36202fff07188c3fb8fee06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>phot</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a6a42c284618e67233655ca4aef10520e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footcandle</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a50d3621393fdb8b8dc86d88c2c66ec47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lambert</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>acc4bc24ccd41b2916b158fc8f0789b48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footlambert</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a08200e31d698ee5bb68beecb809808de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>curie</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ac67a5bf657eaf5e22edb418167a7e988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>roentgen</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>aead7ec1844306cd1fc5dfbbb88b7b583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rad</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5ed6674ded5a75644985702b56dfab54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>solar_mass</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a506eaef591f9ce66c8074952ce68692d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_radius</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ad0214a5411724c6ca60d89641c2932aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>newton</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a063a611acfb44363578ecc6510aae902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>dyne</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a029e8d45cf48910a848de8fd6135a0d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>joule</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a2defd2b8061d8a4834083a7e91ee35b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>erg</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a1bc369630e42ba37c7bb4e04d5dd52c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stefan_boltzmann_constant</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>acad7d321ebdb6f63555ed8c4611495c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>thomson_cross_section</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>ab76e352dc3e74958e47fd79fb19cc06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>vacuum_permittivity</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a5d4b238092be191a0f67d3d4c7a9b252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>vacuum_permeability</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a31c60a786712becee3f13530d52c2b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>Gfermi</name>
      <anchorfile>namespaceo2scl__mks.html</anchorfile>
      <anchor>a7b1b5427dcc5ada8d7210cbc85951757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>o2scl_mksa</name>
    <filename>namespaceo2scl__mksa.html</filename>
    <member kind="variable">
      <type>const double</type>
      <name>helgc_tcb</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a6f5594c413153d83959d929cc0a63d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>helgc_tdb</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ae6501b8257cf5bee18669903770f6f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>schwarzchild_radius</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>add51bae0b5f8e6f95dc26c7501762751</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speed_of_light</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a813c0f49a29b34a96772789fe4bd2828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gravitational_constant</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ae7b6a2103f95bc60e3f7bddcb6adee6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_h</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a3c88afbc9cabc02a3928b9bfc23fbc72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>plancks_constant_hbar</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>adce9ec90fef2f269f625d49467715626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>astronomical_unit</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ad0e260a65fa74d1ffa19685b4e8ca685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>light_year</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a6c4c29e68d21fa89c20fddee58857299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>parsec</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a787cccb1b2bf66bcaad91c144d5eda8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>grav_accel</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ad75b72c67235b19a457b8fad8765fb31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_volt</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a337aca3f3e3eb0eafb1bbcd9452ddd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_electron</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac17c980d04ea0850f05ba443e6e308f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_muon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a84079c80d40a41c917dbf8d3cd9975f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_proton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a07303e6de9c38c0747c96b9ff7dff196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_neutron</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a724b565c2bc86efd653d06db0499345d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_deuteron</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab0780507fdeae220555c92e14d61eb38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_triton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a114b6a77a6ad2474e19abbb04ebc510f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_helion</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a40616268cb230e920f36bcc95473cdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mass_alpha</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a0826aa59024750766215ecb6d234e48f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rydberg</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a11a510620d017bb7add0ea157d682065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>boltzmann</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af55f178ab09f67afa532db40d365d977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_magneton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a0aab4c2887b1a64d0e6b85215b65f734</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nuclear_magneton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab33448a00e7a004143d4bb972a1b6bfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_magnetic_moment</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac4141458b4d852e4f99a05cca50fe7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>proton_magnetic_moment</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a368b731cd8520556fe2db3b806889170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>molar_gas</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af004c8b2b37ee8b294757b4ce1b711bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>standard_gas_volume</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a9389d5c61cddbbb8be5126e2eff558e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>minute</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a74bbc6de7a9becbc5109c1ccc4590cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hour</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a20ab8f5f22cd8f04d115689f39a6da3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>day</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a88655646e328dc44d4e4e16af4420872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>week</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a8617f011e1e650bc8b170b126f8fe72f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a0788a01a1a511356d7a246d2e7dac21c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>foot</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac4ea16a5f4974e977234ac2c13759361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>yard</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a9a39587493f28bd54e8e51c4fc963002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mile</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a95a0fbda2625c32e678e8d8bc218c3f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>nautical_mile</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af30a894aab6737c28429377ee07e7799</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fathom</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a9be049ca831dc92bd3b6e7280c9190a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>mil</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a99f892f1afdaffb4c6bd45b54c529184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>point</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>acef4af09c0109b5af516bc057ef8bea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>texpoint</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab8cb52376e5b4f36ee3291d055a1b101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>micron</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a346340cd120fc93f645e5a49447475fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>angstrom</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>aabdb1be6698578d7200a07bf46b2b456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>hectare</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a159f75e89077fb214f1dd90cfb529fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>acre</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a8a48296f6dc4257cf2b7b52b6e54bb65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>barn</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac1f8978c431fd47eac83b8c797c0f825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>liter</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a3444b1f79fcb0ab3c0af3cac5a3b3c95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>us_gallon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ae93eea50c119cf362a97fb47c9280494</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>quart</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a1933c000847940b8ba1916823caa94f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pint</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>aa73b3a1f9444a8aae7945323b19f1432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>cup</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a7b4c35c21b8915433ac82199884089e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fluid_ounce</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a31a4eb0be1f5b67e29c9282e186f18c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>tablespoon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a9308b3952895fc7ee140186f2bb0d64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>teaspoon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ae23f46ffc49b61a16d847044fc4a2247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>canadian_gallon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a79bfc9a385cb32e877500280f9f5777e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_gallon</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>aa23da3e151208e431930dbbb2c7e1fa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>miles_per_hour</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>aefcb6ce37bee660b8f8d0a0f6fd6a891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilometers_per_hour</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a8566ebaf3784efc61d1093a457eb0948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>knot</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a8d52e134b018703dac41ed9a9ed5a060</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_mass</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a608a3c7f462ee12854e63b374eee4eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ounce_mass</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab19cb60431cea031bdecd158d899f518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>ton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a75816872e1e6e522345d50f4ba96e8df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>metric_ton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a5c855ef1decb1ab1d077b388b5e43f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>uk_ton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a45135ad67f666c7aed62e207e1db915a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>troy_ounce</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ad84078d2fc6f9e6d6356c7370bcba50a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>carat</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a199676be18daad0b5fe5d3b42cf3f8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>unified_atomic_mass</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ad629334bdb4f42c96af1a33b3cc5a2ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gram_force</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a00b6edbc8c97af0695d887d28774523b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>pound_force</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a5e12c62a84cf017348ac494107c1c68f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>kilopound_force</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ad328789c0881966dca1299f40b164b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poundal</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a48bffa7a0284558ce484187835c50e59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>calorie</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a1e26b9a271fcdb3660c93b9b11ae35e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>btu</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab19bbdc075ed2cdbad0b79c9c7432e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>therm</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a990db855f7c60a659c9360052d10c36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>horsepower</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a706347b92250f84855f40b9794f22150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bar</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a9b778418019fc960a1c7e7b687342d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>std_atmosphere</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ade78e4df1b973b4710f961da71c38ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>torr</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>acf4a82a82a000f4a573ba20e2f5f367c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>meter_of_mercury</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a78d0e737641756000406783460c87f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_mercury</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac804f0cec73e94e4c68c30d8918157d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>inch_of_water</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ac8633749d38bb2fc2d704a4504af51d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>psi</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a314f8f4873e764debaeb3978e3564d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>poise</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a78c934d462a005734d54e77fbfa85d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stokes</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a53ec7ffefce105807201afdefd34c0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>faraday</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>abdf1d7a0c5999821a3a7f6108c677824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>electron_charge</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af8f5a1eaf62611a3c7bc0b1187215f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>gauss</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ab3d67e5812160bd0695baf5b3cce87f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stilb</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a460e53623d1601bb081cfebca5e062b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lumen</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a21b529586c081d94ff3b43181422f520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lux</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a28a87e8b4305d6d96cde4812f066a36f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>phot</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a30e7915d7cd52f1060aeae4ffe44f532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footcandle</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a0e2eefc73482a351bed4539bd30b8d9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>lambert</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af1994ed4f74894b8c6a61fb7f7b3278b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>footlambert</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a03d21ed2ef1b0a8258adc3e2962d3e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>curie</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>adc5c143eba8924aebe3cd4c34830d316</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>roentgen</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>ae73762576e1c7027dc2ed1d53b20cb16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>rad</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>addc6eea04dd6a0cec6cf938adb6fe847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>solar_mass</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a5f13cca024ddbc368ade6a264e956006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>bohr_radius</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a8bf7187ceffe0a8ba67f352c6236c950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>newton</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a4de81b52260a2e2e32db4932c3ef64e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>dyne</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a606830b5a290c55d0871d3a8da642a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>joule</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af1fca678e29dd8a29dc15d1617d736fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>erg</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>acd61d717cd8062f09788d80b15a2e316</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stefan_boltzmann_constant</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a40f8b964d2a40b1e0f28eaf9a407f4d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>thomson_cross_section</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>aa236b1e43a45715e91790e4f01709d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>vacuum_permittivity</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a829aff17f9214b5ddfb79ed3b27ce44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>vacuum_permeability</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>a92da14e638cd22b91a4c1b64972a2406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>Gfermi</name>
      <anchorfile>namespaceo2scl__mksa.html</anchorfile>
      <anchor>af28872bdafb2d32ed1e377b5b242a1b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>install_section</name>
    <title>Installation</title>
    <filename>install_section</filename>
    <docanchor file="install_section" title="Installation instructions">installdir_subsect</docanchor>
    <docanchor file="install_section" title="Compiling on Linux">installlinux_subsect</docanchor>
    <docanchor file="install_section" title="Compiling on Mac OS X">installmac_subsect</docanchor>
    <docanchor file="install_section" title="Optional linear algebra libraries">installopt_subsect</docanchor>
    <docanchor file="install_section" title="Range-checking">installrange_subsect</docanchor>
    <docanchor file="install_section" title="Optional physics libraries">installphys_subsect</docanchor>
    <docanchor file="install_section" title="More configure flags">installflags_subsect</docanchor>
    <docanchor file="install_section" title="Generation of documentation">installdoxygen_subsect</docanchor>
    <docanchor file="install_section" title="Uninstallation">uninstall_subsect</docanchor>
  </compound>
  <compound kind="page">
    <name>usage_section</name>
    <title>General Usage</title>
    <filename>usage_section</filename>
    <docanchor file="usage_section" title="Namespaces">namespace_subsect</docanchor>
    <docanchor file="usage_section" title="Documentation conventions">docconv_subsect</docanchor>
    <docanchor file="usage_section" title="Basic error handling">errorhand_subsect</docanchor>
    <docanchor file="usage_section" title="What is an error?">errorhand2_subsect</docanchor>
    <docanchor file="usage_section" title="GSL error codes and C++ exception types">exc_types_subsect</docanchor>
    <docanchor file="usage_section" title="Objects and scope">objscope_subsect</docanchor>
    <docanchor file="usage_section" title="Reference parameters">refparm_subsect</docanchor>
    <docanchor file="usage_section" title="Define constants">defconst_subsect</docanchor>
  </compound>
  <compound kind="page">
    <name>examples_section</name>
    <title>Compiling Examples</title>
    <filename>examples_section</filename>
  </compound>
  <compound kind="page">
    <name>related_section</name>
    <title>Related Projects</title>
    <filename>related_section</filename>
  </compound>
  <compound kind="page">
    <name>vecmat_section</name>
    <title>Arrays, Vectors, Matrices and Tensors</title>
    <filename>vecmat_section</filename>
    <docanchor file="vecmat_section" title="Introduction">vmintro_subsect</docanchor>
    <docanchor file="vecmat_section" title="Template classes for vector objects">vectype_subsect</docanchor>
    <docanchor file="vecmat_section" title="Template classes for matrix objects">mattype_subsect</docanchor>
    <docanchor file="vecmat_section" title="Rows and columns vs. x and y">rowcol_subsect</docanchor>
    <docanchor file="vecmat_section" title="Generic vector functions">genvec_subsection</docanchor>
    <docanchor file="vecmat_section" title="Vector and matrix output">vmout_subsect</docanchor>
    <docanchor file="vecmat_section" title="Tensors">tensor_subsect</docanchor>
    <docanchor file="vecmat_section" title="I/O and contiguous storage">vec_io_cont_subsect</docanchor>
  </compound>
  <compound kind="page">
    <name>linalg_section</name>
    <title>Linear Algebra</title>
    <filename>linalg_section</filename>
    <docanchor file="linalg_section" title="Specializations for Armadillo and Eigen">linspec_subsect</docanchor>
  </compound>
  <compound kind="page">
    <name>intp_section</name>
    <title>Interpolation</title>
    <filename>intp_section</filename>
    <docanchor file="intp_section" title="Lookup and binary search">search_subsect</docanchor>
    <docanchor file="intp_section" title="Two and higher-dimensional interpolation">highdintp_subsect</docanchor>
    <docanchor file="intp_section" title="Inverse interpolation and related functions">invintp_subsect</docanchor>
    <docanchor file="intp_section" title="Derivatives and integrals on a fixed grid">fixedgrid_subsect</docanchor>
  </compound>
  <compound kind="page">
    <name>const_section</name>
    <title>Physical Constants</title>
    <filename>const_section</filename>
  </compound>
  <compound kind="page">
    <name>funct_section</name>
    <title>Function Objects</title>
    <filename>funct_section</filename>
    <docanchor file="funct_section" title="Lambda functions and std::mem_fn">lambda_fun_sect</docanchor>
    <docanchor file="funct_section" title="Function object example">ex_lambda_sect</docanchor>
    <docanchor file="funct_section" title="General comments about function objects">fptr_details_sect</docanchor>
    <docanchor file="funct_section" title="Function object example">ex_fptr_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>table_section</name>
    <title>Data Tables</title>
    <filename>table_section</filename>
  </compound>
  <compound kind="page">
    <name>string_section</name>
    <title>String Manipulation</title>
    <filename>string_section</filename>
  </compound>
  <compound kind="page">
    <name>diff_section</name>
    <title>Differentiation</title>
    <filename>diff_section</filename>
    <docanchor file="diff_section" title="Differentiation example">ex_deriv_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>inte_section</name>
    <title>Integration</title>
    <filename>inte_section</filename>
    <docanchor file="inte_section" title="One-dimensional integration">onedinte_subsect</docanchor>
    <docanchor file="inte_section" title="GSL-based integration routines">gslinte_subsect</docanchor>
    <docanchor file="inte_section" title="GSL-based integration error messages">gsl_inte_err_subsect</docanchor>
    <docanchor file="inte_section" title="Multi-dimensional integration routines">multiinte_subsect</docanchor>
    <docanchor file="inte_section" title="One-dimensional integration example">integ_example_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>poly_section</name>
    <title>Roots of Polynomials</title>
    <filename>poly_section</filename>
    <docanchor file="poly_section" title="Polynomial solver example">ex_poly_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>solve_section</name>
    <title>Equation Solving</title>
    <filename>solve_section</filename>
    <docanchor file="solve_section" title="One-dimensional solvers">onedsolve_subsect</docanchor>
    <docanchor file="solve_section" title="Multi-dimensional solvers">multisolve_subsect</docanchor>
    <docanchor file="solve_section" title="Multi-dimensional solver example">ex_mroot_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>min_section</name>
    <title>Minimization</title>
    <filename>min_section</filename>
    <docanchor file="min_section" title="Multidimensional minimizer example">ex_mmin_sect</docanchor>
    <docanchor file="min_section" title="Minimizer fixing variables">ex_mmin_fix_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>conmin_section</name>
    <title>Constrained Minimization</title>
    <filename>conmin_section</filename>
    <docanchor file="conmin_section" title="Constrained minimization example">ex_conmin_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>mcarlo_section</name>
    <title>Monte Carlo Integration</title>
    <filename>mcarlo_section</filename>
    <docanchor file="mcarlo_section" title="Monte Carlo integration example">mcarlo_example_sect</docanchor>
    <docanchor file="mcarlo_section" title="Analysis of results from numerical simulations">expval_subsect</docanchor>
  </compound>
  <compound kind="page">
    <name>anneal_section</name>
    <title>Simulated Annealing</title>
    <filename>anneal_section</filename>
    <docanchor file="anneal_section" title="Simulated annealing example">ex_anneal_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>fit_section</name>
    <title>Least-Squares Fitting</title>
    <filename>fit_section</filename>
  </compound>
  <compound kind="page">
    <name>ode_section</name>
    <title>Ordinary Differential Equations</title>
    <filename>ode_section</filename>
    <docanchor file="ode_section" title="Ordinary differential equations example">ex_ode_sect</docanchor>
    <docanchor file="ode_section" title="Stiff differential equations example">ex_stiff_sect</docanchor>
    <docanchor file="ode_section" title="Iterative solution of ODEs example">ex_ode_it_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>rng_section</name>
    <title>Random Number Generation</title>
    <filename>rng_section</filename>
  </compound>
  <compound kind="page">
    <name>tintp_section</name>
    <title>Higher-dimensional Interpolation</title>
    <filename>tintp_section</filename>
    <docanchor file="tintp_section" title="Two-dimensional interpolation">tintp_subsect</docanchor>
    <docanchor file="tintp_section" title="Multi-dimensional interpolation">mintp_subsect</docanchor>
    <docanchor file="tintp_section" title="Interpolation on a rectangular grid">ex_interp2_sect</docanchor>
    <docanchor file="tintp_section" title="Interpolation of randomly spaced points">ex_interp2_planar_sect</docanchor>
    <docanchor file="tintp_section" title="Contour lines">ex_contour_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>gslcheb_section</name>
    <title>Chebyshev Approximation</title>
    <filename>gslcheb_section</filename>
    <docanchor file="gslcheb_section" title="Chebyshev approximation example">ex_cheb_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>unitconv_section</name>
    <title>Unit Conversions</title>
    <filename>unitconv_section</filename>
  </compound>
  <compound kind="page">
    <name>hdf_section</name>
    <title>File I/O with HDF5</title>
    <filename>hdf_section</filename>
  </compound>
  <compound kind="page">
    <name>other_section</name>
    <title>Other Classes and Functions</title>
    <filename>other_section</filename>
  </compound>
  <compound kind="page">
    <name>lset_section</name>
    <title>Library Settings</title>
    <filename>lset_section</filename>
  </compound>
  <compound kind="page">
    <name>team_section</name>
    <title>Development Team</title>
    <filename>team_section</filename>
  </compound>
  <compound kind="page">
    <name>design_section</name>
    <title>Design Considerations</title>
    <filename>design_section</filename>
    <docanchor file="design_section" title="Error handling">errdesign_subsect</docanchor>
    <docanchor file="design_section" title="Memory allocation functions">memalloc_subsect</docanchor>
    <docanchor file="design_section" title="Vector design">vecdesign_subsect</docanchor>
    <docanchor file="design_section" title="Define constants and macros">define_subsect</docanchor>
    <docanchor file="design_section" title="Parameter ordering">paramorder_subsection</docanchor>
    <docanchor file="design_section" title="Global objects">global_subsect</docanchor>
    <docanchor file="design_section" title="Thread safety">thread_subsect</docanchor>
    <docanchor file="design_section" title="Documentation design">docdesign_subsect</docanchor>
    <docanchor file="design_section" title="Copyright notices">crightfoo_subsect</docanchor>
    <docanchor file="design_section" title="Design plans">futurework_subsect</docanchor>
  </compound>
  <compound kind="page">
    <name>license_section</name>
    <title>License Information</title>
    <filename>license_section</filename>
    <docanchor file="license_section" title="Licenses">lic_index_section</docanchor>
    <docanchor file="license_section" title="GNU General Public License Version 3">gplv3_section</docanchor>
    <docanchor file="license_section" title="HDF5 License">hdf5_lic_section</docanchor>
    <docanchor file="license_section" title="GNU Free Documentation License">gnu_doc_lic_section</docanchor>
  </compound>
  <compound kind="page">
    <name>ack_section</name>
    <title>Acknowledgements</title>
    <filename>ack_section</filename>
  </compound>
  <compound kind="page">
    <name>ref_section</name>
    <title>Bibliography</title>
    <filename>ref_section</filename>
    <docanchor file="ref_section">Bader83</docanchor>
    <docanchor file="ref_section">Berntsen91</docanchor>
    <docanchor file="ref_section">Birgin00</docanchor>
    <docanchor file="ref_section">Brest06</docanchor>
    <docanchor file="ref_section">Broyden65</docanchor>
    <docanchor file="ref_section">Bus75</docanchor>
    <docanchor file="ref_section">Cash90</docanchor>
    <docanchor file="ref_section">Cormen09</docanchor>
    <docanchor file="ref_section">EngelnMullges96</docanchor>
    <docanchor file="ref_section">Fletcher87</docanchor>
    <docanchor file="ref_section">Freedman81</docanchor>
    <docanchor file="ref_section">Fritsch80</docanchor>
    <docanchor file="ref_section">Galassi09</docanchor>
    <docanchor file="ref_section">Garbow80</docanchor>
    <docanchor file="ref_section">Genz80</docanchor>
    <docanchor file="ref_section">Genz83</docanchor>
    <docanchor file="ref_section">Golub96</docanchor>
    <docanchor file="ref_section">Hairer09</docanchor>
    <docanchor file="ref_section">Kelley99</docanchor>
    <docanchor file="ref_section">Krabs83</docanchor>
    <docanchor file="ref_section">Lepage78</docanchor>
    <docanchor file="ref_section">Lewin81</docanchor>
    <docanchor file="ref_section">Longman58</docanchor>
    <docanchor file="ref_section">Luzum11</docanchor>
    <docanchor file="ref_section">Mohr12</docanchor>
    <docanchor file="ref_section">More79</docanchor>
    <docanchor file="ref_section">More80</docanchor>
    <docanchor file="ref_section">Nelder65</docanchor>
    <docanchor file="ref_section">Piessens83</docanchor>
    <docanchor file="ref_section">Press90</docanchor>
    <docanchor file="ref_section">Prince81</docanchor>
    <docanchor file="ref_section">Rutishauser63</docanchor>
    <docanchor file="ref_section">Scott79</docanchor>
    <docanchor file="ref_section">Steffen90</docanchor>
    <docanchor file="ref_section">Storn97</docanchor>
    <docanchor file="ref_section">Tolstov62</docanchor>
    <docanchor file="ref_section">Wynn56</docanchor>
  </compound>
  <compound kind="page">
    <name>dev_page</name>
    <title>Developer Guidelines</title>
    <filename>dev_page</filename>
  </compound>
  <compound kind="page">
    <name>o2scl_python_section</name>
    <title>Python Integration</title>
    <filename>o2scl_python_section</filename>
  </compound>
  <compound kind="page">
    <name>dl_page</name>
    <title>Download O2scl</title>
    <filename>dl_page</filename>
  </compound>
  <compound kind="page">
    <name>hist_section</name>
    <title>Histograms</title>
    <filename>hist_section</filename>
  </compound>
  <compound kind="page">
    <name>algebraic_section</name>
    <title>Algebraic Function Evaluation</title>
    <filename>algebraic_section</filename>
  </compound>
  <compound kind="page">
    <name>acol_section</name>
    <title>The &apos;acol&apos; Command-line Utility</title>
    <filename>acol_section</filename>
  </compound>
  <compound kind="page">
    <name>para_section</name>
    <title>Parallel Programming with O2scl</title>
    <filename>para_section</filename>
  </compound>
  <compound kind="page">
    <name>mcmc_section</name>
    <title>Probability Distributions and Markov Chain Monte Carlo</title>
    <filename>mcmc_section</filename>
    <docanchor file="mcmc_section" title="Probability distributions">probdist_subsect</docanchor>
    <docanchor file="mcmc_section" title="Markov chain Monte Carlo">mcmc_subsect</docanchor>
    <docanchor file="mcmc_section" title="MCMC example">ex_mcmc_sect</docanchor>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index" title="O2scl User&apos;s Guide (v0.921)">user_guide_title</docanchor>
    <docanchor file="index" title="Quick Reference to User&apos;s Guide">toc_section</docanchor>
  </compound>
</tagfile>
